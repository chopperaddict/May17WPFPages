<Page x:Class="WPFPages.Views.Page5"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WPFPages.Views" 
	 xmlns:wpfpages="clr-namespace:WPFPages" 
	 xmlns:viewmodels="clr-namespace:WPFPages"	
	 xmlns:MyData="clr-namespace:WPFPages.Views" 
	 mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Page5"
	 >

	<Page.Resources>
		<Color x:Key="Fgrnd">#3cdb84</Color>
		<MyData:ItemsCollection x:Key="AllItems"/>

		
		<ControlTemplate x:Key="template">
			<Canvas>
				<Canvas.RenderTransform>
					<RotateTransform Angle="12"/>
				</Canvas.RenderTransform>
				<Ellipse Height="70" Width="120"
                     Fill="{Binding RelativeSource={RelativeSource TemplatedParent},
					Path=Background}">
				</Ellipse>
				
				<ContentPresenter Margin="19"
                      Content="{Binding RelativeSource={RelativeSource 
                      TemplatedParent},Path=Content}"/>
			</Canvas>
		</ControlTemplate>
		
		<!--Use a ControlTemplate with VisualStyle to control mouseover-->
		<ControlTemplate x:Key="roundbutton" TargetType="Button">
			<Grid>
				<!--How to make the button change color slowly-->
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup Name="CommonStates">
						<VisualState Name="Normal">
							<Storyboard>
								<ColorAnimation Storyboard.TargetName="backgroundElement" 
								   Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
								   To="{TemplateBinding Background}"
								   Duration="0:0:0.5"/>
							</Storyboard>
						</VisualState>
						<VisualState Name="MouseOver">
							<Storyboard>
								<ColorAnimation Storyboard.TargetName="backgroundElement" 
								   Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
								   To="Red" 
								   Duration="0:0:0.5"/>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Ellipse x:Name="backgroundElement" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding Foreground}" />
				<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
			</Grid>

			<!--Std method to Handle MouseOver
			This is commented out sp we can try the VisualStyle shown below-->
			<!--<ControlTemplate.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					-->
			<!--// NB we are referring to the named ellipse "backgroundElement" above-->
			<!--
					<Setter Property="Fill" TargetName="backgroundElement" Value="Green"/>
					-->
			<!--<Setter Property="Effect" TargetName="backgroundElement" Value=""/>-->
			<!--
				</Trigger>
			</ControlTemplate.Triggers>-->
		</ControlTemplate>



	</Page.Resources>

	<Grid DataContext="{Binding Itemscollection}" >
	<!--#region grid setup-->
		<Grid.Background>
			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
				<GradientStop Color="Black" Offset="0.97"/>
				<GradientStop Color="FloralWhite" Offset="0"/>
			</LinearGradientBrush>
		</Grid.Background>

		<Grid.RowDefinitions>
			<RowDefinition/>
			<RowDefinition/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="11"/>
			<ColumnDefinition/>
			<ColumnDefinition/>
			<ColumnDefinition/>
			<ColumnDefinition/>
			<ColumnDefinition/>
		</Grid.ColumnDefinitions>

		<Grid
			Grid.Row="0" Grid.Column="1" 
			 Grid.RowSpan="2" Grid.ColumnSpan="3" Margin="-2,0,2,0">

			<Grid.RowDefinitions>
				<RowDefinition Height="11"/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="11"/>
				<ColumnDefinition/>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
	<!--#endregion grid setup-->

			<Rectangle Grid.Row="1" Grid.Column="1"
				Fill="Red" Name="rectangle"
					Height="100" Stroke="Black"
					Canvas.Top="100" Canvas.Left="100"
						Margin="5"
					Width="{Binding ElementName=rectangle,
					Path=Height}"/>

			<Rectangle Grid.Row="2" Grid.Column="1"
				Fill="Blue" Height="100" Stroke="Black"
				Margin="5"
				Width="{Binding RelativeSource={RelativeSource Self},
				Path=Height}"/>

			<Canvas Name="Parent0"
				Grid.Row="3" Grid.Column="1">
				<Border Name="Parent1"
					Width="{Binding RelativeSource={RelativeSource Self},
					Path=Parent.ActualWidth}"
					Height="{Binding RelativeSource={RelativeSource Self},
					Path=Parent.ActualHeight}">
					<Canvas Name="Parent2">
						<Border Name="Parent3"
							Width="{Binding RelativeSource={RelativeSource Self},
								Path=Parent.ActualWidth}"
							Height="{Binding RelativeSource={RelativeSource Self},
								Path=Parent.ActualHeight}">
							<Canvas Name="Parent4">
								<TextBlock FontSize="14"
									Margin="5" Text="Display Ancestor name "/>
								<TextBlock FontSize="16" Margin="10,25,0,0" x:Name="tb1"
										Text="{Binding RelativeSource={RelativeSource 
										FindAncestor,
										AncestorType={x:Type Canvas},
										AncestorLevel=1},Path=Name}"
										Width="200" FontWeight="Bold"/>
							</Canvas>
						</Border>
					</Canvas>
				</Border>
			</Canvas>
			<StackPanel Grid.Row="4" Grid.Column="0" 
						Grid.RowSpan="3" Orientation="Vertical">
				<Canvas Name="ParentX">
					<Button   Margin="10"
					Template="{StaticResource template}" Height="0"
					Canvas.Left="0" Canvas.Top="0" Width="0">
						<TextBlock FontSize="22">Click me</TextBlock>
					</Button>
				</Canvas>
			</StackPanel>
			
			<Button Grid.Row="6" Grid.Column="1" Width="123" Height="55"
					   Template="{StaticResource roundbutton}">Templated Button

			</Button>

			<WrapPanel Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" Orientation="Vertical">
				<TextBlock FontSize="15"
					 Text="This left column shows various controls that" Foreground="Red"/>
				<TextBlock FontSize="15"
					 Text="are bound using an ObservableCollection" Foreground="Red"/>
			</WrapPanel>
			<ListBox Grid.Row="2" Grid.Column="2" Margin="4"
				    Background="Bisque" Foreground="Black"
				    DataContext="{StaticResource AllItems}" ItemsSource="{Binding}">
				<ListBox.ItemTemplate >
					<DataTemplate >
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="{Binding Title}"/>
						</StackPanel>
					</DataTemplate >
				</ListBox.ItemTemplate >
			</ListBox>
			
			<!--This is the method to use to access our Bound data if we 
			use an ObservableCollection as it's data access source-->
			<ListBox x:Name="lb1" Grid.Row="3" Grid.Column="2" Margin="4"
				    Background="Red" Foreground="White"
				     DataContext="{StaticResource AllItems}" ItemsSource="{Binding}">
				<!--we HAVE to use the following setup to declare our output functionality
				"wrapped" in the ItemTemplate/DataTemplate structure otherwise it will barf
				if we try to Bind to any particular field in our data
				--> 
				<ListBox.ItemTemplate >
					<DataTemplate >
						<WrapPanel Orientation="Horizontal">
							<TextBlock Text="{Binding Title}"/>
							<TextBlock Text="   Age:  "/>
							<TextBlock Text="{Binding Completion}"/>
						</WrapPanel>
					</DataTemplate >
				</ListBox.ItemTemplate >
			</ListBox>

			<ItemsControl Name="icTodoList"
					    Grid.Row="4" Grid.Column="2" 
						Grid.RowSpan="2" Grid.ColumnSpan="1"
					    Foreground="white" Background="Blue" Margin="4"
					    DataContext="{StaticResource AllItems}" ItemsSource="{Binding}">
				<!--We do NOT NEED to use ItemsSource or DataContext in the line above 
				IF in Code Behind we have set icTodoList.ItemsSource to "Items" 
				OR we have set this.DataContext = items -->
				<ItemsControl.ItemTemplate>
					<DataTemplate >
						<Grid Margin="5,0,0,5">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="100" />
							</Grid.ColumnDefinitions>
							<TextBlock Text="{Binding Title}" />
							<ProgressBar Grid.Column="1" Minimum="0" Maximum="100" Value="{Binding Completion}" />
						</Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>

		</Grid>
		
<!--Right hand grid-->
		<Grid Grid.Row="0" Grid.Column="3" 
			 Grid.RowSpan="2" Grid.ColumnSpan="3" Margin="-2,0,2,0">

			<Grid.RowDefinitions>
				<RowDefinition Height="11"/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="11"/>
				<ColumnDefinition/>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<ListBox x:Name="lb2"
				Grid.Row="2" Grid.Column="1" Margin="4"
				    Background="Bisque" Foreground="Black"
				    >
				<!--This Binding method requires a data object such as a List<T>
				and we set the ItemsSource in the Code behind with 
				ItemsSource=List<>-->

				<ListBox.ItemTemplate >
					<DataTemplate >
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="{Binding Title}"/>
							<TextBlock Text=" : "/>
							<TextBlock>
								<TextBlock.Text>
									<!--This gets the selected index from a different control
									and displays it in this TextBlock.
									We can use this technique to access most properties of other controls-->
									<Binding ElementName="lb1" Path="SelectedIndex"/>
								</TextBlock.Text>
							</TextBlock>
						</StackPanel>
					</DataTemplate >
				</ListBox.ItemTemplate >
			</ListBox>
			<!--Interesting object that demonstrates accessing various data items 
			from different sources - check the Binding statements for details-->
			<StackPanel Orientation="Vertical"
					  Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2"  Grid.RowSpan="8" Margin="4">
				<TextBlock Margin="10,10,10,10" FontWeight="Bold"
						 FontSize="10"> Pick a color from below list</TextBlock>
				<ListBox Name="mcListBox" Height="100" Width="120" FontSize="10" Margin="10,10,0,0" HorizontalAlignment="Left">
					<ListBoxItem>Orange</ListBoxItem>
					<ListBoxItem>Green</ListBoxItem>
					<ListBoxItem>Blue</ListBoxItem>
					<ListBoxItem>Gray</ListBoxItem>
					<ListBoxItem>LightGray</ListBoxItem>
					<ListBoxItem>Red</ListBoxItem>
				</ListBox>
				<TextBox Height="23" Name="textBox1" Width="120" Margin="10,10,0,0" HorizontalAlignment="Left">
					<TextBox.Text>
						<Binding ElementName="mcListBox" Path="SelectedItem.Content" />
					</TextBox.Text>
				</TextBox>
				<Canvas Margin="10,10,0,0" Height="100" Width="120" HorizontalAlignment="Left">
					<Canvas.Background>
						<Binding ElementName="mcListBox" Path="SelectedItem.Content" />
					</Canvas.Background>
				</Canvas>
			</StackPanel>
			
			
			<Border BorderBrush="Red" BorderThickness="1"
				   Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2"  Grid.RowSpan="8" Margin="4" Padding="12">
				<StackPanel Orientation="Vertical">
					<TextBlock Text="This column shows data "/>
					<TextBlock Text="from another control"/>
					<TextBlock Text="[lb2] on this page"/>
					<WrapPanel Orientation="Horizontal" Grid.ColumnSpan="2">
						<TextBlock Text="Width" Width="100" Height="25" Foreground="Black"/>
						<TextBlock Width="100" Height="25" Foreground="Black">
							<TextBlock.Text>
								<Binding ElementName="mcListBox" Path="Width"/>
							</TextBlock.Text>
						</TextBlock>
					</WrapPanel>
					<WrapPanel>
						<TextBlock Text="Height" Width="100" Height="25" Foreground="Black"/>
						<TextBlock>
							<TextBlock.Text>
								<Binding ElementName="mcListBox" Path="Height"/>
							</TextBlock.Text>
						</TextBlock>
					</WrapPanel>
					<WrapPanel>
						<TextBlock Text="Items Count" Width="100" Height="25" Foreground="Black"/>
						<TextBlock>
							<TextBlock.Text>
								<Binding ElementName="mcListBox" Path="Items.Count"/>
							</TextBlock.Text>
						</TextBlock>
					</WrapPanel>

					<WrapPanel>
						<TextBlock Text="Selected Item " Width="100" Height="25" Foreground="Black"/>
						<TextBlock>
							<TextBlock.Text>
								<Binding ElementName="mcListBox" Path="SelectedIndex"/>
							</TextBlock.Text>
						</TextBlock>
					</WrapPanel>
					<WrapPanel>
						<TextBlock Text="Background" Width="100" Height="25" Foreground="Black"/>
						<TextBlock>
							<TextBlock.Text>
								<Binding ElementName="mcListBox" Path="Background"/>
							</TextBlock.Text>
						</TextBlock>
					</WrapPanel>
					<WrapPanel>
						<TextBlock Text="Foreground" Width="100" Height="25" Foreground="Black"/>
						<TextBlock>
							<TextBlock.Text>
								<Binding ElementName="mcListBox" Path="Foreground"/>
							</TextBlock.Text>
						</TextBlock>
					</WrapPanel>


				</StackPanel>
			</Border>
			
			<Border BorderBrush="Blue" BorderThickness="1"
				   Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="1"  Grid.RowSpan="8" Margin="4">
				<StackPanel Orientation="Vertical">

					<StackPanel Margin="10">
						<TextBlock Text="M$  Example of Templates" Width="170" Height="25" Foreground="Black"/>
						<Label>Unstyled Button</Label>
						<Button>Button 1</Button>
						<Label>Rounded Button</Label>
						<!--Use the Template declared in our Resources section-->
						<Button Height="35" Template="{StaticResource roundbutton}"
							Background="Yellow"/>
					</StackPanel>
				</StackPanel>
			</Border>
		</Grid>
	</Grid>
</Page>
