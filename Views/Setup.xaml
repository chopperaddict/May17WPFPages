<Window x:Class="WPFPages.Views.Setup"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:WPFPages.Views"
		mc:Ignorable="d"
		Title="Application Settings" 
		Height="350" 
		Width="600"
		MaxHeight="430" 
		MaxWidth="800"
		MinHeight="430" 
		MinWidth="800"
	xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

	<Window.Resources>
		
			<!--<Style x:Key="ComboItemStyle1" TargetType="ComboBoxItem">
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Style.Triggers>
				--><!--Normal - Closed  up--><!--
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsMouseOver" Value="True"></Condition>
						<Condition Property="IsSelected" Value="True"></Condition>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="Chocolate"/>
					</MultiTrigger.Setters>
				</MultiTrigger>
				--><!--<Trigger Property="IsMouseOver" Value="False">
					<Setter Property="Background" Value="{StaticResource Cyan3}"/>
					<Setter Property="BorderThickness" Value="4"/>
					<Setter Property="Foreground" Value="{StaticResource  Black3}"/>
				</Trigger>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{StaticResource Black0}"/>
					--><!--<Setter Property="BorderThickness" Value="3"/>--><!--
					<Setter Property="Foreground" Value="{StaticResource  Red0}"/>
				</Trigger>-->
				<!--<Trigger Property="IsSelected" Value="True">
					<Setter Property="BorderBrush" Value="{StaticResource Red0}"/>
					<Setter Property="Background" Value="{StaticResource Blue0}"/>
					<Setter Property="Foreground" Value="{StaticResource  Red0}"/>
					<Setter Property="FontSize"  Value="11"/>
				</Trigger>--><!--
			</Style.Triggers>
		</Style>-->

		<Style x:Key="TextBox1" TargetType="TextBox">
			<Setter Property="VerticalContentAlignment"  Value="Center"/>
			<Setter Property="Padding"  Value="5"/>
			<Style.Triggers>
				<!--Normal - Closed  up-->
				<Trigger Property="IsMouseOver" Value="False">
					<Setter Property="Background" Value="{StaticResource Blue3}"/>
					<Setter Property="FontSize"  Value="12"/>
					<Setter Property="Foreground" Value="{StaticResource  Black0}"/>
				</Trigger>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{StaticResource Blue0}"/>
					<Setter Property="Foreground" Value="{StaticResource  White0}"/>
					<Setter Property="FontStyle" Value="Italic"/>
				</Trigger>
				<Trigger Property="IsFocused" Value="True">
					<Setter Property="Background" Value="{StaticResource Black0}"/>
					<Setter Property="Foreground" Value="{StaticResource White0}"/>
					<Setter Property="FontSize"  Value="15"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		
		
		<!--<LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFF0F0F0" Offset="0.0"/>
			<GradientStop Color="#FFE5E5E5" Offset="1.0"/>
			<GradientStop Color="Red" Offset="0.0"/>
			<GradientStop Color="AliceBlue" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
		<SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
		<SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
		<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
		<LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FF0000" Offset="0.0"/>
			<GradientStop Color="#FFDCECFC" Offset="1.0"/>
		</LinearGradientBrush>

		<SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
		
		<SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="Green"/>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="Green"/>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="Blue"/>
		<LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFEBF4FC" Offset="0.0"/>
			<GradientStop Color="#FFDCECFC" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
		<LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFDAECFC" Offset="0.0"/>
			<GradientStop Color="#FFC4E0FC" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
		<SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
		<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="Red"/>
		<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
		<LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFDAEBFC" Offset="0.0"/>
			<GradientStop Color="#FFC4E0FC" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>-->
		
		<!--<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="ClickMode" Value="Press"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border x:Name="templateRoot" Background="Red" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}" SnapsToDevicePixels="true">
							<Border x:Name="splitBorder" BorderThickness="1" BorderBrush="Transparent" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
								<Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
							</Border>
							<Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}" SnapsToDevicePixels="true">
								<Border x:Name="splitBorder" BorderThickness="1" BorderBrush="Transparent" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
									<Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
								</Border>
							</Border>
						<ControlTemplate.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
								<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
								<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
							</MultiDataTrigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
							</Trigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
								<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
								<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
							</MultiDataTrigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
							</Trigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
								<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
								<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
							</MultiDataTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
							</Trigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
								<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
								<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
							</MultiDataTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>-->
		
		<!--<ControlTemplate x:Key="ComboBoxTemplate1" TargetType="{x:Type ComboBox}">
			<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
				</Grid.ColumnDefinitions>
				<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
					<theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
						<Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
							<ScrollViewer x:Name="DropDownScrollViewer">
								<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
									<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
									</Canvas>
									<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</Grid>
							</ScrollViewer>
						</Border>
					</theme:SystemDropShadowChrome>
				</Popup>
				<ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
				<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
					<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
					<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
				</Trigger>
				<Trigger Property="HasItems" Value="false">
					<Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsGrouping" Value="true"/>
						<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
				</MultiTrigger>
				<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
					<Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
					<Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<Style x:Key="ComboStyle1" TargetType="{x:Type ComboBox}">
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			--><!--<Setter Property="Background" Value="{StaticResource Blue0}"/>--><!--
			<Style.Triggers>
				--><!--Normal - Closed  up-->
				<!--<Trigger Property="IsDropDownOpen" Value="False">
					<Setter Property="BorderThickness" Value="1"/>
					<Setter Property="BorderBrush" Value="{StaticResource Red0}"/>
					--><!--<Setter Property="border" Value="{StaticResource Blue0}"/>-->
					<!--<Setter Property="Foreground" Value="{StaticResource  Green0}"/>-->
					<!--<Setter Property="FontSize"  Value="11"/>--><!--
				</Trigger>
				--><!--Dropped down--><!--
				<Trigger Property="IsDropDownOpen" Value="True">
					<Setter Property="BorderBrush" Value="{StaticResource Yellow0}"/>
					<Setter Property="Background" Value="{StaticResource Yellow0}"/>
					<Setter Property="Foreground" Value="{StaticResource  Yellow0}"/>
					<Setter Property="FontSize"  Value="11"/>
				</Trigger>
				--><!--Mouseover--><!--
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="BorderBrush" Value="YellowGreen"/>
					<Setter Property="Background" Value="{StaticResource Blue0}"/>
					<Setter Property="Foreground" Value="{StaticResource  Red0}"/>
				</Trigger>
				<Trigger Property="IsMouseOver" Value="False">
					<Setter Property="BorderBrush" Value="{StaticResource Cyan0}"/>
					<Setter Property="Background" Value="{StaticResource Red0}"/>
					<Setter Property="Foreground" Value="{StaticResource  Blue0}"/>
				</Trigger>
				--><!--item Selected--><!--
				<Trigger Property="IsSelected" Value="True">
					<Setter Property="BorderBrush" Value="{StaticResource Cyan0}"/>
					<Setter Property="Background" Value="{StaticResource Blue0}"/>
					<Setter Property="Foreground" Value="{StaticResource  Red0}"/>
					<Setter Property="FontSize"  Value="15"/>
				</Trigger>--><!--
			</Style.Triggers>
		</Style>-->


		<Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Padding" Value="4,1"/>
			<!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
			<!--<Setter Property="Background" Value="{StaticResource Blue0}"/>
			<Setter Property="Foreground" Value="{StaticResource White0}"/>-->
			<!-- Custom value -->
			<!--<Setter Property="BorderBrush" Value="Red"/>-->
			<!-- Custom value -->
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Style.Triggers>
				<!--<MultiTrigger>
					<MultiTrigger.Conditions>
					<Condition  Property="IsMouseOver" Value="False"/>
					<Condition  Property="IsSelected" Value="True"/>
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter Property="Background" Value="{StaticResource Yellow0}"/>
					<Setter Property="Foreground" Value="Violet"/>
				</MultiTrigger.Setters>
				</MultiTrigger>-->

				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition  Property="IsMouseOver" Value="False"/>
						<Condition  Property="IsSelected" Value="False"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="{StaticResource Cyan2}"/>
						<Setter Property="Foreground" Value="{StaticResource Black1}"/>
					</MultiTrigger.Setters>
				</MultiTrigger>

				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition  Property="IsMouseOver" Value="True"/>
						<Condition  Property="IsSelected" Value="True"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="{StaticResource Green0}"/>
						<Setter Property="Foreground" Value="{StaticResource Red1}"/>
					</MultiTrigger.Setters>
				</MultiTrigger>
				
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition  Property="IsMouseOver" Value="True"/>
						<Condition  Property="IsSelected" Value="False"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="{StaticResource Yellow0}"/>
						<Setter Property="Foreground" Value="{StaticResource Red0}"/>
					</MultiTrigger.Setters>
				</MultiTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="Tb1" TargetType="{x:Type TextBlock}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Padding" Value="4,1"/>
			<!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
			<!--<Setter Property="Background" Value="{StaticResource Blue0}"/>
			<Setter Property="Foreground" Value="{StaticResource White0}"/>-->
			<!-- Custom value -->
			<!--<Setter Property="BorderBrush" Value="Red"/>-->
			<!-- Custom value -->
			<!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
			<Style.Triggers>
				<!--<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition  Property="IsMouseOver" Value="False"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="{StaticResource Cyan2}"/>
						<Setter Property="Width" Value="200"/>
						<Setter Property="Foreground" Value="{StaticResource Black1}"/>
					</MultiTrigger.Setters>
				</MultiTrigger>-->
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition  Property="IsMouseOver" Value="True"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="{StaticResource Yellow0}"/>
						<!--<Setter Property="Width" Value="{StaticResource ActualWidth}"/>-->
						<Setter Property="Foreground" Value="{StaticResource Red0}"/>
					</MultiTrigger.Setters>
				</MultiTrigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>

	<Window.Background>
		<!--  create an elegant left to right light-> Dark gradient as a background  -->
		<LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
			<GradientStop Offset="0" Color="#333333" />
			<GradientStop Offset="1" Color="#35F6FB" />
		</LinearGradientBrush>
	</Window.Background>
	<Grid Margin="0,0,14,0">
		<Grid.RowDefinitions>
			<RowDefinition Height="10"/>
			<RowDefinition Height="1*"/>
			<RowDefinition Height="184"/>
			<RowDefinition Height="10"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="10"/>
			<ColumnDefinition Width="150"/>
			<ColumnDefinition Width="150"/>
			<ColumnDefinition Width="250"/>
		</Grid.ColumnDefinitions>

		<DockPanel 
		     Grid.Row="1"
			Grid.RowSpan="2"
		     Grid.Column="1"
			Width="auto">
			
			<!--#region LEFT COLUMN TEXT-->
			<WrapPanel Orientation="Vertical"
    				DockPanel.Dock="Top"
				>
				<TextBlock 
					Height="30"
					
					Margin="0,10,0,0"
					Text="Default Text viewer" Foreground="{StaticResource Black0}"/>
				<TextBlock 					
					Height="30"
					Margin="0,10,0,0"
					Text="Startup Window" Foreground="{StaticResource Black0}"/>
				<TextBlock 					
					Height="30"
					Margin="0,0,0,0"
					Text="xxxxxxxxxxxxxxxx" Foreground="{StaticResource Black0}"/>
				<TextBlock 					
					Height="30"
					Margin="0,0,0,0"
					Text="xxxxxxxxxxxxxxxx" Foreground="{StaticResource Black0}"/>
				<TextBlock 					
					Height="30"
					Margin="0,0,0,0"
					Text="xxxxxxxxxxxxxxxx" Foreground="{StaticResource Black0}"/>
				<TextBlock 					
					Height="30"
					Margin="0,0,0,0"
					Text="xxxxxxxxxxxxxxxx" Foreground="{StaticResource Black0}"/>
				<TextBlock 					
					Height="30"
					Margin="0,0,0,0"
					Text="xxxxxxxxxxxxxxxx" Foreground="{StaticResource Black0}"/>
				<TextBlock 					
					Height="30"
					Margin="0,10,0,0"
					Text="SQL Connection string" Foreground="{StaticResource Black0}"/>
			</WrapPanel>

			<!--#endregion LEFT COLUMN TEXT-->
			
		</DockPanel>

		<!--__________________________________________________-->
		<DockPanel 
		     Grid.Row="1"
			Grid.RowSpan="2"
		     Grid.Column="2"
			Grid.ColumnSpan="2"
		     Background="Transparent" Margin="0,0,232,113">

			<!--#region DATA FIELDS-->
			<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
			<WrapPanel Orientation="Vertical" Width="627">
				<TextBox
					Height="30"
					Style="{StaticResource TextBox1}"
					Text="NotePad++.exe" 
					HorizontalAlignment="Center"
					Visibility="Visible"
					Width="160"/>
				<!--===============================================-->
				<ComboBox  x:Name="StartupWindow"
					Height="30"					
					Margin="0,10,0,0"
					SelectedIndex="0"					   
					HorizontalAlignment="Left"
					Width="160">
					<!--Style="{StaticResource ComboStyle1}"-->

					<ComboBox.ItemContainerStyle>
						<Style TargetType="ComboBoxItem">
							<Setter Property="Background" Value="{StaticResource Red0}"/>
							<Setter Property="Foreground" Value="{StaticResource White0}"/>
							<Setter Property="BorderBrush" Value="{StaticResource Red0}"/>
						</Style>
					</ComboBox.ItemContainerStyle>

					<!--Style="{StaticResource  ComboBoxTemplate1}"-->

					<!--<ComboBoxItem Style="{StaticResource ComboItemStyle1}">-->
					<ComboBoxItem 
							     Style="{StaticResource ComboBoxItemStyle1}">
						<TextBlock Text="Bank A/c Db Viewer"
							     Style="{StaticResource Tb1}"/>
					</ComboBoxItem>
					<ComboBoxItem 
							     Style="{StaticResource ComboBoxItemStyle1}">
							<TextBlock Text="CustomerA/c Db Viewer"/>
					</ComboBoxItem>
					<ComboBoxItem 
							     Style="{StaticResource ComboBoxItemStyle1}">
						<TextBlock Text="Details A/c Db Viewer"/>
					</ComboBoxItem>					
				</ComboBox>
				<!--===============================================-->

				<TextBox 
					Height="30"
					Margin="0,10,0,0"
					Style="{StaticResource TextBox1}"
					Text="000000000000" 
					HorizontalAlignment="Left"
					VerticalContentAlignment="Center"
					Width="160"/>
				<TextBox 
					Height="30"
					Margin="0,10,0,0"
					Style="{StaticResource TextBox1}"
					Text="111111111111111 " 
					HorizontalAlignment="Left"
					Width="160"/>
				<TextBox 
					Height="30"
					Margin="0,10,0,0"
					Style="{StaticResource TextBox1}"
					Text=" 222222222222222" 
					HorizontalAlignment="Left"
					Width="160"/>
				<TextBox 
					Height="30"
					Margin="0,10,0,0"
					Style="{StaticResource TextBox1}"
					Text=" 33333333333333333" 
					HorizontalAlignment="Left"
					Width="160"/>
				<!--===============================================-->
			</WrapPanel>
			<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
			<!--#endregion DATA FIELDS-->

		</DockPanel>

		<!--__________________________________________________-->

		<DockPanel
			Grid.Row="2"
		     Grid.Column="2"
			Grid.ColumnSpan="2"
			Height="auto"
		     Margin="0,100,-214,0"
			>
			<TextBox x:Name="Connstring"
				     Grid.Row="2"
				     Grid.Column="2"
					Grid.ColumnSpan="3"
					Height="68"
					Margin="0,-155,0,-10"
					Style="{StaticResource TextBox1}"
					Text="SQL Connection string" 
					TextWrapping="Wrap"
					Width="625"/>
		</DockPanel>
		<!--__________________________________________________-->

		<Button x:Name="CloseSettings"
			Background="{StaticResource HeaderBrushRed}"
			Click="Close_Click"
			Content="Close Settings"
			Focusable="True"
			FontSize="11"
			Foreground="White"
			Grid.Row="2"
			Grid.Column="3"
			Height="40" 
			HorizontalAlignment="Right"
			IsEnabled="true"
			Margin="0,0,-220,0"
			Template="{StaticResource HorizontalGradientTemplateRed}"
			VerticalAlignment="Bottom"
			Width="105"  />
		<Button x:Name="SaveSettings"
				Background="{StaticResource HeaderBrushGreen}"
				Click="Save_Click"
				Content="Save Settings"
				FontSize="11"
				Foreground="White"
				Grid.Row="2"
				Grid.Column="3"
				Height="40" 
				HorizontalAlignment="Left"
				IsEnabled="true"
				Margin="250,0,-160,0"
				Template="{StaticResource HorizontalGradientTemplateGreen}"
				VerticalAlignment="Bottom"
				Width="105"  />
	</Grid>
</Window>
