<Window 
		x:Class="WPFPages.Views.MultiViewer"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:WPFPages.Views" 
		mc:Ignorable="d"
	
		Closing="Window_Closing"	
		Loaded="Window_Loaded"
		MinHeight="600"
		MinWidth="980"
	
		PreviewKeyDown="Window_PreviewKeyDown"
		Title="MultiViewer" Height="850" Width="1000"
		WindowStartupLocation="CenterScreen"
		WindowStyle="None">

	<Window.Resources>

		<!--<local:DateOnlyConverter x:Key="dateOnlyConverter"/>-->

		<ContextMenu x:Key="ContextMenu1">
			<MenuItem Header="View currently selected Record in JSON Format"  Click="ContextShowJson_Click" >
				<MenuItem.Icon>
					<Image Source="/Icons/text-message.png"  />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Header="Edit currently Selected Account" Click="ContextEdit_Click">
				<MenuItem.Icon>
					<Image Source="/Icons/mailbox-receive-message.png" />
				</MenuItem.Icon>
			</MenuItem>
			<Separator Style="{StaticResource Menu_Separator}"/>
			<MenuItem Header="Save current Grid Db data as JSON File"  Click="ContextSave_Click" >
				<MenuItem.Icon>
					<Image Source="/Icons/symlink_directory_30px.png"  />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Header="Create/Save and View JSON File for this Db Grid"  Click="ContextDisplayJsonData_Click" >
				<MenuItem.Icon>
					<Image Source="/Icons/wifi.png"  />
				</MenuItem.Icon>
			</MenuItem>
			<Separator Style="{StaticResource Menu_Separator}"/>

			<MenuItem Header="                                 Settings" Click="ContextSettings_Click" Background="{StaticResource Blue1}" Foreground="White">
				<MenuItem.Icon>
					<Image Source="/Icons/phone-lock.png"  />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Header="                            Exit this Viewer" Click="ContextClose_Click" Background="{StaticResource Red1}" Foreground="White">
				<MenuItem.Icon>
					<Image Source="/Icons/document-delete_48x48.png"  />
				</MenuItem.Icon>
			</MenuItem>
		</ContextMenu>

		<ContextMenu x:Key="CMenu1">
			<MenuItem Header="Edit" Click="ContextEdit_Click">
				<MenuItem.Icon>
					<Image Source="/Icons/mailbox-receive-message.png" />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Header="Save as JSON File"  Click="ContextSave_Click" >
				<MenuItem.Icon>
					<Image Source="/Icons/wifi.png"  />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Header="Exit" Click="ContextClose_Click" Background="{StaticResource Red1}" Foreground="White">
				<MenuItem.Icon>
					<Image Source="/Icons/document-delete_48x48.png"  />
				</MenuItem.Icon>
			</MenuItem>
		</ContextMenu>

		<!--#region Grid headers formatting-->

		<Style x:Key="HeaderStyleBlue" TargetType="DataGridColumnHeader">
			<Setter Property="Background" Value="{StaticResource HeaderBrushBlue}" />
			<Setter Property="Foreground" Value="White" />
			<Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrushBlue}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="MinWidth" Value="0" />
			<Setter Property="MinHeight" Value="30" />
			<Setter Property="Cursor" Value="Hand" />
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property= "Background" Value="{StaticResource HeaderBorderBrushBlue}" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="HeaderStyleGreen" TargetType="DataGridColumnHeader">
			<Setter Property="Background" Value="{StaticResource HeaderBrushGreen}" />
			<Setter Property="Foreground" Value="White" />
			<Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrushGreen}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="MinWidth" Value="0" />
			<Setter Property="MinHeight" Value="30" />
			<Setter Property="Cursor" Value="Hand" />
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property= "Background" Value="{StaticResource HeaderBorderBrushGreen}" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="HeaderStyleYellow" TargetType="DataGridColumnHeader">
			<Setter Property="Background" Value="{StaticResource HeaderBrushYellow}" />
			<Setter Property="Foreground" Value="White" />
			<Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrushYellow}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="MinWidth" Value="0" />
			<Setter Property="MinHeight" Value="30" />
			<Setter Property="Cursor" Value="Hand" />
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property= "Background" Value="{StaticResource HeaderBorderBrushYellow}" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<!--#endregion Grid headers formatting-->
		
		<!--#region menu formatting-->
		<!--Styles for menuitems-->
		<Style x:Key="MenuItemRed" TargetType="{x:Type MenuItem}">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Foreground" Value="Black" />
			<!--<Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrushYellow}" />-->
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="left" />
			<Setter Property="VerticalAlignment" Value="Bottom" />
			<Setter Property="VerticalContentAlignment" Value="Bottom" />
			<Setter Property="MinHeight" Value="25" />
			<!--<Setter Property="Cursor" Value="Hand" />-->
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type MenuItem}">
						<Border x:Name="Bd" 
							  Padding="17,0,17,0" 
							  BorderBrush="{TemplateBinding BorderBrush}" 
							  BorderThickness="{TemplateBinding BorderThickness}" 
							  Background="{TemplateBinding Background}" 
							  SnapsToDevicePixels="True" 
							  Uid="Border_38">
							<ContentPresenter x:Name="ContentPresenter"  
										Content="{TemplateBinding Header}" 
										Grid.Column="1" ContentSource="Header" 
										Margin="{TemplateBinding Padding}" 
										RecognizesAccessKey="True" 
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										Uid="ContentPresenter_33"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsHighlighted" Value="True">
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Red0}"/>
								<Setter Property="Background" TargetName="Bd" Value="Orange"/>
								<Setter Property="MenuItem.Foreground" TargetName="Bd" Value="{StaticResource Black0}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="MenuItemGreen" TargetType="{x:Type MenuItem}">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Foreground" Value="Black" />
			<!--<Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrushYellow}" />-->
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="VerticalAlignment" Value="Bottom" />
			<Setter Property="VerticalContentAlignment" Value="Bottom" />
			<Setter Property="MinHeight" Value="25" />
			<!--<Setter Property="Cursor" Value="Hand" />-->
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type MenuItem}">
						<Border x:Name="Bd" 
							  Padding="17,0,17,0" 
							  BorderBrush="{TemplateBinding BorderBrush}" 
							  BorderThickness="{TemplateBinding BorderThickness}" 
							  Background="{TemplateBinding Background}" 
							  SnapsToDevicePixels="True" 
							  Uid="Border_38">
							<ContentPresenter x:Name="ContentPresenter"  
										Content="{TemplateBinding Header}" 
										Grid.Column="1" 
										ContentSource="Header" 
										Margin="{TemplateBinding Padding}" 
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										Uid="ContentPresenter_33"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsHighlighted" Value="True">
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Green0}"/>
								<Setter Property="Background" TargetName="Bd" Value="Green"/>
								<Setter Property="MenuItem.Foreground" TargetName="Bd" Value="{StaticResource White0}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--#endregion menu formatting-->
		
	</Window.Resources>

	<Grid>
		<!--#region MAIN GRID SETUP-->

		<Grid.RowDefinitions>
			<RowDefinition Height="28"/>
			<RowDefinition Height="35"/>
			<RowDefinition Height="35"/>
			<RowDefinition Height="1*"/>
			<RowDefinition Height="1*"/>
			<RowDefinition Height="1*"/>
			<RowDefinition Height=" 35"/>
			<RowDefinition Height=" 5"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="10"/>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="auto"/>
			<ColumnDefinition Width="10"/>
		</Grid.ColumnDefinitions>
		<Grid.Background>
			<!--create an elegant left to right light-> Dark gradient as a background-->
			<LinearGradientBrush EndPoint="0.0,1" StartPoint="1.3,0">
				<GradientStop Color="#333333" Offset="0.7" />
				<GradientStop Color="LightGray" Offset="0.17" />
			</LinearGradientBrush>
		</Grid.Background>

		<!--#endregion SETUP-->

	<!--#region Menu Bar-->
		<Menu  			
			Background="Transparent"
			Grid.Column="1"
			Grid.Row="0"
			Height="30" 
			HorizontalAlignment="Left"
			Width="auto">

			<MenuItem  Header="_Linq Queries" 
					Margin="5"
				     Width="80" 
				    Foreground="{StaticResource White0}">
				<MenuItem Header="A/c Type 1 Only"
					    Background="#35F6FB" 
					    Click="Linq1_Click"
					    Foreground="Black"
					    IsCheckable="false"/>
				<MenuItem Header="A/c Type 2 Only"
					Background="#35F6FB" 
					Click="Linq2_Click"
					Foreground="Black"
					IsCheckable="False"/>
				<MenuItem Header="A/c Type 3 Only"
					Background="#35F6FB" 
					Click="Linq3_Click"
					Foreground="Black"
					IsCheckable="False"/>
				<MenuItem Header="A/c Type 4 Only"
					Background="#35F6FB" 
					Click="Linq4_Click"
					Foreground="Black"
					IsCheckable="False"/>
				<MenuItem Header="Multi A/C Holders"
					Background="#35F6FB" 
					Click="Linq5_Click"
					IsCheckable="False"
					Foreground="Black"/>
				<Separator />
				<MenuItem Header="Show All Records"
					Background="#35F6FB" 
					Click="Linq6_Click"
					IsCheckable="False"
					Foreground="Black"/>
				<MenuItem Header="Create 'Join' of Bank and Details"
					Background="#35F6FB"
					Click="bankjoin_Click"
					    IsCheckable="false"
				Foreground="Black"/>
			</MenuItem>

			<MenuItem  Header="Filtering" 
				Width="60" 
				    Foreground="{StaticResource White1}">

			</MenuItem>
			
			<MenuItem  Header="Options" 
				    Click="Options_Click"
					Width="50" 
				    Foreground="{StaticResource White2}">

				<MenuItem  Header="Export Bank Account Db => CSV"
					Click="ExportBankCSV_Click"
					FontWeight="DemiBold"
					Foreground="{StaticResource Black1}"
					Background="#00FF00"
					Style="{StaticResource MenuItemGreen}"
					HorizontalAlignment="Left"
					HorizontalContentAlignment="Left"
					Width="290"
					Margin="2"/>
				<MenuItem  Header="Export Customers Db => CSV"
					Click="ExportCustCSV_Click"
					FontWeight="DemiBold"
					Foreground="{StaticResource Black1}"
					Background="#00FF00"
					Style="{StaticResource MenuItemGreen}"
					HorizontalAlignment="Left"
					HorizontalContentAlignment="Left"
					Width="290"
					Margin="2"/>
				<MenuItem  Header="Export Details Db => CSV"
					Click="ExportDetCSV_Click"
					FontWeight="DemiBold"
					Foreground="{StaticResource Black1}"
					Background="#00FF00"
					Style="{StaticResource MenuItemGreen}"
					HorizontalAlignment="Left"
					HorizontalContentAlignment="Left"
					Width="290"
					Margin="2"/>
				<Separator/>
				<MenuItem  Header="Import Bank Account Db from CSV"
					Click="ImportBankCSV_Click"
					FontWeight="DemiBold"
					Background="#FF0000"
					Foreground="White"
					Style="{StaticResource MenuItemRed}"
					HorizontalAlignment="Left"
					HorizontalContentAlignment="Left"
					Width="290"
					Margin="2"/>
				<MenuItem  Header="Import Customers Db from CSV"
					Click="ImportCustCSV_Click"
					FontWeight="DemiBold"
					Foreground="White"
					Background="#FF0000"
					HorizontalAlignment="Left"
					HorizontalContentAlignment="Left"
					Style="{StaticResource MenuItemRed}"
					Width="290"
					Margin="2"/>
				<MenuItem  Header="Import Details Db from CSV"
					Click="ImportDetCSV_Click"
					FontWeight="DemiBold"
					Foreground="White"
					Background="#FF0000"
					HorizontalAlignment="Left"
					HorizontalContentAlignment="Left"
					Style="{StaticResource MenuItemRed}"
					Width="290"
					Margin="2"/>

			</MenuItem>

			<MenuItem  Header="Drag / Drop"
				Click="Drag_Click"
			     IsTabStop="False"
				Width="81"
				Foreground="{StaticResource White1}"/>



			<MenuItem  Header="Close Viewer..."
				    Click="Exit_Click"
				     FontWeight="SemiBold"
				     Margin="2,0"
					Width="97"
				    Foreground="{StaticResource White1}"/>
		</Menu>

		<!--#endregion Menu Bar-->

	<!--#region Top Left bar-->

		<Grid	 x:Name="BankData"
				 Grid.Row="1"
				 Grid.Column="0"
				 Grid.ColumnSpan="2"
				 Grid.RowSpan="2"
				HorizontalAlignment="Left"
				DataContext="CustomerGrid" Width="346"
				>
			<!--#region DataFields Grid setup-->

			<Grid.RowDefinitions>
				<RowDefinition Height="23"/>
				<RowDefinition Height="23"/>
				<RowDefinition Height="23"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="90"/>
				<ColumnDefinition Width="80"/>
				<ColumnDefinition Width="16"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<!--#endregion DataFields Grid setup-->

			<!--#region Data Fields-->

			<TextBlock Text="Bank A/C #  "
					     Foreground="White"
					     Grid.Column="0"
						Grid.ColumnSpan="1" 
						Grid.Row="0"
					     Margin="10,0,0,0"
					     Height="18"
					     TextAlignment="Left"
				     />

			<TextBlock Text="Customer #  "	
					Foreground="White"
					Grid.Column="0"
					Grid.ColumnSpan="1"
					Grid.Row="1" 
					HorizontalAlignment="Left"
					     Margin="10,0,0,0"
					Height="18" 
					     />

			<TextBlock Text="Details A/C #  "
					Foreground="White"
					Grid.Column="0"
					Grid.ColumnSpan="1" 
					Grid.Row="2"					    
					     Margin="10,0,0,0"
					Height="18"
					TextAlignment="Left"/>

			<TextBlock x:Name="BankCount"
					     Grid.Column="1"
						Grid.ColumnSpan="2" 
					     Grid.Row="0"					    
					     Foreground="Red"
					     Height="18"
					     HorizontalAlignment="Center"
					     Margin="10,3,0,0"
					     TextAlignment="Center"
					     VerticalAlignment="Top"
					     Width="88"
					     Background="Beige" RenderTransformOrigin="0.924,0.407"
					/>

			<TextBox x:Name="CustCount"
					     Foreground="Red"
					     Grid.Column="1"
					     Grid.ColumnSpan="2" 
						Grid.Row="1"
					     Height="18"
					     HorizontalAlignment="Center"		
					    TextAlignment="Center"
					     Margin="10,4,0,0"
					     Width="88"
					     VerticalAlignment="Top"
					     Background="Beige" RenderTransformOrigin="-2.686,0.889"/>


			<TextBox x:Name="DetCount"
				     Foreground="Red"
				   Grid.Column="1"
				     Grid.ColumnSpan="2" 
				   Grid.Row="2"
				   Height="18"
				   HorizontalAlignment="Center"		
				   TextAlignment="Center"
				     Margin="10,5,0,0"
				   Width="88"
				   VerticalAlignment="Top"
				   Background="Beige" RenderTransformOrigin="-2.686,0.889"/>


			<CheckBox x:Name="LinkGrids" 
				Click="LinkGrid_Click"
				Content="Link Grids" 
				FontWeight="SemiBold"
				Foreground="Red"
				Grid.Column="6"
			    Grid.Row="0"
			    Grid.RowSpan="2"				
				Height="25"
				HorizontalAlignment="Right" 
				Margin="41,-13,-320,20"
				VerticalAlignment="Center"				    />

			<CheckBox x:Name="LinkRecords" 
				Click="LinkRecords_Click"
				Content="Link ALL Viewers " 
				FontWeight="SemiBold"
				Foreground="Red"
				Grid.Column="6"
			    Grid.Row="0"
			    Grid.RowSpan="2"				
				Height="25"
				HorizontalAlignment="Right" 
				Margin="0,-13,-470,20"
				VerticalAlignment="Center"				    />


			<CheckBox x:Name="OntopChkbox"
				Click="OntopChkbox_Click"
				Content="Keep on Top"
				Foreground="Red"
				FontWeight="SemiBold"
				Grid.Column="6" 
			    Grid.ColumnSpan="2"
			    Grid.Row="0"
			    Grid.RowSpan="2"
				Height="25"
				HorizontalAlignment="Left"
				IsChecked="true"
				Margin="653,-13,-596,20"
				VerticalAlignment="Center"
				Width="129" 
				RenderTransformOrigin="-1.37,-5.06" 
				/>


			<!--#endregion Data Fields-->

		</Grid>

		<StackPanel				
			Grid.Row="0"
			Grid.Column="1"
			Grid.ColumnSpan="1"
			Grid.RowSpan="2"			
			Orientation="Horizontal"
			Height="30"
			HorizontalAlignment="Right" 			
			Margin="30,20,-44,0" 
			Width="750"
			>
			<TextBlock Text="****     -----    Database      Editors     -----       ****"
				Background="Transparent"
			     FontSize="12"
			     Foreground="white"
				Height="20"
				     Margin="-20,0,0,0"
				TextAlignment="Left" Width="260"/>
			<!--<TextBlock.Foreground>
			-->


			<!--create an elegant left to right light-> Dark gradient as a background-->


			<!--
			<LinearGradientBrush EndPoint="0,1" StartPoint="1,0">
				<GradientStop Color="#888888" Offset="0" />
				<GradientStop Color="#cccccc" Offset=".5" />
				<GradientStop Color="White" Offset=".9" />
			</LinearGradientBrush>
		</TextBlock.Foreground>-->


		</StackPanel>

		<StackPanel				
			Grid.Row="1"
			Grid.Column="1"
			Grid.RowSpan="2"			
			Orientation="Horizontal"
			Height="46"
			HorizontalAlignment="Right" 			
			Margin="0,25,0,0" 
			Width="768"
			
			>
			<!--#region BUTTON BAR -->

			<!--Style="{StaticResource RedToBlackButton}"-->

			<!--<Button  
				Height="40"
				Width="8"
				Margin="128,0,-12,0"
				Background="{StaticResource HeaderBrushRed}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateRed}"
				/>-->
			<Button  
				x:Name="BankDbBtn_Copy"
				Height="40"
				Width="100"
				Margin="13,0,0,0"
				Background="{StaticResource HeaderBrushBlue}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateBlue}" 
				Click="BankDb_Click"				
				>
				<StackPanel Orientation="Horizontal" 
				   HorizontalAlignment="Center"
				   VerticalAlignment="Center">
					<!--<TextBlock FontFamily="Wingdings" 
								Text="ü"
						     Height="20"
						     Width="20"
									Style="{StaticResource WingDingStyle}" />-->
					<TextBlock Text="Bank Db" 
					HorizontalAlignment="Center"
					VerticalAlignment="Center" 
					Style="{StaticResource WingDingStyle}"
					FontSize="12"/>
				</StackPanel>
			</Button>

			<Button  
				x:Name="CustDbBtn_Copy"
				Height="40"
				Width="100"
				Margin="9,0,7,0"
				Background="{StaticResource HeaderBrushYellow}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateYellow}"
				Click="CustDb_Click"				
					>
				<StackPanel Orientation="Horizontal" 
						HorizontalAlignment="Center"
						VerticalAlignment="Center">

					<TextBlock Text="Cust Db" 
						   HorizontalAlignment="Center"
						   VerticalAlignment="Center" 
						   Style="{StaticResource WingDingStyle}"
							     />
				</StackPanel>
			</Button>

			<Button  
					x:Name="DetDbBtn"
					Height="40"
				Width="100"
				Margin="3,0,7,0"
				Background="{StaticResource HeaderBrushGreen}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateGreen}"
				Click="DetDb_Click"				
					>
				<StackPanel Orientation="Horizontal" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
						>
					<!--<TextBlock FontFamily="Wingdings" 
								Text="ü"
						     Height="20"
						     Width="20"
									Style="{StaticResource WingDingStyle}" />-->
					<TextBlock Text="Details Db" 
								HorizontalAlignment="Center"
								VerticalAlignment="Center" 
									Style="{StaticResource WingDingStyle}"
								FontSize="12"/>
				</StackPanel>
			</Button>

			<Button  
				Height="40"
				Width="8"
				Margin="13,0,-4,0"
				Background="{StaticResource HeaderBrushRed}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateRed}"
				/>

			<Button  
					x:Name="Multiaccounts"
					Height="40"
					Width="100"
					Margin="37,0, 5,0"
				Background="{StaticResource HeaderBrushGray}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateGray}"
				Click="Details_Click"				
					>
				<StackPanel Orientation="Horizontal" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
					<!--<TextBlock FontFamily="Wingdings" 
								Text="ü"
						     Height="20"
						     Width="20"
									Style="{StaticResource WingDingStyle}" />-->
					<TextBlock x:Name="MultiAccountText"
						Text="Multi A/c Only" 
								HorizontalAlignment="Center"
								VerticalAlignment="Center" 
									Style="{StaticResource WingDingStyle}"
								FontSize="12"/>
				</StackPanel>
			</Button>


			<Button  
					x:Name="FilterBtn"
					Height="40"
					Width="80"
					Margin="0,0"
				Background="{StaticResource HeaderBrushGray}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateGray}"
					Click="Filter_Click"				
					>
				<StackPanel Orientation="Horizontal" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
					<!--<TextBlock FontFamily="Wingdings" 
								Text="ü"
									Style="{StaticResource WingDingStyle}" />-->
					<TextBlock Text="Filter" 
								HorizontalAlignment="Center"
								VerticalAlignment="Center" 
									Style="{StaticResource WingDingStyle}"
								FontSize="12"/>
				</StackPanel>
			</Button>

			<Button  
					x:Name="RefreshBtn"
					Height="40"
					Width="70"
					Margin="5,0"
				Background="{StaticResource HeaderBrushGray}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateGray}"
				Click="Refresh_Click">

				<StackPanel Orientation="Horizontal" 						
					HorizontalAlignment="Center"
					VerticalAlignment="Center">
					<TextBlock Text="Refresh" 
								HorizontalAlignment="Center"
								VerticalAlignment="Center" 
								Style="{StaticResource WingDingStyle}"
								FontSize="12"/>
				</StackPanel>
			</Button>

			<Button  
				Height="40"
				Width="8"
				Margin="3,0,7,0"
				Background="{StaticResource HeaderBrushRed}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateRed}"
				/>

			<Button  
					x:Name="CloseBtn"
					Height="40"
					Width="90"
					Margin="0,0"
					Style="{StaticResource RedToBlackButton}"				
				Click="Close_Click"				
					>
				<StackPanel Orientation="Horizontal" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
					<TextBlock FontFamily="Wingdings" 
								Text="ü"
									Style="{StaticResource WingDingStyle}" />
					<TextBlock Text="Close" 
								HorizontalAlignment="Center"
								VerticalAlignment="Center" 
									Style="{StaticResource WingDingStyle}"
								FontSize="12"/>
				</StackPanel>
			</Button>
			<!--#endregion BUTTON BAR -->

		</StackPanel>

		<!--#endregion Top bar-->

		
		<DataGrid x:Name="WaitMessage"
				AutoGenerateColumns="False"
				CanUserAddRows="False"
				ColumnHeaderStyle ="{StaticResource HeaderStyleBlue}"
				Grid.Row="3"
				 Grid.RowSpan="3"
				Grid.Column="1"
				HorizontalAlignment="Stretch" 
				Margin="0,10,0,0"
				Padding="10"
				RowHeight="35"
				SelectionMode="Single"
				SelectionUnit="FullRow"
				VerticalAlignment="Stretch"
				VerticalContentAlignment="Center"
				VerticalGridLinesBrush="{StaticResource Blue2}"	   
				Visibility="Visible"
				    >
			
			<DataGrid.Resources>
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#CCFAFB"/>
				<Style TargetType="DataGridCell">
					<Style.Triggers>
						<Trigger Property="DataGridCell.IsSelected" Value="True">
							<Setter Property="FontWeight" Value="SemiBold" />
							<Setter Property="Foreground" Value="White" />
							<Setter Property="Background" Value="#6578FD" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</DataGrid.Resources>

			<!--#region bankfields-->
			<DataGrid.Columns >
				<DataGridTemplateColumn Header="Loading Information" Width="1000"
									x:Name="Information">
					<DataGridTemplateColumn.CellTemplate >
						<DataTemplate >
							<TextBlock 
									Text="Please wait, Loading all three Grids with SQL Db data from Remote Data Server..."
									HorizontalAlignment="Center"
									/>
						</DataTemplate >
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn >

			</DataGrid.Columns>
		</DataGrid>
		
		
	<!--#region Bank Data Grid-->
		<DataGrid x:Name="BankGrid"
				AlternatingRowBackground="{StaticResource Blue9}"
				AutoGenerateColumns="False"
				BeginningEdit="BankGrid_BeginningEdit"
				CanUserAddRows="False"
				ColumnHeaderStyle ="{StaticResource HeaderStyleBlue}"
				DataGridCell.Selected="BankGrid_Selected"
				PreviewDragEnter="BankGrid_PreviewDragEnter"
				GotFocus="BankGrid_GotFocus"
				Grid.Row="3"
				Grid.Column="1"
				HorizontalAlignment="Stretch" 
				IsSynchronizedWithCurrentItem="False"
				Margin="0,10,0,0"
				Padding="10"
				PreviewMouseLeftButtonDown="Grids_PreviewMouseLeftButtondown "
				PreviewMouseLeftButtonUp="Grids_PreviewMouseLeftButtonup"
			    PreviewMouseMove="BankGrid_PreviewMouseMove"
				PreviewMouseRightButtonDown="BankGrid_PreviewMouseRightButtonDown"
				RowEditEnding="BankGrid_RowEditEnding"
				RowHeight="22"
				ScrollViewer.ScrollChanged="BankGrid_ScrollChanged"
				SelectionChanged="BankGrid_SelectionChanged"
				SelectionMode="Single"
				SelectionUnit="FullRow"
				VerticalAlignment="Stretch"
				VerticalContentAlignment="Center"
				VerticalGridLinesBrush="{StaticResource Blue2}"	   
				Visibility="Collapsed"
				CellStyle="{StaticResource BankGridStyle}">

			<DataGrid.Resources>
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#CCFAFB"/>
			</DataGrid.Resources>
			<!--#region bankfields-->
			<DataGrid.Columns >
				<DataGridTemplateColumn Header="Id" Width="40"
									x:Name="ID"
									    SortMemberPath="Id" >
					<DataGridTemplateColumn.CellTemplate >
						<DataTemplate >
							<TextBlock 
									Text="{Binding Id}"
									HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate >
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn >

				<DataGridTextColumn Header="Customer #" Binding="{Binding CustNo, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="Bank #" Width="80" 
								    SortMemberPath="BankNo"
									Binding ="{Binding BankNo, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus}"
									>
				</DataGridTextColumn>

				<DataGridTextColumn Header="Type" Width="40" 
								    SortMemberPath="AcType"
									Binding="{Binding AcType, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus}"/>

				<DataGridTextColumn Header="Balance" Width="90" 
									SortMemberPath="Balance"									
									Binding="{Binding Balance, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus,
									StringFormat='£ ##,###,###.00'}"/>

				<DataGridTextColumn Header="Interest" Width="60" 
									SortMemberPath="IntRate"
									Binding="{Binding IntRate, Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus,
									StringFormat='0.00'}"/>
				<!--CellStyle="{StaticResource CenterText}"-->

				<!--the next 2 show 2 ways to format a date - 1 a Converter the other a direct Format string-->
				<DataGridTemplateColumn Header="Open Date" Width="80" SortMemberPath="ODate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=ODate,
								StringFormat='dd/MM/yyyy'}"  	 									
								     HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=ODate, 
								StringFormat='dd/MM/yyyy',
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
							</DatePicker>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Close Date" Width="80" SortMemberPath="CDate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=CDate, 
									StringFormat='dd/MM/yyyy'}"
									HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=CDate, 
								StringFormat='dd/MM/yyyy',
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

			</DataGrid.Columns>
			<!--#endregion bankfields-->

		</DataGrid>
		<!--#endregion Bank Data Grid-->

	<!--#region Customer DataGrid-->
		<DataGrid x:Name="CustomerGrid"
				AlternatingRowBackground="{StaticResource Yellow2}"
				AutoGenerateColumns="False"
				BeginningEdit="CustomerGrid_BeginningEdit"
			    CanUserAddRows="False"
				ColumnHeaderStyle ="{StaticResource HeaderStyleYellow}"
				PreviewDragEnter="BankGrid_PreviewDragEnter"
				GotFocus="CustGrid_GotFocus"
				Grid.Row="4"
				Grid.Column="1"
				IsSynchronizedWithCurrentItem="False"
				Margin="0,10,0,0"
				Padding="10"
				PreviewMouseLeftButtonDown="Grids_PreviewMouseLeftButtondown "
				PreviewMouseLeftButtonUp="Grids_PreviewMouseLeftButtonup"
				 PreviewMouseMove="CustomerGrid_PreviewMouseMove"
				PreviewMouseRightButtonDown="CustGrid_PreviewMouseRightButtonDown"
				RowEditEnding="CustGrid_RowEditEnding"
				RowHeight="25"
				ScrollViewer.ScrollChanged="CustGrid_ScrollChanged"
				SelectionChanged="CustGrid_SelectionChanged"
				SelectionMode="Single"
				SelectionUnit="FullRow"
				VerticalAlignment="Stretch"
				HorizontalAlignment="Stretch"
				VerticalContentAlignment="Center"
				VerticalGridLinesBrush="{StaticResource Yellow0}"
				Visibility="Collapsed"
				CellStyle="{StaticResource CustomerGridStyle}">

			<DataGrid.Resources>
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FACF8A"/>
				<Style TargetType="DataGridRow">
					<Style.Triggers>
						<Trigger Property="DataGridCell.IsSelected" Value="True">
							<Setter Property="FontWeight" Value="SemiBold" />
							<Setter Property="Foreground" Value="Black" />
							<Setter Property="Background" Value="Yellow" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</DataGrid.Resources>

			<!--#region Customer fields-->
			<DataGrid.Columns >
				<DataGridTemplateColumn Header="Id" Width="40"
									    SortMemberPath="Id" >
					<DataGridTemplateColumn.CellTemplate >
						<DataTemplate >
							<TextBlock 
									Text="{Binding Id}"
									HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate >
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn >

				<DataGridTextColumn Header="Customer #" Binding="{Binding CustNo, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="Bank #" Width="80" 
								    SortMemberPath="BankNo"
									Binding ="{Binding BankNo, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus}"
									>
				</DataGridTextColumn>

				<DataGridTextColumn Header="Type" Width="40" 
								    SortMemberPath="AcType"
									Binding="{Binding AcType, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus}"/>

				<DataGridTextColumn Header="Forename" Binding="{Binding FName, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="Surname" Binding="{Binding LName, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="Address 1" Binding="{Binding Addr1, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="Address 2" Binding="{Binding Addr2, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>


				<DataGridTextColumn Header="Town" Binding="{Binding Town, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="County" Binding="{Binding County, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="Post Code" Binding="{Binding PCode, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>



				<!--the next 2 show 2 ways to format a date - 1 a Converter the other a direct Format string-->
				<DataGridTemplateColumn Header="Open Date" Width="80" SortMemberPath="ODate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=ODate,
								StringFormat='dd/MM/yyyy'}"  	 									
								     HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=ODate, 
								StringFormat='dd/MM/yyyy',
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
							</DatePicker>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Close Date" Width="80" SortMemberPath="CDate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=CDate, 
									StringFormat='dd/MM/yyyy'}"
									HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=CDate, 
								StringFormat='dd/MM/yyyy',
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

			</DataGrid.Columns>
			<!--#endregion Customer fields-->

		</DataGrid>
		<!--#endregion Customer DataGrid-->

	<!--#region Details  DataGrid-->
		<DataGrid  x:Name="DetailsGrid"
				AlternatingRowBackground="{StaticResource Green9}"
				AutoGenerateColumns="False"
				BeginningEdit="DetailsGrid_BeginningEdit"
			     CanUserAddRows="False"
				ColumnHeaderStyle ="{StaticResource HeaderStyleGreen}"
				PreviewDragEnter="BankGrid_PreviewDragEnter"
				GotFocus="DetGrid_GotFocus"
				Grid.Row="5"
				Grid.Column="1"
				HorizontalAlignment="Stretch" 
				IsSynchronizedWithCurrentItem="False"
				Margin="0,10,0,0"
				Padding="10"
				PreviewMouseLeftButtonDown="Grids_PreviewMouseLeftButtondown "
				 PreviewMouseMove="DetailsGrid_PreviewMouseMove"
				PreviewMouseRightButtonDown="DetGrid_PreviewMouseRightButtonDown"
				PreviewMouseLeftButtonUp="Grids_PreviewMouseLeftButtonup"
				RowEditEnding="DetailsGrid_RowEditEnding"
			     RowHeight="25"
				ScrollViewer.ScrollChanged="DetGrid_ScrollChanged"
				SelectionChanged="DetGrid_SelectionChanged"
				SelectionMode="Single"
				SelectionUnit="FullRow"
				VerticalContentAlignment="Center"
				VerticalAlignment="Stretch"
				VerticalGridLinesBrush="{StaticResource Green2}"
				Visibility="Hidden"
     				CellStyle="{StaticResource DetailsGridStyle}">

			<DataGrid.Resources>
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#79FF59"/>
				<Style TargetType="DataGridCell">
					<Setter Property="Foreground" Value="Black" />
					<Setter Property="Background" Value="{StaticResource Green4}" />
					<Style.Triggers>
						<!--<Trigger Property="DataGridCell.Focusable" Value="True">-->
						<Trigger Property="DataGridCell.IsSelected" Value="True">
							<Setter Property="Foreground" Value="Black" />
							<Setter Property="FontWeight" Value="SemiBold" />
							<Setter Property="Background" Value="limeGreen" />
						</Trigger>
						<!--<Trigger Property="DataGridCell.IsSelected" Value="False">
							<Setter Property="Foreground" Value="Black" />
							<Setter Property="Background" Value="{StaticResource Green4}" />
						</Trigger>-->
					</Style.Triggers>
				</Style>
			</DataGrid.Resources>

			<!--// This works VERY WELL INDEED // -->
			<!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
			<!--<DataGrid.CellStyle>
				<Style TargetType="{x:Type DataGridCell}">
					<Style.Triggers>
						--><!--// Window IS FOCUSED-->
						<!--// SELECTED row Background & Border--><!--
						<Trigger  Property="IsSelected" Value="true">
							<Setter Property="Background" Value="#FF1171E6" />
							<Setter Property="BorderBrush" Value="#FF72DBE0" />
						</Trigger>

						--><!--// Window IS NOT FOCUSED-->
						<!--// Handle Background and Foreground colors of SELECTED row--><!--
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
								--><!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />--><!--
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="Background" Value="{StaticResource Red1}" />
								<Setter Property="Foreground" Value="{StaticResource White0}" />
								<Setter Property="FontWeight" Value="DemiBold" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>

						--><!--// Window IS NOT FOCUSED-->
						<!--// Handle Background and Foreground colors of NON SELECTED row--><!--
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
								--><!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />--><!--
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								--><!--<Setter Property="Background" Value="{StaticResource Red1}" />--><!--
								<Setter Property="Foreground" Value="{StaticResource Gray1}" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>

						--><!--// Window IS NOT FOCUSED-->
						<!--// Handle Foreground colors of NON SELECTED row-->
						<!--// This sets text to Blue when mouseover of the UNFOCUSED WINDOW--><!--
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
								--><!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />--><!--
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsMouseOver}" Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								--><!--<Setter Property="Background" Value="{StaticResource Red1}" />--><!--
								<Setter Property="Foreground" Value="{StaticResource Blue1}" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>

						--><!--// Window IS NOT FOCUSED-->
						<!--// Handle Foreground colors of NON SELECTED row-->
						<!--// This sets text to Blue when mouseover of the UNFOCUSED WINDOW--><!--
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
								--><!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />--><!--
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsMouseOver}" Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="Background" Value="{StaticResource Yellow1}" />
								<Setter Property="Foreground" Value="{StaticResource Black0}" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>

						--><!--// Window IS FOCUSED-->
						<!--// Handle Foreground of SELECTED row-->
						<!--// This sets text to Bold when mouseover of the FOCUSED WINDOW--><!--
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								--><!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="True" />--><!--
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsMouseOver}" Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="FontWeight" Value="Bold" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						--><!--// Window IS FOCUSED-->
						<!--// Handle Foreground of UNSELECTED row-->
						<!--// This sets text to Bold when mouseover of the FOCUSED WINDOW--><!--
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								--><!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="True" />--><!--
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="false" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsMouseOver}" Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="FontWeight" Value="DemiBold" />
								<Setter Property="Foreground" Value="{StaticResource Black0}" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
					</Style.Triggers>
				</Style>
			</DataGrid.CellStyle>-->


			<!--#region Details fields-->
			<DataGrid.Columns >
				<DataGridTemplateColumn Header="Id" Width="40"
									    SortMemberPath="Id" >
					<DataGridTemplateColumn.CellTemplate >
						<DataTemplate >
							<TextBlock 
									Text="{Binding Id}"
									HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate >
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn >

				<DataGridTextColumn Header="Customer #" Binding="{Binding CustNo, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>
				<DataGridTextColumn Header="Bank #" Width="80" 
								    SortMemberPath="BankNo"
									Binding ="{Binding BankNo, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus}"
									>
				</DataGridTextColumn>


				<DataGridTextColumn Header="Type" Width="40" 
								    SortMemberPath="AcType"
									Binding="{Binding AcType, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus}"/>

				<DataGridTextColumn Header="Balance" Width="90" 
									SortMemberPath="Balance"									
									Binding="{Binding Balance, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus,
									StringFormat='£ ##,###,###.00'}"/>

				<DataGridTextColumn Header="Interest" Width="60" 
									SortMemberPath="IntRate"
									Binding="{Binding IntRate, Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus,
									StringFormat='0.00'}"/>
				<!--CellStyle="{StaticResource CenterText}"-->

				<!--the next 2 show 2 ways to format a date - 1 a Converter the other a direct Format string-->
				<DataGridTemplateColumn Header="Open Date" Width="80" SortMemberPath="ODate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=ODate,
								StringFormat='dd/MM/yyyy'}"  	 									
								     HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=ODate, 
								StringFormat='dd/MM/yyyy',
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
							</DatePicker>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Close Date" Width="80" SortMemberPath="CDate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=CDate, 
									StringFormat='dd/MM/yyyy'}"
									HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=CDate, 
								StringFormat='dd/MM/yyyy',
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

			</DataGrid.Columns>
			<!--#endregion Details fields-->

		</DataGrid>

		<!--#endregion Details  DataGrid-->
			
	<!--#region Button bar-->
		<TextBlock
			x:Name="StatusBar"
			Background="Beige"
			Foreground="Red"
			FontWeight="SemiBold"
			Grid.Row="6"
			Grid.Column="1"
			Grid.ColumnSpan="2"
			HorizontalAlignment="Stretch"
			Padding="4"
			TextAlignment="Center"
			Margin="5"
			Text = "All available Records are shown above in all three grids"
			/>
		<Button
			  Background="{StaticResource HeaderBrushGray}"
			  Click="Minimize_click"
			  Content="-v-"
			  Foreground="White"
			  Grid.Column="1"
			  Height="20"
			  HorizontalAlignment="Right"
			  MouseDown="Window_MouseDown"
			  Opacity="50"
			  Template="{StaticResource HorizontalGradientTemplateGray}"
			  VerticalContentAlignment="Top"
			  Visibility="Visible"
			  Width="20" Margin="0,0,3,0"/>

			<!--#endregion Button bar-->
	</Grid>
</Window>
