<Window 
	x:Class="WPFPages.Views.MultiViewer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFPages.Views"
        mc:Ignorable="d"
	Closing="Window_Closing"
	
	  Loaded="Window_Loaded"
	MinHeight="600"
	MinWidth="980"  
	PreviewKeyDown="Window_PreviewKeyDown"
        Title="MultiViewer" Height="850" Width="1000"
	WindowStartupLocation="CenterScreen"
	WindowStyle="None">

	<Window.Resources>

		<!--<local:DateOnlyConverter x:Key="dateOnlyConverter"/>-->
		<Style x:Key="HeaderStyleBlue" TargetType="DataGridColumnHeader">
			<Setter Property="Background" Value="{StaticResource HeaderBrushBlue}" />
			<Setter Property="Foreground" Value="White" />
			<Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrushBlue}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="MinWidth" Value="0" />
			<Setter Property="MinHeight" Value="30" />
			<Setter Property="Cursor" Value="Hand" />
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property= "Background" Value="{StaticResource HeaderBorderBrushBlue}" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="HeaderStyleGreen" TargetType="DataGridColumnHeader">
			<Setter Property="Background" Value="{StaticResource HeaderBrushGreen}" />
			<Setter Property="Foreground" Value="White" />
			<Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrushGreen}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="MinWidth" Value="0" />
			<Setter Property="MinHeight" Value="30" />
			<Setter Property="Cursor" Value="Hand" />
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property= "Background" Value="{StaticResource HeaderBorderBrushGreen}" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="HeaderStyleYellow" TargetType="DataGridColumnHeader">
			<Setter Property="Background" Value="{StaticResource HeaderBrushYellow}" />
			<Setter Property="Foreground" Value="White" />
			<Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrushYellow}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="MinWidth" Value="0" />
			<Setter Property="MinHeight" Value="30" />
			<Setter Property="Cursor" Value="Hand" />
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property= "Background" Value="{StaticResource HeaderBorderBrushYellow}" />
				</Trigger>
			</Style.Triggers>
		</Style>

	</Window.Resources>

	<Grid>
		<!--#region MAIN GRID SETUP-->

		<Grid.RowDefinitions>
			<RowDefinition Height="28"/>
			<RowDefinition Height="25"/>
			<RowDefinition Height="35"/>
			<RowDefinition Height=" *"/>
			<RowDefinition Height=" *"/>
			<RowDefinition Height=" *"/>
			<RowDefinition Height=" 35"/>
			<RowDefinition Height=" 5"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="10"/>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="auto"/>
			<ColumnDefinition Width="10"/>
		</Grid.ColumnDefinitions>
		<Grid.Background>
			<!--create an elegant left to right light-> Dark gradient as a background-->
			<LinearGradientBrush EndPoint="0.0,1" StartPoint="1.3,0">
				<GradientStop Color="#333333" Offset="0.7" />
				<GradientStop Color="LightGray" Offset="0.17" />
			</LinearGradientBrush>
		</Grid.Background>

		<!--#endregion SETUP-->
		
		<!--#region Menu Bar-->
		<Menu  			
			Background="Transparent"
			Grid.Column="1"
			Grid.Row="0"
			Height="30" 
			HorizontalAlignment="Left"
			Width="auto">
			<!--<Menu.Background>
				-->
			<!--create an elegant left to right light-> Dark gradient as a background-->
			<!--
				<LinearGradientBrush EndPoint="0,1" StartPoint="1,0">
					<GradientStop Color="#333333" Offset="1" />
					<GradientStop Color="#35F6FB" Offset="0" />
				</LinearGradientBrush>
			</Menu.Background>-->

			<MenuItem  Header="_Linq Queries" 
					Margin="5"
				     Width="80" 
				    Foreground="{StaticResource White0}">
				<MenuItem Header="A/c Type 1 Only"
					    Background="#35F6FB" 
					    Click="Linq1_Click"
					    Foreground="Black"
					    IsCheckable="false"/>
				<MenuItem Header="A/c Type 2 Only"
					Background="#35F6FB" 
					Click="Linq2_Click"
					Foreground="Black"
					IsCheckable="False"/>
				<MenuItem Header="A/c Type 3 Only"
					Background="#35F6FB" 
					Click="Linq3_Click"
					Foreground="Black"
					IsCheckable="False"/>
				<MenuItem Header="A/c Type 4 Only"
					Background="#35F6FB" 
					Click="Linq4_Click"
					Foreground="Black"
					IsCheckable="False"/>
				<MenuItem Header="Multi A/C Holders"
					Background="#35F6FB" 
					Click="Linq5_Click"
					IsCheckable="False"
					Foreground="Black"/>
				<Separator />
				<MenuItem Header="Show All Records"
					Background="#35F6FB" 
					Click="Linq6_Click"
					IsCheckable="False"
					Foreground="Black"/>
			</MenuItem>

			<MenuItem  Header="Filtering" 
				    Click="Filter_Click"
					Width="60" 
				    Foreground="{StaticResource White1}">
				<!--<MenuItem Header="Setup Filter"
					    Background="#35F6FB" 
					    Click="Filter_Click"
					    Foreground="Black"
					    IsCheckable="false"/>-->
			</MenuItem>
			<MenuItem  Header="Options" 
				    Click="Options_Click"
					Width="50" 
				    Foreground="{StaticResource White2}">
			</MenuItem>

			<MenuItem  Header="Exit..." 
				    Click="Exit_Click"
					Width="50" 
				    Foreground="{StaticResource White2}">
				<!--<MenuItem Header="Setup Filter"
					    Background="#35F6FB" 
					    Click="Filter_Click"
					    Foreground="Black"
					    IsCheckable="false"/>-->
			</MenuItem>

		</Menu>
		<!--#endregion Menu Bar-->

		<!--#region Top bar-->

		<Grid	 x:Name="BankData"
				 Grid.Row="1"
				 Grid.Column="0"
				 Grid.ColumnSpan="3"
				 Grid.RowSpan="2"
				HorizontalAlignment="Left"
				DataContext="CustomerGrid"
				>
			<!--#region DataFields Grid setup-->

			<Grid.RowDefinitions>
				<RowDefinition Height="23"/>
				<RowDefinition Height="35"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="70"/>
				<ColumnDefinition Width="80"/>
				<ColumnDefinition Width="75"/>
				<ColumnDefinition Width="100"/>
				<ColumnDefinition Width="100"/>
				<ColumnDefinition Width="7"/>
				<ColumnDefinition Width="16"/>
			</Grid.ColumnDefinitions>
			<!--#endregion DataFields Grid setup-->

			<!--#region Data Fields-->
			<TextBlock Text="Customer #  "	
					     Foreground="White"
					     Grid.Column="0"
					     Grid.Row="1"
					     HorizontalAlignment="Left"
					     Margin="22,0,0,16"
					     Height="20" Grid.ColumnSpan="2"
					     />
			<TextBlock Text="{Binding CustNo, FallbackValue=Cust #}"
   					     Grid.Column="1"
					     Grid.Row="1"
					     Foreground="Red"
					     Height="18"
					     HorizontalAlignment="Left"
					     Margin="35,0,0,18"
					     TextAlignment="Center"
					     VerticalAlignment="Center"
					     Width="70"
					     Background="Beige" RenderTransformOrigin="0.924,0.407" Grid.ColumnSpan="2"
					/>

			<TextBlock Text="Bank A/C #  "
					     Foreground="White"
					     Grid.Column="2"
					     Grid.Row="1"					    
					     Margin="36,0,75,18"
					     Height="18"
					     TextAlignment="Left" Grid.ColumnSpan="2"
				     />
			<TextBox Text="{Binding BankNo, FallbackValue=Bank A/c }"
   					     Grid.Column="3"
					     Grid.Row="1"
					     Height="18"
					     HorizontalAlignment="Left"		
					    TextAlignment="Center"
					     Margin="30,0,0,18"
					     Width="70"
					     VerticalAlignment="Center"
					     Background="Beige"
					/>
			<CheckBox x:Name="LinkRecords" 
				    Click="LinkRecords_Click"
				    Content="Link-External Viewers " 
				   FontWeight="SemiBold"
				    Foreground="Red"
				Grid.Column="6"
				    Height="25"
				    HorizontalAlignment="Right" 
					     Margin="-71,-19,-390,20"
				    VerticalAlignment="Center"				    />

			<CheckBox x:Name="LinkGrids" 
				    Click="LinkGrid_Click"
				    Content="Link Grids" 
				   FontWeight="SemiBold"
				    Foreground="Red"
				Grid.Column="6"
				    Height="25"
				    HorizontalAlignment="Right" 
					     Margin="-71,-17,-240,20"
				    VerticalAlignment="Center"				    />

			<CheckBox x:Name="OntopChkbox"
				   Click="OntopChkbox_Click"
				   Content="Keep on Top"
				   Foreground="Red"
				   FontWeight="SemiBold"
				Grid.Column="6" 
				   Height="25"
				   HorizontalAlignment="Left"
				   IsChecked="true"
				   Margin="413,-19,-596,20"
				   VerticalAlignment="Center"
				   Width="129" 
				    RenderTransformOrigin="-1.37,-5.06" 
			     />
			<TextBlock Text="****   Database      Editors   ****"
				Background="Transparent"
 			     FontSize="12"
			     Foreground="white"				
				Grid.Column="4"
			      Grid.ColumnSpan="3"
				Grid.Row="0"					    
				Margin="67,-18,-138,24"
				Height="18"
				TextAlignment="Left">
		<!--<TextBlock.Foreground>
			--><!--create an elegant left to right light-> Dark gradient as a background--><!--
			<LinearGradientBrush EndPoint="0,1" StartPoint="1,0">
				<GradientStop Color="#888888" Offset="0" />
				<GradientStop Color="#cccccc" Offset=".5" />
				<GradientStop Color="White" Offset=".9" />
			</LinearGradientBrush>
		</TextBlock.Foreground>-->

			</TextBlock>


			<!--#endregion Data Fields-->

		</Grid>

		<StackPanel	
			
			Grid.Row="1"
			Grid.Column="1"
			Grid.RowSpan="2"			
			Orientation="Horizontal"
			HorizontalAlignment="Right"
			
			>
			<!--#region BUTTON BAR -->

			<!--Style="{StaticResource RedToBlackButton}"-->

			<Button  
				Height="40"
				Width="8"
				Margin="3,0,-12,0"
				Background="{StaticResource HeaderBrushRed}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateRed}"
				/>
			<Button  
				x:Name="BankDbBtn_Copy"
				Height="40"
				Width="70"
				Margin="18,0,0,0"
				Background="{StaticResource HeaderBrushBlue}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateBlue}" 
				Click="BankDb_Click"				
				>
				<StackPanel Orientation="Horizontal" 
				   HorizontalAlignment="Center"
				   VerticalAlignment="Center">
					<!--<TextBlock FontFamily="Wingdings" 
								Text="ü"
						     Height="20"
						     Width="20"
									Style="{StaticResource WingDingStyle}" />-->
					<TextBlock Text="Bank Db" 
					HorizontalAlignment="Center"
					VerticalAlignment="Center" 
					Style="{StaticResource WingDingStyle}"
					FontSize="12"/>
				</StackPanel>
			</Button>

			<Button  
				x:Name="CustDbBtn_Copy"
				Height="40"
				Width="70"
				Margin="9,0,7,0"
				Background="{StaticResource HeaderBrushYellow}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateYellow}"
				Click="CustDb_Click"				
					>
				<StackPanel Orientation="Horizontal" 
						HorizontalAlignment="Center"
						VerticalAlignment="Center">

					<TextBlock Text="Cust Db" 
						   HorizontalAlignment="Center"
						   VerticalAlignment="Center" 
						   Style="{StaticResource WingDingStyle}"
							     />
				</StackPanel>
			</Button>

			<Button  
					x:Name="DetDbBtn"
					Height="40"
					Width="70"
				Margin="3,0,7,0"
				Background="{StaticResource HeaderBrushGreen}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateGreen}"
				Click="DetDb_Click"				
					>
				<StackPanel Orientation="Horizontal" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
					<!--<TextBlock FontFamily="Wingdings" 
								Text="ü"
						     Height="20"
						     Width="20"
									Style="{StaticResource WingDingStyle}" />-->
					<TextBlock Text="Details Db" 
								HorizontalAlignment="Center"
								VerticalAlignment="Center" 
									Style="{StaticResource WingDingStyle}"
								FontSize="12"/>
				</StackPanel>
			</Button>

			<Button  
				Height="40"
				Width="8"
				Margin="1,0,-4,0"
				Background="{StaticResource HeaderBrushRed}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateRed}"
				/>

			<Button  
					x:Name="Multiaccounts"
					Height="40"
					Width="100"
					Margin="10,0, 5,0"
				Background="{StaticResource HeaderBrushGray}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateGray}"
				Click="Details_Click"				
					>
				<StackPanel Orientation="Horizontal" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
					<!--<TextBlock FontFamily="Wingdings" 
								Text="ü"
						     Height="20"
						     Width="20"
									Style="{StaticResource WingDingStyle}" />-->
					<TextBlock x:Name="MultiAccountText"
						Text="Multi A/c Only" 
								HorizontalAlignment="Center"
								VerticalAlignment="Center" 
									Style="{StaticResource WingDingStyle}"
								FontSize="12"/>
				</StackPanel>
			</Button>


			<Button  
					x:Name="FilterBtn"
					Height="40"
					Width="80"
					Margin="0,0"
				Background="{StaticResource HeaderBrushGray}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateGray}"
					Click="Filter_Click"				
					>
				<StackPanel Orientation="Horizontal" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
					<!--<TextBlock FontFamily="Wingdings" 
								Text="ü"
									Style="{StaticResource WingDingStyle}" />-->
					<TextBlock Text="Filter" 
								HorizontalAlignment="Center"
								VerticalAlignment="Center" 
									Style="{StaticResource WingDingStyle}"
								FontSize="12"/>
				</StackPanel>
			</Button>

			<Button  
					x:Name="RefreshBtn"
					Height="40"
					Width="70"
					Margin="5,0"
				Background="{StaticResource HeaderBrushGray}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateGray}"
				Click="Refresh_Click"				
					>
				<StackPanel Orientation="Horizontal" 
						
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
					<!--<TextBlock FontFamily="Wingdings" 
								Text="ü"
									Style="{StaticResource WingDingStyle}" />-->
					<TextBlock Text="Refresh" 
								HorizontalAlignment="Center"
								VerticalAlignment="Center" 
									Style="{StaticResource WingDingStyle}"
								FontSize="12"/>
				</StackPanel>
			</Button>

			<Button  
				Height="40"
				Width="8"
				Margin="3,0,7,0"
				Background="{StaticResource HeaderBrushRed}"
				Foreground="White"
				Template="{StaticResource HorizontalGradientTemplateRed}"
				/>

			<Button  
					x:Name="CloseBtn"
					Height="40"
					Width="90"
					Margin="0,0"
					Style="{StaticResource RedToBlackButton}"				
				Click="Close_Click"				
					>
				<StackPanel Orientation="Horizontal" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
					<TextBlock FontFamily="Wingdings" 
								Text="ü"
									Style="{StaticResource WingDingStyle}" />
					<TextBlock Text="Close" 
								HorizontalAlignment="Center"
								VerticalAlignment="Center" 
									Style="{StaticResource WingDingStyle}"
								FontSize="12"/>
				</StackPanel>
			</Button>
			<!--#endregion BUTTON BAR -->

		</StackPanel>
		<!--#endregion Top bar-->

		<!--#region Bank Data Grid-->
		<DataGrid x:Name="BankGrid"
				AlternatingRowBackground="{StaticResource Blue4}"
				AutoGenerateColumns="False"
				CanUserAddRows="False"
				ColumnHeaderStyle ="{StaticResource HeaderStyleBlue}"
			      DataGridCell.Selected="BankGrid_Selected"
				GotFocus="BankGrid_GotFocus"
				Grid.Row="3"
				Grid.Column="1"
				HorizontalAlignment="Stretch" 
				IsSynchronizedWithCurrentItem="True"
				Margin="0,10,0,0"
				Padding="10"
				RowEditEnding="ViewerGrid_RowEditEnding"
				ScrollViewer.ScrollChanged="BankGrid_ScrollChanged"
			      SelectionChanged="BankGrid_SelectionChanged"
				SelectionMode="Single"
				SelectionUnit="FullRow"
				VerticalAlignment="Stretch"
				VerticalContentAlignment="Center"
				VerticalGridLinesBrush="{StaticResource Blue2}"	   
				Visibility="Visible"
				    >
			<DataGrid.Resources>
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#CCFAFB"/>
				<Style TargetType="DataGridCell">
					<Style.Triggers>
						<Trigger Property="DataGridCell.IsSelected" Value="True">
							<Setter Property="FontWeight" Value="SemiBold" />
							<Setter Property="Foreground" Value="White" />
							<Setter Property="Background" Value="#6578FD" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</DataGrid.Resources>

			<!--#region bankfields-->
			<DataGrid.Columns >
				<DataGridTemplateColumn Header="Id" Width="40"
									x:Name="ID"
									    SortMemberPath="Id" >
					<DataGridTemplateColumn.CellTemplate >
						<DataTemplate >
							<TextBlock 
									Text="{Binding Id}"
									HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate >
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn >

				<DataGridTextColumn Header="Customer #" Binding="{Binding CustNo, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="Bank #" Width="80" 
								    SortMemberPath="BankNo"
									Binding ="{Binding BankNo, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus}"
									>
				</DataGridTextColumn>

				<DataGridTextColumn Header="Type" Width="40" 
								    SortMemberPath="AcType"
									Binding="{Binding AcType, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus}"/>

				<DataGridTextColumn Header="Balance" Width="90" 
									SortMemberPath="Balance"									
									Binding="{Binding Balance, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus,
									StringFormat='£ ##,###,###.00'}"/>

				<DataGridTextColumn Header="Interest" Width="60" 
									SortMemberPath="IntRate"
									Binding="{Binding IntRate, Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus,
									StringFormat='0.00'}"/>
				<!--CellStyle="{StaticResource CenterText}"-->

				<!--the next 2 show 2 ways to format a date - 1 a Converter the other a direct Format string-->
				<DataGridTemplateColumn Header="Open Date" Width="80" SortMemberPath="ODate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=ODate,
								StringFormat='dd/MM/yyyy'}"  	 									
								     HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=ODate, 
								StringFormat='dd/MM/yyyy',
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
							</DatePicker>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Close Date" Width="80" SortMemberPath="CDate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=CDate, 
									StringFormat='dd/MM/yyyy'}"
									HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=CDate, 
								StringFormat='dd/MM/yyyy',
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

			</DataGrid.Columns>
			<!--#endregion bankfields-->

		</DataGrid>
		<!--#endregion Bank Data Grid-->

		<!--#region Customer DataGrid-->
		<DataGrid x:Name="CustomerGrid"
				AlternatingRowBackground="{StaticResource Yellow2}"
				AutoGenerateColumns="False"
				CanUserAddRows="False"
				ColumnHeaderStyle ="{StaticResource HeaderStyleYellow}"
				GotFocus="CustomerGrid_GotFocus"
				Grid.Row="4"
				Grid.Column="1"
				IsSynchronizedWithCurrentItem="True"
				Margin="0,10,0,0"
				Padding="10"
				RowEditEnding="ViewerGrid_RowEditEnding"
				ScrollViewer.ScrollChanged="BankGrid_ScrollChanged"
			      SelectionChanged="CustGrid_SelectionChanged"
				SelectionMode="Single"
				SelectionUnit="FullRow"
				VerticalAlignment="Stretch"
				HorizontalAlignment="Stretch"
				VerticalContentAlignment="Center"
				VerticalGridLinesBrush="{StaticResource Yellow0}"
				Visibility="Visible"
				    >
			<DataGrid.Resources>
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FACF8A"/>
				<Style TargetType="DataGridRow">
					<Style.Triggers>
						<Trigger Property="DataGridCell.IsSelected" Value="True">
							<Setter Property="FontWeight" Value="SemiBold" />
							<Setter Property="Foreground" Value="Black" />
							<Setter Property="Background" Value="Yellow" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</DataGrid.Resources>

			<!--#region Customer fields-->
			<DataGrid.Columns >
				<DataGridTemplateColumn Header="Id" Width="40"
									    SortMemberPath="Id" >
					<DataGridTemplateColumn.CellTemplate >
						<DataTemplate >
							<TextBlock 
									Text="{Binding Id}"
									HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate >
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn >

					<DataGridTextColumn Header="Customer #" Binding="{Binding CustNo, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="Bank #" Width="80" 
								    SortMemberPath="BankNo"
									Binding ="{Binding BankNo, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus}"
									>
				</DataGridTextColumn>

				<DataGridTextColumn Header="Type" Width="40" 
								    SortMemberPath="AcType"
									Binding="{Binding AcType, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus}"/>

				<DataGridTextColumn Header="Forename" Binding="{Binding FName, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="Surname" Binding="{Binding LName, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="Address 1" Binding="{Binding Addr1, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="Address 2" Binding="{Binding Addr2, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>


				<DataGridTextColumn Header="Town" Binding="{Binding Town, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="County" Binding="{Binding County, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>

				<DataGridTextColumn Header="Post Code" Binding="{Binding PCode, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>



				<!--the next 2 show 2 ways to format a date - 1 a Converter the other a direct Format string-->
				<DataGridTemplateColumn Header="Open Date" Width="80" SortMemberPath="ODate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=ODate,
								StringFormat='dd/MM/yyyy'}"  	 									
								     HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=ODate, 
								StringFormat='dd/MM/yyyy',
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
							</DatePicker>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Close Date" Width="80" SortMemberPath="CDate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=CDate, 
									StringFormat='dd/MM/yyyy'}"
									HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=CDate, 
								StringFormat='dd/MM/yyyy',
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

			</DataGrid.Columns>
			<!--#endregion Customer fields-->

		</DataGrid>
		<!--#endregion Customer DataGrid-->

		<!--#region Details  DataGrid-->
		<DataGrid  x:Name="DetailsGrid"
				AlternatingRowBackground="{StaticResource Green4}"
				AutoGenerateColumns="False"
				CanUserAddRows="False"
				ColumnHeaderStyle ="{StaticResource HeaderStyleGreen}"
				GotFocus="DetailsGrid_GotFocus"
				Grid.Row="5"
				Grid.Column="1"
				HorizontalAlignment="Stretch" 
				IsSynchronizedWithCurrentItem="True"
				Margin="0,10,0,0"
				Padding="10"
				RowEditEnding="ViewerGrid_RowEditEnding"
				ScrollViewer.ScrollChanged="BankGrid_ScrollChanged"
			      SelectionChanged="DetGrid_SelectionChanged"
				SelectionMode="Single"
				SelectionUnit="FullRow"
				VerticalContentAlignment="Center"
				VerticalAlignment="Stretch"
				VerticalGridLinesBrush="{StaticResource Green2}"
				Visibility="Visible"
			     >
			<DataGrid.Resources>
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#79FF59"/>
				<Style TargetType="DataGridCell">
					<Setter Property="Foreground" Value="Black" />
					<Setter Property="Background" Value="{StaticResource Green4}" />
					<Style.Triggers>
						<!--<Trigger Property="DataGridCell.Focusable" Value="True">-->
						<Trigger Property="DataGridCell.IsSelected" Value="True">
							<Setter Property="Foreground" Value="Black" />
							<Setter Property="FontWeight" Value="SemiBold" />
							<Setter Property="Background" Value="limeGreen" />
						</Trigger>
						<!--<Trigger Property="DataGridCell.IsSelected" Value="False">
							<Setter Property="Foreground" Value="Black" />
							<Setter Property="Background" Value="{StaticResource Green4}" />
						</Trigger>-->
					</Style.Triggers>
				</Style>
			</DataGrid.Resources>

			<!--#region Details fields-->
			<DataGrid.Columns >
				<DataGridTemplateColumn Header="Id" Width="40"
									    SortMemberPath="Id" >
					<DataGridTemplateColumn.CellTemplate >
						<DataTemplate >
							<TextBlock 
									Text="{Binding Id}"
									HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate >
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn >

					<DataGridTextColumn Header="Customer #" Binding="{Binding CustNo, 
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
				</DataGridTextColumn>
				<DataGridTextColumn Header="Bank #" Width="80" 
								    SortMemberPath="BankNo"
									Binding ="{Binding BankNo, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus}"
									>
				</DataGridTextColumn>


				<DataGridTextColumn Header="Type" Width="40" 
								    SortMemberPath="AcType"
									Binding="{Binding AcType, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus}"/>

				<DataGridTextColumn Header="Balance" Width="90" 
									SortMemberPath="Balance"									
									Binding="{Binding Balance, 
									Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus,
									StringFormat='£ ##,###,###.00'}"/>

				<DataGridTextColumn Header="Interest" Width="60" 
									SortMemberPath="IntRate"
									Binding="{Binding IntRate, Mode=TwoWay, 
									UpdateSourceTrigger=LostFocus,
									StringFormat='0.00'}"/>
				<!--CellStyle="{StaticResource CenterText}"-->

				<!--the next 2 show 2 ways to format a date - 1 a Converter the other a direct Format string-->
				<DataGridTemplateColumn Header="Open Date" Width="80" SortMemberPath="ODate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=ODate,
								StringFormat='dd/MM/yyyy'}"  	 									
								     HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=ODate, 
								StringFormat='dd/MM/yyyy',
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}">
							</DatePicker>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Close Date" Width="80" SortMemberPath="CDate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=CDate, 
									StringFormat='dd/MM/yyyy'}"
									HorizontalAlignment="Center"
									VerticalAlignment="Top"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=CDate, 
								StringFormat='dd/MM/yyyy',
									Mode=TwoWay, 
									UpdateSourceTrigger=PropertyChanged}"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

			</DataGrid.Columns>
			<!--#endregion Details fields-->

		</DataGrid>

		<!--#endregion Details  DataGrid-->
		<TextBlock
			x:Name="StatusBar"
			Background="Beige"
			Foreground="Red"
			FontWeight="SemiBold"
			Grid.Row="6"
			Grid.Column="1"
			Grid.ColumnSpan="2"
			HorizontalAlignment="Stretch"
			Padding="4"
			TextAlignment="Center"
			Margin="5"
			Text = "All available Records are shown above in all three grids"
			/>
		<Button
			  Background="{StaticResource HeaderBrushGray}"
			  Click="Minimize_click"
			  Content="-v-"
			  Foreground="White"
			  Grid.Column="1"
			  Height="20"
			  HorizontalAlignment="Right"
			  MouseDown="Window_MouseDown"
			  Opacity="50"
			  Template="{StaticResource HorizontalGradientTemplateGray}"
			  VerticalContentAlignment="Top"
			  Visibility="Visible"
			  Width="20" Margin="0,0,3,0"/>
	</Grid>
</Window>
