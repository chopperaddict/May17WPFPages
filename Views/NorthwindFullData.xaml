<Window x:Class="WPFPages.Views.NorthwindFullData"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFPages.Views"
	  xmlns:userctrl="clr-namespace:WPFPages.UserControls" 
	  xmlns:system="clr-namespace:System;assembly=mscorlib"
	  xmlns:conv="clr-namespace:WPFPages.Converts"
	  xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase" 	  
	  xmlns:command="clr-namespace:WPFPages.Commands" 
	  
	  
	  mc:Ignorable="d"
	  MinHeight=" 650"
	  MinWidth="850"
	  Loaded="Window_Loaded"
	  Closing="Window_Closing"
        Title="Full NorthWind Data Grid" 
	  Height="650" 
	  Width="850"
	  Background="{StaticResource Cyan6}">
	<!--d:DataContext="{d:DesignInstance Type=local:nwcustomer}"-->

	<Window.Resources>

		<userctrl:CloseReturnButton x:Key="CloseButton"/>
		<local:SelectedToYesNoConverter x:Key="SelectedToYesNo"/>
		<local:DummyDebugConverter x:Key="DummyConverter"/>
		<local:NorthwindFullData x:Key="q"/>
		<conv:ValueToTextConverter  x:Key="ValueToText"/>
		<local:nwcustomer  x:Key="CustDb"/>
		<local:nworder  x:Key="OrderDb"/>
		<!--Bind customer object-->
		<local:nwcustomer x:Key="customerdatacontext"/>
		<!--<local:NorthWindFullData x:Key="Commands"/>-->

		<SolidColorBrush x:Key="Blue4" Color="#FF5579BD" />

		<LinearGradientBrush x:Key="HeaderBlue" StartPoint="0.5,0" EndPoint="0.5,1">
			<GradientStop Offset="0" Color="#FF6B8E95" />
			<GradientStop Offset="1" Color="#FF14A7C1" />
			<GradientStop Offset="0.509" Color="#FF1E424E" />
			<GradientStop Offset="0.542" Color="#FF1D4855" />
			<GradientStop Offset="0.542" Color="#FF1D4855" />
			<GradientStop Offset="0.526" Color="#FF193A44" />
		</LinearGradientBrush>
		<Style x:Key="dgStyle1" TargetType="DataGridRow">
			<!--<Style.Triggers>
				<Trigger Property="IsSelected" Value="True"/>
				<Trigger Property="IsFocused" Value="True"/>
			</Style.Triggers>
			<Style.Setters>
				<Setter Property="Background" Value="{StaticResource Red5}"/>
				<Setter Property="Foreground" Value="{StaticResource Black1}"/>
			</Style.Setters>-->
		</Style>

		<Style x:Key="DgCheckBoxStyle" TargetType="CheckBox">
			<Style.Triggers >
				<!--// CheckBox control "tick" Background & Border-->
				<Trigger  Property="IsChecked" Value="true">
					<Setter Property="Background" Value="{StaticResource Red6}" />
					<Setter Property="Foreground" Value="{StaticResource Black0}" />
					<Setter Property="FontWeight" Value="Bold" />
					<Setter Property="BorderBrush" Value="{StaticResource White0}" />
				</Trigger>
				<Trigger  Property="IsChecked" Value="False">
					<Setter Property="Background" Value="{StaticResource White0}" />
					<Setter Property="Foreground" Value="Black" />
					<Setter Property="FontWeight" Value="Normal" />
					<Setter Property="BorderBrush" Value="{StaticResource Red0}" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<!--<Style x:Key="DgCheckBoxContent" TargetType="ContentPresenter">
			<Style.Triggers>
				-->
		<!--// Window IS FOCUSED
				// SELECTED row Background & Border-->
		<!--
				<Trigger  Property="IsChecked" Value="true">
					<Setter Property="Background" Value="{StaticResource Blue3}" />
					<Setter Property="Foreground" Value="{StaticResource Blue0}" />
					<Setter Property="BorderBrush" Value="{StaticResource Red0}" />
				</Trigger>
				<Trigger  Property="IsChecked" Value="False">
					<Setter Property="Background" Value="{StaticResource White0}" />
					<Setter Property="Foreground" Value="Black" />
					<Setter Property="BorderBrush" Value="{StaticResource Red0}" />
				</Trigger>
			</Style.Triggers>
		</Style>-->

		<ContextMenu x:Key="NwDetailsContextMenu">
			<MenuItem Header="View currently selected Record in Details Window"  Click="ShowDetailedView_Click" >
				<MenuItem.Icon>
					<Image Source="/Icons/text-message.png"  />
				</MenuItem.Icon>
			</MenuItem>
	
		</ContextMenu>

		
	</Window.Resources>
	
	<Grid 
		PreviewMouseRightButtonDown="NwStandard_PreviewMouseRightButtonDown"		
		d:DataContext="{d:DesignInstance Type=local:nwcustomer}">	   	

		<Grid.Background>			
			<!--  create an elegant left to right light-> Dark gradient as a background  -->
			<LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
				<GradientStop Offset="0.9" Color="#333333" />
				<GradientStop Offset="0.4" Color="#35F6FB" />
			</LinearGradientBrush>
		</Grid.Background>

		<!--#region Grid Setup-->
		<Grid.RowDefinitions>
			<RowDefinition Height="25"/>
			<RowDefinition Height="1.5*"/>
			<RowDefinition Height="25"/>
			<RowDefinition Height="1*"/>
			<RowDefinition Height="25"/>
			<RowDefinition Height="1*"/>
			<RowDefinition Height="25"/>
			<RowDefinition Height="0.6*"/>
			<RowDefinition Height="70"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="10"/>
			<ColumnDefinition Width="262"/>
			<ColumnDefinition Width="10"/>
			<ColumnDefinition Width="80"/>
			<ColumnDefinition Width="10"/>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="150"/>
			<ColumnDefinition Width="10"/>
		</Grid.ColumnDefinitions>
		<!--#endregion Grid Setup-->

		<!--#region Customer header bar-->
		<StackPanel Orientation="Horizontal"
			     Grid.Row="0"
			     Grid.Column="1"
			     Height="25"				
			     Grid.ColumnSpan="5">

			<TextBlock Text="Customers Db  :  Total Records : "
			     Height="25"
			     Padding="3"
			     FontWeight="Bold"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>

			<TextBlock x:Name="CustTotal"
				Text="{Binding CustomersTotal}"
			     Height="25"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Background="Transparent"
			     Width="30"				     
			     Foreground="{StaticResource Black1}"/>

			<TextBlock x:Name="CustomersTot"
				Text="{Binding CustomerTotal}"
			     FontWeight="Bold"
			     Height="25"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>

			<TextBlock Text=" : Current : "
			     Height="25"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>

			<!--Text="{Binding CustomersTotal, diag:PresentationTraceSources.TraceLevel=High}"-->
			<!--Text="{Biding UpdateSourceTrigger=Explicit, Path=Sample, RelativeSource={RelativeSource FindAncestor, AncestorType=Window, AncestorLevel=1}}"-->
			<!--Text="{Binding CustomerCurrent, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType=local:nwcustomer}}"-->

			<!--<TextBlock d:DataContext="{d:DesignInstance Type=local:CustomerCollection}" x:Name="CustCurrent"-->
			<!--<TextBlock x:Name="CustCurrent"-->
			<TextBlock x:Name="CustCurrent"
				Text="{Binding CurrentCustomer}"
			     Height="25"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Background="Transparent"
			     Width="30"				     
			     Foreground="{StaticResource Black1}"/>

		</StackPanel>
		<!--#endregion Customer header bar-->


		<DataGrid x:Name="CustomersGrid"
			Grid.Row="1"
			Grid.Column="1"
			Grid.ColumnSpan="6"
			AutoGenerateColumns="False"
			AlternatingRowBackground="{StaticResource Magenta8}"
			CanUserAddRows="False"
			CanUserSortColumns="True"
			IsSynchronizedWithCurrentItem="False"
			SelectedItem="CustomersGrid_Selected"
			RowHeight="20"
			MinHeight="80"
			VerticalAlignment="Stretch"
			RowStyle="{StaticResource dgStyle1}"
			SelectionMode="Single"
			SelectionUnit="FullRow"
			SelectionChanged="CustomerGrid_SelectionChanged" 
			    >
			<!--VirtualizingStackPanel.IsVirtualizing="False"-->
			<!--Loaded="CustomersGrid_Loaded"-->

			<DataGrid.Columns>
				<DataGridTemplateColumn Header=" Cust Id" Width="80" SortMemberPath="CustomerId">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=CustomerId}" 
								     HorizontalAlignment="Center"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Company" Width="160"  SortMemberPath="CompanyName">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=CompanyName}" 
								     HorizontalAlignment="Left"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Contact" Width="130"  SortMemberPath="ContactName
								">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=ContactName}" 
								     HorizontalAlignment="Left"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Contact Title" Width="150"  SortMemberPath="ContactTitle">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=ContactTitle}" 
								     HorizontalAlignment="Left"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Address" Width="170" SortMemberPath="Address">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=Address}" 
								     HorizontalAlignment="Left"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="City" Width="100" SortMemberPath="City">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=City}" 
								     HorizontalAlignment="Center"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Region" Width="60"  SortMemberPath="Region">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=Region}" 
								     HorizontalAlignment="Center"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Postal Code" Width="70"  SortMemberPath="PostalCode">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=PostalCode}" 
								     HorizontalAlignment="Left"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>


				<DataGridTemplateColumn Header="Country" Width="80"  SortMemberPath="Country">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=Country}" 
								     HorizontalAlignment="Left"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Phone" Width="100"  SortMemberPath="Phone">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=Phone}" 
								     HorizontalAlignment="Center"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Fax" Width="100"  SortMemberPath="Fax">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=Fax}" 
								     HorizontalAlignment="Center"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
			</DataGrid.Columns>

			<DataGrid.CellStyle>
				<Style TargetType="{x:Type DataGridCell}">
					<Style.Triggers>
						<!--// Window IS FOCUSED-->
						<!--// SELECTED row Background & Border-->
						<Trigger  Property="IsSelected" Value="true">
							<Setter Property="Background" Value="{StaticResource Red6}" />
							<Setter Property="Foreground" Value="White" />
							<Setter Property="BorderBrush" Value="{StaticResource White0}" />
						</Trigger>

						<!--=========================================================================================================-->
						<!--NOT selected, unfocused-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="false" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="true" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="Background" Value="{StaticResource Magenta5}" />
								<Setter Property="Foreground" Value="White" />
								<Setter Property="FontWeight" Value="DemiBold" />
								<Setter Property="BorderBrush" Value="Transparent" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						<!--selected, unfocused-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="false" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="Background" Value="{StaticResource Magenta1}" />
								<Setter Property="Foreground" Value="White" />
								<Setter Property="BorderBrush" Value="{StaticResource White1}" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						<!--Selected, Focused-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="Background" Value="{StaticResource Magenta0}" />
								<Setter Property="Foreground" Value="White" />
								<Setter Property="BorderBrush" Value="{StaticResource White3}" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
					</Style.Triggers>
				</Style>
			</DataGrid.CellStyle>
		</DataGrid>
		
		<!--#region grid labels-->

		<StackPanel Orientation="Horizontal"
			     Grid.Row="2"
			     Grid.Column="1"
			     Height="25"
			     Grid.ColumnSpan="3">
			<TextBlock Text="Orders Db  :  Total Records : "
			     Height="25"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>

			<TextBlock x:Name="OrdersTot"
				Text="{Binding OrdersTotal}"
			     FontWeight="Bold"
			     Height="25"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>

			<TextBlock Text=" : Current : "
			     Height="25"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>

			<!--<TextBlock x:Name="OrdCurrent"-->
			<TextBlock x:Name="currentOrder"
				Text="{Binding CurrentOrder}"
			     Height="25"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>
		</StackPanel>
		<!--<TextBlock Text="Orders Db"
			     Grid.Row="2"
			     Grid.Column="1"
			     Height="25"
			     Grid.ColumnSpan="2"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>-->

		<DataGrid x:Name="OrdersGrid"
			Grid.Row="3"
			Grid.Column="1"
			Grid.ColumnSpan="6"
			AlternatingRowBackground="{StaticResource Blue9}"
			AutoGenerateColumns="False"
			CanUserAddRows="False"
			IsSynchronizedWithCurrentItem="True"
			RowHeight="20"
			RowBackground="Bisque"
			HorizontalScrollBarVisibility="Auto"
			VerticalAlignment="Stretch"
			Foreground="Black"
			SelectionChanged="OrdersGrid_SelectionChanged"
			SelectionMode="Single"
			SelectionUnit="FullRow"
			MinHeight="80">
			<!--Loaded="OrdersGrid_Loaded"-->
			<DataGrid.Columns>
				<DataGridTextColumn Header="Order Id" Binding="{Binding Path=OrderId}" Width="60" SortMemberPath="OrderId"/>
				<DataGridTextColumn Header="Cust.Id" Binding="{Binding Path=CustomerId}" Width="70" SortMemberPath="CustomerId"/>
				<DataGridTextColumn Header="Emp. Id" Binding="{Binding Path=EmployeeId}" Width="40" SortMemberPath="EmployeeId"/>
				<DataGridTextColumn Header="Order Date" Binding="{Binding Path=OrderDate}" Width="80" SortMemberPath="OrderDate"/>
				<DataGridTextColumn Header="Req. Date" Binding="{Binding Path=RequiredDate}" Width="75" SortMemberPath="RequiredDate"/>
				<DataGridTextColumn Header="Shipped" Binding="{Binding Path=ShippedDate}" Width="75" SortMemberPath="ShippedDate"/>
				<DataGridTextColumn Header="Ship Via" Binding="{Binding Path=ShipVia}" Width="45" SortMemberPath="ShipVia"/>
				<DataGridTextColumn Header="Freight" Binding="{Binding Path=Freight}" Width="55" SortMemberPath="Freight"/>
				<DataGridTextColumn Header="Ship Name" Binding="{Binding Path=ShipName}" Width="125" SortMemberPath="ShipName"/>
				<DataGridTextColumn Header="Ship Address" Binding="{Binding Path=ShipAddress}" Width="125" SortMemberPath="ShipAddress"/>
				<DataGridTextColumn Header="Ship City" Binding="{Binding Path=ShipCity}" Width="85" SortMemberPath="ShipCity"/>
				<DataGridTextColumn Header="Ship Region" Binding="{Binding Path=ShipRegion}" Width="45" SortMemberPath="ShipRegion"/>
				<DataGridTextColumn Header="Ship Post Code" Binding="{Binding Path=ShipPostalCode}" Width="75" SortMemberPath="ShipPostalCode"/>
				<DataGridTextColumn Header="Ship Country" Binding="{Binding Path=ShipCountry}" Width="75" SortMemberPath="ShipCountry"/>
			</DataGrid.Columns>

			<DataGrid.CellStyle>
				<Style TargetType="{x:Type DataGridCell}">
					<Style.Triggers>
						<!--// Window IS FOCUSED-->
						<!--// SELECTED row Background & Border-->
						<Trigger  Property="IsSelected" Value="true">
							<Setter Property="Background" Value="{StaticResource Red6}" />
							<Setter Property="Foreground" Value="White" />
							<Setter Property="BorderBrush" Value="{StaticResource White0}" />
						</Trigger>

						<!--=========================================================================================================-->
						<!--NOT selected, unfocused-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="false" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="true" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="Background" Value="{StaticResource Cyan2}" />
								<Setter Property="Foreground" Value="White" />
								<Setter Property="FontWeight" Value="DemiBold" />
								<Setter Property="BorderBrush" Value="Transparent" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						<!--selected, unfocused-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<!--<Condition Binding="{Binding AcType}" Value="1"/>-->
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
								<!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=RowHeight}" Value="25" />-->
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="false" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<!--<Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Cyan4}" />-->
								<Setter Property="Background" Value="{StaticResource Cyan0}" />
								<Setter Property="Foreground" Value="White" />
								<Setter Property="BorderBrush" Value="{StaticResource Black1}" />
								<Setter Property="Height" Value="30" />

								<!--<Setter Property="FontSize" Value="16" />-->
								<Setter Property="FontWeight" Value="Normal"/>
								<Setter Property="Padding" Value="0,0,0,0"/>
								<Setter Property="Margin" Value="0,0,0,0"/>
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<!--<Condition Binding="{Binding AcType}" Value="1"/>-->
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
								<!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=RowHeight}" Value="25" />-->
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<!--<Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Cyan4}" />-->
								<Setter Property="Background" Value="{StaticResource Blue1}" />
								<Setter Property="Foreground" Value="White" />
								<Setter Property="BorderBrush" Value="{StaticResource White3}" />
								<Setter Property="Height" Value="30" />

								<!--<Setter Property="FontSize" Value="16" />-->
								<!--
								<Setter Property="FontWeight" Value="Normal"/>
								<Setter Property="Padding" Value="0,0,0,0"/>
								<Setter Property="Margin" Value="0,0,0,0"/>-->
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
					</Style.Triggers>
				</Style>
			</DataGrid.CellStyle>
		</DataGrid>

		<StackPanel Orientation="Horizontal"
			     Grid.Row="4"
			     Grid.Column="1"
			     Height="25"
			     Grid.ColumnSpan="3">
			<TextBlock Text="Products Db  :  Total Records : "
			     Height="25"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>
			<!--<TextBlock x:Name="ProductsTot"-->
			<TextBlock x:Name="ProductsTot"
				Text="{Binding ProductTotal}"
			     Height="25"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>
			<TextBlock Text=" : Current : "
			     Height="25"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>
			<TextBlock x:Name="Currentproducts"
				Text="{Binding CurrentProduct}"
			     Height="25"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>
		</StackPanel>

		<!--#endregion grid labels-->
		<DataGrid x:Name="ProductsGrid"
			Grid.Row="5"
			Grid.Column="1"
			Grid.ColumnSpan="6"
			AlternatingRowBackground="{StaticResource Green9}"
			AutoGenerateColumns="False"
			CanUserAddRows="False"
			HorizontalScrollBarVisibility="Auto"
			IsSynchronizedWithCurrentItem="True"
			VerticalAlignment="Stretch"
			RowHeight="25"
			RowBackground="Bisque"
			SelectionChanged="ProductsGrid_SelectionChanged"
			SelectionMode="Single"
			SelectionUnit="FullRow"
			Foreground="Black"
			MinHeight="30">

			<DataGrid.Columns >

				<DataGridTextColumn Header="Id" Binding="{Binding Path=ProductId}" Width="30" SortMemberPath="ProductId"/>
				<DataGridTextColumn Header="Prod. Name" Binding="{Binding Path=ProductName}" Width="100" SortMemberPath="ProductName"/>
				<DataGridTextColumn Header="Sup. Id" Binding="{Binding Path=SupplierId}" Width="50" SortMemberPath="SupplierId"/>
				<DataGridTextColumn Header="Cat. Id" Binding="{Binding Path=CategoryId}" Width="45" SortMemberPath="CategoryId"/>
				<DataGridTextColumn Header="Qty/Unit" Binding="{Binding Path=QuantityPerUnit}" Width="115" SortMemberPath="QuantityPerUnit"/>
				<DataGridTextColumn Header="Unit Price" Binding="{Binding Path=UnitPrice}" Width="65" SortMemberPath="UnitPrice"/>
				<DataGridTextColumn Header="Stock" Binding="{Binding Path=UnitsInStock}" Width="45" SortMemberPath="UnitsInStock"/>
				<DataGridTextColumn Header="Ordered" Binding="{Binding Path=UnitsOnOrder}" Width="55" SortMemberPath="UnitsOnOrder"/>
				<DataGridTextColumn Header="Reorder #" Binding="{Binding Path=ReorderLevel}" Width="55" SortMemberPath="ReorderLevel"/>

				<!--// CheckBox column - special handling applied-->
				<DataGridTemplateColumn Header="Discontinued" Width="100" SortMemberPath="Discontinued" 								>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<!--// FINALLY - THIS ACTUALLY WORKS //-->
							<CheckBox x:Name="ChkBox" 
								Content="{Binding ElementName=ChkBox, 
								UpdateSourceTrigger=PropertyChanged, 
								Converter={StaticResource 
								SelectedToYesNo},
								Path=IsChecked}"
								    Style="{StaticResource DgCheckBoxStyle}"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

			</DataGrid.Columns>

			<DataGrid.CellStyle>
				<Style TargetType="{x:Type DataGridCell}">
					<Style.Triggers>
						<!--// Window IS FOCUSED-->
						<!--// SELECTED row Background & Border-->
						<Trigger  Property="IsSelected" Value="true">
							<Setter Property="Background" Value="{StaticResource Red6}" />
							<Setter Property="Foreground" Value="White" />
							<Setter Property="BorderBrush" Value="{StaticResource White0}" />
						</Trigger>

						<!--=========================================================================================================-->

						<!--NOT selected, unfocused-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="false" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="true" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="Background" Value="{StaticResource Green7}" />
								<Setter Property="Foreground" Value="Black" />
								<Setter Property="FontWeight" Value="Bold" />
								<Setter Property="BorderBrush" Value="Transparent" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<!--<Condition Binding="{Binding AcType}" Value="1"/>-->
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
								<!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=RowHeight}" Value="25" />-->
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="false" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<!--<Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Cyan4}" />-->
								<Setter Property="Background" Value="{StaticResource Green4}" />
								<Setter Property="Foreground" Value="White" />
								<Setter Property="BorderBrush" Value="{StaticResource Black1}" />
								<Setter Property="Height" Value="30" />

								<!--<Setter Property="FontSize" Value="16" />-->
								<Setter Property="FontWeight" Value="Normal"/>
								<Setter Property="Padding" Value="0,0,0,0"/>
								<Setter Property="Margin" Value="0,0,0,0"/>
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<!--<Condition Binding="{Binding AcType}" Value="1"/>-->
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
								<!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=RowHeight}" Value="25" />-->
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<!--<Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Cyan4}" />-->
								<Setter Property="Background" Value="{StaticResource Red0}" />
								<Setter Property="Foreground" Value="White" />
								<Setter Property="BorderBrush" Value="{StaticResource White3}" />
								<Setter Property="Height" Value="30" />

								<!--<Setter Property="FontSize" Value="16" />-->
								<!--<Setter Property="FontWeight" Value="Normal"/>
								<Setter Property="Padding" Value="0,0,0,0"/>
								<Setter Property="Margin" Value="0,0,0,0"/>-->
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
					</Style.Triggers>
				</Style>
			</DataGrid.CellStyle>
		</DataGrid>

		  <!--#region Label row-->
		<StackPanel Orientation="Horizontal"
			     Grid.Row="6"
			     Grid.Column="1"
			     Height="25"
				Margin="0,3,0,0"
			     Grid.ColumnSpan="2">

			<TextBlock Text="Order Details Db  :  Total : "
			     Height="25"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>

			<TextBlock x:Name="OrderDetailsTot"
				Text="{Binding OrderDetailsTotal}"
			     FontWeight="Bold"
			     Height="25"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>

			<TextBlock Text=" : Current : "
			     Height="25"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>
			<TextBlock x:Name="CurrentOrdDetails"
				Text="{Binding CurrentOrderDetail}"
			     Height="25"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>
		</StackPanel>
		<!--#endregion Label row-->

		<!--#region Categories Label row-->

		<StackPanel Orientation="Horizontal"
			     Grid.Row="6"
			     Grid.Column="4"
			     Height="25"
				Margin="-65,0,0,0"
			     Grid.ColumnSpan="2">

			<TextBlock Text="Categories Db  :  Total Records : "
			     Height="20"
			     Padding="3"
			     FontWeight="Bold"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>

			<TextBlock x:Name="CategoriesTot"
				Text="{Binding CategoriesTotal}"
			     Height="20"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>

			<TextBlock Text=" : Current : "
			     Height="20"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>
			<TextBlock x:Name="CurrentCategory"
				Text="{Binding CurrentCategory}"
			     Height="20"
			     FontWeight="Bold"
			     Padding="3"
			     VerticalAlignment="Center"
			     Foreground="{StaticResource Black1}"/>
		</StackPanel>
		<!--#endregion Categories Label row-->

		<DataGrid x:Name="OrderDetailsGrid"
			AutoGenerateColumns="False"
			AlternatingRowBackground="{StaticResource Blue9}"
			CanUserAddRows="False"
			Foreground="Black"
			Grid.Row="7"
			Grid.Column="1"
			Grid.ColumnSpan="3"
			HorizontalScrollBarVisibility="Auto"
			HorizontalAlignment="Left"
			IsSynchronizedWithCurrentItem="True"
			MinWidth="110"
			MinHeight="20"
			RowHeight="20"
			RowBackground="Bisque"
			SelectionChanged="OrderDetailsGrid_SelectionChanged"
			SelectionMode="Single"
			SelectionUnit="FullRow"
			VerticalScrollBarVisibility="Visible"
			VerticalAlignment="Stretch"
			>
			<!--Loaded="OrderDetailsGrid_Loaded"-->
			<DataGrid.Columns>
				<DataGridTextColumn Header="Order Id" Binding="{Binding Path=OrderId}" Width="60" SortMemberPath="OrderId"/>
				<DataGridTextColumn Header="Prod.Id" Binding="{Binding Path=ProductId}" Width="50" SortMemberPath="ProductId"/>
				<DataGridTextColumn Header="Unit Price" Binding="{Binding Path=UnitPrice}" Width="60" SortMemberPath="UnitPrice"/>
				<DataGridTextColumn Header="Qty" Binding="{Binding Path=Quantity}" Width="40" SortMemberPath="Quantity"/>
				<DataGridTextColumn Header="Discnt" Binding="{Binding Path=Discount}" Width="45" SortMemberPath="Discount"/>
				<!--<DataGridTemplateColumn Header="Image" Width="50" IsReadOnly="True">-->
				<!--<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Image Source="{Binding Path=ImageInBytes}" Width="40" Height="40"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>-->
			</DataGrid.Columns>

			<DataGrid.CellStyle>
				<Style TargetType="{x:Type DataGridCell}">
					<Style.Triggers>
						<!--// Window IS FOCUSED-->
						<!--// SELECTED row Background & Border-->
						<Trigger  Property="IsSelected" Value="true">
							<Setter Property="Background" Value="{StaticResource Red6}" />
							<Setter Property="Foreground" Value="White" />
							<Setter Property="BorderBrush" Value="{StaticResource White0}" />
						</Trigger>

						<!--=========================================================================================================-->
						<!--NOT selected, unfocused-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="false" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="true" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="Background" Value="{StaticResource Blue5}" />
								<Setter Property="Foreground" Value="White" />
								<Setter Property="FontWeight" Value="Bold" />
								<Setter Property="BorderBrush" Value="Transparent" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						<!--selected, unfocused-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<!--<Condition Binding="{Binding AcType}" Value="1"/>-->
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
								<!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=RowHeight}" Value="25" />-->
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="false" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<!--<Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Cyan4}" />-->
								<Setter Property="Background" Value="{StaticResource Blue3}" />
								<Setter Property="Foreground" Value="White" />
								<Setter Property="BorderBrush" Value="{StaticResource Black1}" />
								<Setter Property="Height" Value="30" />

								<!--<Setter Property="FontSize" Value="16" />-->
								<Setter Property="FontWeight" Value="Normal"/>
								<Setter Property="Padding" Value="0,0,0,0"/>
								<Setter Property="Margin" Value="0,0,0,0"/>
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<!--<Condition Binding="{Binding AcType}" Value="1"/>-->
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
								<!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=RowHeight}" Value="25" />-->
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<!--<Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Cyan4}" />-->
								<Setter Property="Background" Value="{StaticResource Red0}" />
								<Setter Property="Foreground" Value="White" />
								<Setter Property="BorderBrush" Value="{StaticResource White3}" />
								<Setter Property="Height" Value="30" />

								<!--<Setter Property="FontSize" Value="16" />-->
								<!--<Setter Property="FontWeight" Value="Normal"/>
								<Setter Property="Padding" Value="0,0,0,0"/>
								<Setter Property="Margin" Value="0,0,0,0"/>-->
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
					</Style.Triggers>
				</Style>
			</DataGrid.CellStyle>
		</DataGrid>

		<DataGrid x:Name="CategoriesGrid"
			Grid.Row="7"
			Grid.Column="3"
			Grid.ColumnSpan="4"
			AlternatingRowBackground="{StaticResource Yellow4}"
			AutoGenerateColumns="False"
			CanUserAddRows="False"
			HorizontalScrollBarVisibility="Hidden"			    
			HorizontalAlignment="Stretch"
			IsSynchronizedWithCurrentItem="True"
			VerticalAlignment="Stretch"
			Margin="10,3,0,0"
			RowHeight="30"
			SelectionChanged="CategoriesGrid_SelectionChanged"
			SelectionMode="Single"
			SelectionUnit="FullRow"
			Foreground="Black"
			MinHeight="30">
			<!--Loaded="CategoriesGrid_Loaded"-->
			<DataGrid.Columns>
				<DataGridTemplateColumn Header=" Cat Id" Width="50" SortMemberPath="CategoryId">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=CategoryId}" Width="50"
								     HorizontalAlignment="Center"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Name" Width="140" SortMemberPath="Name">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=CategoryName}" 
								     HorizontalAlignment="Center"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="Description" Width="auto" SortMemberPath="Description">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=Description}" 
								     HorizontalAlignment="Center"
								     TextAlignment="Center"
								     VerticalAlignment="Center"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<!--<DataGridTemplateColumn Header="Image" Width="70" IsReadOnly="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Image Source="{Binding Path=ImageInBytes}" Width="60" Height="40"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>-->
			</DataGrid.Columns>

			<DataGrid.CellStyle>
				<Style TargetType="{x:Type DataGridCell}">
					<Style.Triggers>
						<!--// Window IS FOCUSED-->
						<!--// SELECTED row Background & Border-->
						<!--<Trigger  Property="IsSelected" Value="false">
							<Setter Property="Background" Value="{StaticResource Red9}" />
							<Setter Property="Foreground" Value="{StaticResource Black2}" />
							<Setter Property="FontWeight" Value="DemiBold" />
							<Setter Property="BorderBrush" Value="{StaticResource White0}" />
						</Trigger>-->

						<!--=========================================================================================================-->
						<!--NOT selected, unfocused-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="false" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="true" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="Background" Value="{StaticResource Green8}" />
								<Setter Property="Foreground" Value="Black" />
								<Setter Property="FontWeight" Value="DemiBold" />
								<Setter Property="BorderBrush" Value="Transparent" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<!--Selected, MouseOver-->
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<!--<Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Cyan4}" />-->
								<Setter Property="Background" Value="{StaticResource Red0}" />
								<Setter Property="Foreground" Value="White" />
								<Setter Property="BorderBrush" Value="{StaticResource White3}" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						<!--Selected, Not MouseOver-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="False" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<!--<Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Cyan4}" />-->
								<Setter Property="Background" Value="{StaticResource Red6}" />
								<Setter Property="Foreground" Value="White" />
								<Setter Property="BorderBrush" Value="{StaticResource White3}" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						<!--Not Selected, Not Mouseover-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="False" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<!--<Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Cyan4}" />-->
								<Setter Property="Background" Value="{StaticResource Red9}" />
								<Setter Property="Foreground" Value="{StaticResource Blue0}" />
								<Setter Property="BorderBrush" Value="{StaticResource White3}" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						<!--Not selected, Mouseover-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="false" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<!--<Setter Property="Background" Value="{Binding Converter={StaticResource UniversalConvert}, ConverterParameter=Cyan4}" />-->
								<Setter Property="Background" Value="{StaticResource Red8}" />
								<Setter Property="Foreground" Value="{StaticResource White0}" />
								<Setter Property="BorderBrush" Value="{StaticResource White3}" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
					</Style.Triggers>
				</Style>
			</DataGrid.CellStyle>
		</DataGrid>
		
		<!--#region buttons-->		
		<!--This allows MOST standard properties to be changed at the user design stage-->
		<userctrl:CloseReturnButton		
			BorderColor ="{StaticResource Magenta2}"
			ButtonText="Close Me"
			MouseoverButtonText="Closing"
			ButtonWidth="90" 
			ButtonHeight="52"
			ColorBackground="Transparent"
			FillColor="{StaticResource Yellow0}"
			FontHeight="16"
			FontFamily="Lucida Sans"
			FontWeight="Bold"
			Grid.Column="6" Grid.Row="8"  
			HorizontalAlignment="Left" 
			Loaded="CloseReturnButton_Loaded"
			Margin="45,5,0,10"
			MouseOverColor="{StaticResource Blue2}"
			MouseoverTextColor="{StaticResource White1}"
			PreviewMouseLeftButtonDown="CloseReturnButton_PreviewMouseLeftButtonDown"
			PreviewMouseMove="CloseReturnButton_PreviewMouseMove"
			StrokeWidth="5"
			TextColor="{StaticResource Red5}"
			/>
		<Button
			Width="80"
			Height="40"
				Grid.Column="5" Grid.Row="8"  
			Grid.ColumnSpan="2"
			Background="Red"
			FontSize="18"
			Margin="120,0,0,0"
			Content="Export"
			Click="Export_Click"
			Foreground="White"/>
		<Button
			Width="80"
			Height="40"
				Grid.Column="5" Grid.Row="8"  
			Margin="70,0,0,0"
			Background="Green"
			FontSize="18"
			Content="Import"
			Click="Import_Click"
			Foreground="White"/>
		<!--Command="{Binding Command, Source={StaticResource Commands}}"-->
		<Button
			Width="180"
			Click="ShowSelectedView_Click"
			Height="40"
			Grid.Column="5" Grid.Row="8"  
			Margin="-49,15,0,15"
			Background="Blue"
			FontSize="18"
			Content="Selected Item View"
			Foreground="White" HorizontalAlignment="Left"/>
		<!--#endregion buttons-->

	</Grid>
</Window>
