<Window x:Class="WPFPages.Views.RunSearchPaths"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFPages.Views"
        mc:Ignorable="d"
        Title="File Load/Run/Execute System" 
	  Closing="Window_Closing"
	  Height="450" 
	  MinHeight="300"
	  Width="654"
	  MinWidth="550"
	  WindowStartupLocation="CenterOwner"
	  WindowState="Normal"
	  WindowStyle="SingleBorderWindow">

	<Window.Background>
		<!--create an elegant left to right light-> Dark gradient as a background-->
		<LinearGradientBrush EndPoint="0,1" StartPoint="1,0">
			<GradientStop Color="#333333" Offset="0.97" />
			<GradientStop Color="LightGray" Offset="0" />
		</LinearGradientBrush>
	</Window.Background>

	<Window.Resources>
		
		<SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
		<SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>

		<ControlTemplate x:Key="ListView1" TargetType="{x:Type ListViewItem}">
			<!-- NB - it is the Border that controls the buttons default colors
			which lets us set Back/Foreground and border colors in the button itself
			but still have mouseover etc working correctly, but still have our text "Content" display--><!--
			<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
				   BorderThickness="{TemplateBinding BorderThickness}" 
				   Background="{TemplateBinding Background}" 
				   CornerRadius="5"
				   SnapsToDevicePixels="True">
				<ContentPresenter x:Name="contentPresenter" 
						ContentTemplate="{TemplateBinding ContentTemplate}" 
						Content="{TemplateBinding Content}" 
						ContentStringFormat="{TemplateBinding ContentStringFormat}" 
						Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
						Margin="{TemplateBinding Padding}" 
						RecognizesAccessKey="True" 
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Border>
			<ControlTemplate.Triggers>
				--><!--This handles the button being set as IsDefault=true-->
				<!--<Trigger Property="FrameworkElement.Tag" Value="True">
					<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
					--><!--<Setter Property="Background" TargetName="border" Value="Green"/>--><!--
					<Setter Property="Background" TargetName="border">
						<Setter.Value>
							<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
								<GradientStop Color="#ff4f2225" Offset="0.314"/>
								<GradientStop Color="#FF9c2129" Offset="0.553"/>
								<GradientStop Color="#FFdb6069" Offset="1"/>
							</LinearGradientBrush>
						</Setter.Value>
					</Setter>
					<Setter Property="BorderBrush" TargetName="border" Value="Black"/>
				</Trigger>--><!--
				<Trigger Property="IsSelected" Value="True">
					--><!--MouseOver handling--><!--
					<Setter Property="FontWeight"  Value="Bold"/>
					<Setter Property="ListViewItem.Foreground"  TargetName="border">
						<Setter.Value>
							<LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
								<GradientStop Color="White" Offset="0.454"/>
								<GradientStop Color="Red" Offset="0.633"/>
								<GradientStop Color="#FF000000" Offset="1"/>
							</LinearGradientBrush>
						</Setter.Value>
					</Setter>
					<Setter Property="Control.Foreground"  TargetName="border">
						<Setter.Value>
							<LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
								<GradientStop Color="White" Offset="0.454"/>
								<GradientStop Color="gray" Offset="0.633"/>
								<GradientStop Color="#FF000000" Offset="1"/>
							</LinearGradientBrush>
						</Setter.Value>
					</Setter>
					<Setter Property="Background" TargetName="border">
						<Setter.Value>
							<LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
								<GradientStop Color="#ff4f2225" Offset="0.314"/>
								<GradientStop Color="#FF9c2129" Offset="0.553"/>
								<GradientStop Color="#FFdb6069" Offset="1"/>
							</LinearGradientBrush>

							--><!--<LinearGradientBrush StartPoint="1,0" EndPoint="0,1" >
							<GradientStop Color="Gray" Offset="0"/>
							<GradientStop Color="DarkOrange" Offset="1"/>
						</LinearGradientBrush>--><!--
						</Setter.Value>
					</Setter>
				</Trigger>
				--><!--<Trigger Property="ToggleButton.IsChecked" Value="True">
					--><!--Handles any checkbox style checked option--><!--
					<Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
					<Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
				</Trigger>--><!--
				<Trigger Property="IsEnabled" Value="False">
					--><!--Handles disabled status--><!--
					<Setter Property="Background" TargetName="border" Value="Gray"/>
					<Setter Property="BorderBrush" TargetName="border" Value="Red"/>
					<Setter Property="Foreground" Value="White"/>
				</Trigger>
				--><!--<Trigger Property="ContentPresenter" Value="Reset">
				-->
				<!--Handles disabled status-->
				<!--
				<Setter Property="Background" TargetName="border" Value="Green"/>
				<Setter Property="BorderBrush" TargetName="border" Value="White"/>
				<Setter Property="Foreground" Value="White"/>
			</Trigger>--><!--
			</ControlTemplate.Triggers>-->
		</ControlTemplate>

		<Style x:Key ="LvMouseOverStyle" TargetType="ListViewItem" >
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property="Background" Value="Red" />
					<Setter Property="Foreground" Value="White" />
				</Trigger>
				<Trigger Property="IsSelected" Value="true">
					<Setter Property="BorderThickness" Value="1"/>
					<Setter Property="BorderBrush" Value="White"/>
					<Setter Property="Foreground" Value="Blue" />
				</Trigger>
			</Style.Triggers>
		</Style>

	</Window.Resources>


	<Grid 
	    Margin="0,0,10,0">
		<Grid.RowDefinitions>
			<RowDefinition Height="10"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="45"/>
			<RowDefinition Height="5"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="10"/>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="65"/>
			<ColumnDefinition Width="65"/>
			<ColumnDefinition Width="65"/>
			<ColumnDefinition Width="95"/>
			<ColumnDefinition Width="10"/>
		</Grid.ColumnDefinitions>

		<ListView x:Name="listView" 
			    Margin="0,10,0,10"
			    Background="Gray"
			    Foreground="White"
			    Grid.Row="1"
			    Grid.Column="1"
			    Grid.ColumnSpan="5"	
				SelectionMode="Single"
			    >
			<!--Style="{StaticResource ListViewStyle1}"-->

			<ListView.Resources>
				<ControlTemplate x:Key="SelectedTemplate" TargetType="ListViewItem">
					<Border SnapsToDevicePixels="true" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}"
                    CornerRadius="5" x:Name="border">
						<ContentControl 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    Margin="2,2,2,2" 
                    VerticalAlignment="Stretch"
                    Content="{TemplateBinding Content}" />
					</Border>
				</ControlTemplate>
				<Style TargetType="ListViewItem">
					<Setter Property="Background" Value="{StaticResource Blue3}"/>
					<Setter Property="Height" Value="30"/>
					<Setter Property="FontWeight" Value="Bold"/>
					<Style.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="Selector.IsSelectionActive" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource Blue0}" />
							<Setter Property="Foreground" Value="{StaticResource White0}" />
							<Setter Property="Template" Value="{StaticResource SelectedTemplate}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="Selector.IsSelectionActive" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource Blue0}" />
							<Setter Property="Foreground" Value="{StaticResource White0}" />
							<Setter Property="Template" Value="{StaticResource SelectedTemplate}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<!--<Condition Property="Selector.IsSelectionActive" Value="false" />-->
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource Red0}" />
							<Setter Property="Foreground" Value="{StaticResource White0}" />
							<Setter Property="Template" Value="{StaticResource SelectedTemplate}" />
						</MultiTrigger>
					</Style.Triggers>
				</Style>
			</ListView.Resources>

			<!--<ListViewItem Selected="ListView_Selected"
					Background="{StaticResource Gray}"	
				     Foreground="{StaticResource White0}"
					  
					  >-->

			<ListViewItem
				Background="Blue"
				Foreground="White"
				Content="{Binding SearchPaths}"
				Style="{StaticResource LvMouseOverStyle}">
				
			</ListViewItem>
				>
				<!--<DataTemplate>
					<TextBlock Text="{Binding Path}"
							     FontWeight="Bold"
						     Height="25"
						     HorizontalAlignment="Center"
						     VerticalAlignment="Bottom"
						     Padding="10,5,20,0"	
						     Width="800"
						     />
					--><!--Background="{StaticResource HeaderBorderBrushRed}"	
						     Foreground="{StaticResource White0}"--><!--
				</DataTemplate>-->
			<!--</ListView.ItemTemplate>-->
			<!--Background="{StaticResource HeaderBorderBrushRed}"	
			    Foreground="{StaticResource White0}"-->

			<!--<ListView.View>
				<GridView>
					<GridViewColumn Header="Name" Width="400"  DisplayMemberBinding="{Binding Path}">
					<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding searches}"
									     Background="Beige"
									     Foreground="Black"
									     />

							</DataTemplate>
					</GridViewColumn.CellTemplate>
					</GridViewColumn>
				</GridView>
			</ListView.View>-->
		</ListView>

		<Button x:Name="CancelBtn" 			  
			  Background="{StaticResource HeaderBorderBrushRed}"	
			  Click="CloseBtn_Click"
			  Content="Cancel/Close" 
			  Foreground="White"
			  Grid.Column="5"
			  Grid.ColumnSpan="1"
			  Grid.Row="2"
			  Grid.RowSpan="1"
			  Height="37" 
			  HorizontalAlignment="Right" 
			  Margin="0,0,0,10" 
			  Template="{StaticResource HorizontalGradientTemplateRed}"
			  VerticalAlignment="Bottom" 
			  Width="90" />
		<Button
			  x:Name="Remove_Item"
			  Click="Remove_Click"
			  Content="Remove"
			  Background="{StaticResource HeaderBrushGreen}"
			  Foreground="White"
			  Grid.Column="4" 
			  Grid.Row="2"
			  Height="35"
			  HorizontalAlignment="Right"
			  IsEnabled="True"
			  Margin="0,0,0,10"
			  Template="{StaticResource HorizontalGradientTemplateGreen}"
			  VerticalAlignment="Bottom"
			  Width="60" />

		<Button
				x:Name="Save"
				Click="Save_Click"
				Content="Save"
				Background="{StaticResource HeaderBrushGreen}"
				Foreground="White"
				Grid.Column="3" 
				Grid.Row="2"
				Height="35"
				HorizontalAlignment="right"
				IsEnabled="True"
				Margin="0,0,0,10"
				Template="{StaticResource HorizontalGradientTemplateGreen}"
				VerticalAlignment="Bottom"
				Width="60" />

		<TextBox x:Name="TxtSearchPath" 
			   Grid.Column="1" 
			   Grid.ColumnSpan="1"
			   HorizontalAlignment="Stretch" 
			   Margin="0,9,0,0" 
			   Grid.Row="2" 
			   Text="" 
			   TextWrapping="NoWrap" 
			   VerticalAlignment="Top" 
			   Width="324"/>

		<Button
			  x:Name="Search"
			  Click="Search_Click"
			  Content="Search"
			  Background="{StaticResource HeaderBrushGreen}"
			  Foreground="White"
			  Grid.Column="2" 
			  Grid.ColumnSpan="1" 
			  Grid.Row="2"
			  Height="35"
			  HorizontalAlignment="Left"
			  IsEnabled="True"
			  Margin="0,0,0,0"
			  Template="{StaticResource HorizontalGradientTemplateGreen}"
			  VerticalAlignment="Top"
			  Width="60" />


	</Grid>
</Window>
