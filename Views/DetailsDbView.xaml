<Window
	x:Class="WPFPages.Views.DetailsDbView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:WPFPages.Views"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	Title="Details A/C Editor"
	Width="800"
	Height="450"
	MinWidth="760"
	MinHeight="400"
	d:DataContext="{d:DesignInstance Type=local:DetCollection}"
	Closing="Window_Closing"
	DataContext="DetviewerView"
	Loaded="Window_Loaded"
	mc:Ignorable="d">

	<Window.Resources>

		<!--
			This is how to "point" at data to automatically conect
			fields to the data itself with no other actions needed
		-->

		<!--  This one is used in here  -->
		<!--<local:BankCollection x:Key="BankData"/>-->

		<!--<bank:BankAccountViewModel x:Key="BankViewData"/>-->

		<Style x:Key="HeaderStyleGreen" TargetType="DataGridColumnHeader">
			<Setter Property="Background" Value="{StaticResource HeaderBrushGreen}" />
			<Setter Property="Foreground" Value="White" />
			<Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrushGreen}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="MinWidth" Value="0" />
			<Setter Property="MinHeight" Value="30" />
			<Setter Property="Cursor" Value="Hand" />
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{StaticResource HeaderBorderBrushGreen}" />
				</Trigger>
			</Style.Triggers>
		</Style>


		<CollectionViewSource x:Key="src" Source="{Binding DetViewerView}" />

	</Window.Resources>
	<Grid>

		<!--#region grid setup-->

		<Grid.RowDefinitions>
			<RowDefinition Height="30" />
			<RowDefinition Height="5*" />
			<RowDefinition Height="135" />
			<RowDefinition Height="10" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="15" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="110" />
			<ColumnDefinition Width="110" />
			<ColumnDefinition Width="10" />
		</Grid.ColumnDefinitions>

		<Grid.Background>
			<!--  create an elegant left to right light-> Dark gradient as a background  -->
			<LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
				<GradientStop Offset="0" Color="#00FF00" />
				<!--<GradientStop Color="#DDFFDD" Offset="0.553"/>-->
				<GradientStop Offset="1" Color="#00000000" />
			</LinearGradientBrush>
		</Grid.Background>

		<!--#endregion grid setup-->

		<Menu
			Grid.Row="0"
			Grid.Column="1"
			Width="auto"
			Height="30"
			Margin="5"
			HorizontalAlignment="Left"
			Background="Transparent">

			<MenuItem
				Width="80"
				Foreground="{StaticResource Black1}"
				Header="_Linq Queries">
				<MenuItem
					Background="#35F6FB"
					Click="Linq1_Click"
					Foreground="Black"
					Header="A/c Type 1 Only"
					IsCheckable="false" />
				<MenuItem
					Background="#35F6FB"
					Click="Linq2_Click"
					Foreground="Black"
					Header="A/c Type 2 Only"
					IsCheckable="False" />
				<MenuItem
					Background="#35F6FB"
					Click="Linq3_Click"
					Foreground="Black"
					Header="A/c Type 3 Only"
					IsCheckable="False" />
				<MenuItem
					Background="#35F6FB"
					Click="Linq4_Click"
					Foreground="Black"
					Header="A/c Type 4 Only"
					IsCheckable="False" />
				<MenuItem
					Background="#35F6FB"
					Click="Linq5_Click"
					Foreground="Black"
					Header="Multi A/C Holders"
					IsCheckable="False" />
				<Separator />
			</MenuItem>

			<MenuItem
				Width="60"
				Click="Filter_Click"
				Foreground="{StaticResource Black1}"
				Header="Filtering">
				<MenuItem
					x:Name="FilterReset"
					Background="#35F6FB"
					Click="Filterx_Click"
					Foreground="Black"
					Header="Reset to ALL Ac's"
					IsCheckable="false" />
				<MenuItem
					x:Name="Filter1"
					Background="#35F6FB"
					Click="Filterx_Click"
					Foreground="Black"
					Header="A/c Type = 1"
					IsCheckable="false" />
				<MenuItem
					x:Name="Filter2"
					Background="#35F6FB"
					Click="Filterx_Click"
					Foreground="Black"
					Header="A/c Type = 2"
					IsCheckable="false" />
				<MenuItem
					x:Name="Filter3"
					Background="#35F6FB"
					Click="Filterx_Click"
					Foreground="Black"
					Header="A/c Type = 3"
					IsCheckable="false" />
				<MenuItem
					x:Name="Filter4"
					Background="#35F6FB"
					Click="Filterx_Click"
					Foreground="Black"
					Header="A/c Type = 4"
					IsCheckable="false" />
			</MenuItem>

			<MenuItem
				Width="50"
				Click="Options_Click"
				Foreground="{StaticResource Black1}"
				Header="Options" />

			<MenuItem
				Width="50"
				Click="Exit_Click"
				Foreground="{StaticResource Black2}"
				Header="Exit...">
				<!--<MenuItem Header="Setup Filter"
					    Background="#35F6FB"
					    Click="Filter_Click"
					    Foreground="Black"
					    IsCheckable="false"/>-->
			</MenuItem>
		</Menu>



		<DataGrid
			x:Name="DetGrid"
			Grid.Row="1"
			Grid.RowSpan="1"
			Grid.Column="1"
			Grid.ColumnSpan="4"
			Margin="0,0,10,8"
			Padding="-10"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			VerticalContentAlignment="Center"
			AlternatingRowBackground="{StaticResource Green4}"
			AutoGenerateColumns="False"
			CanUserAddRows="False"
			CellEditEnding="DetGrid_CellEditEnding"
			ColumnHeaderStyle="{StaticResource HeaderStyleGreen}"
			IsSynchronizedWithCurrentItem="False"
			IsTabStop="False"
			RowEditEnding="ViewerGrid_RowEditEnding"
			SelectionChanged="DetGrid_SelectionChanged"
			SelectionMode="Single"
			SelectionUnit="FullRow"
			VerticalGridLinesBrush="{StaticResource Green2}">
			<!--  DataContext="{Binding DetViewerView}"  -->
			<!--
				SelectedIndex="{Binding SelectedIndex}"
				SelectedItem="{Binding SelectedItem}"
			-->
			<!--  DataGridCell.Selected="BankGrid_Selected"  -->
			<!--  ItemsSource="{Binding Source={StaticResource BankData}}"  -->

			<DataGrid.Background>
				<!--  create an elegant left to right light-> Dark gradient as a background  -->
				<LinearGradientBrush StartPoint="1.3,1" EndPoint="0.0,0">
					<GradientStop Offset="0.453" Color="#DDFFDD" />
					<GradientStop Offset="1" Color="#FF00FF00" />
				</LinearGradientBrush>
			</DataGrid.Background>

			<DataGrid.Resources>
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DarkGreen" />
				<Style TargetType="DataGridCell">
					<Style.Triggers>
						<Trigger Property="DataGridCell.IsSelected" Value="True">
							<Setter Property="FontWeight" Value="Bold" />
							<Setter Property="Foreground" Value="White" />
							<Setter Property="Background" Value="DarkGreen" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</DataGrid.Resources>

			<!--#region bank Columns-->
			<DataGrid.Columns>
				<DataGridTemplateColumn
					x:Name="ID"
					Width="40"
					Header="Id"
					SortMemberPath="Id">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock
								HorizontalAlignment="Center"
								VerticalAlignment="Top"
								Text="{Binding Id}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTextColumn Binding="{Binding CustNo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Customer #" />

				<DataGridTextColumn
					Width="80"
					Binding="{Binding BankNo, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
					Header="Bank #"
					SortMemberPath="BankNo" />

				<DataGridTextColumn
					Width="40"
					Binding="{Binding AcType, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
					Header="Type"
					SortMemberPath="AcType" />

				<DataGridTextColumn
					Width="90"
					Binding="{Binding Balance, Mode=TwoWay, UpdateSourceTrigger=LostFocus, StringFormat='£ ##,###,###.00'}"
					Header="Balance"
					SortMemberPath="Balance" />

				<DataGridTextColumn
					Width="60"
					Binding="{Binding IntRate, Mode=TwoWay, UpdateSourceTrigger=LostFocus, StringFormat='0.00'}"
					Header="Interest"
					SortMemberPath="IntRate" />
				<!--  CellStyle="{StaticResource CenterText}"  -->

				<!--  the next 2 show 2 ways to format a date - 1 a Converter the other a direct Format string  -->
				<DataGridTemplateColumn
					Width="80"
					Header="Open Date"
					SortMemberPath="ODate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock
								HorizontalAlignment="Center"
								VerticalAlignment="Top"
								Text="{Binding Path=ODate, StringFormat='dd/MM/yyyy'}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=ODate, StringFormat='dd/MM/yyyy', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn
					Width="80"
					Header="Close Date"
					SortMemberPath="CDate">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock
								HorizontalAlignment="Center"
								VerticalAlignment="Top"
								Text="{Binding Path=CDate, StringFormat='dd/MM/yyyy'}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<DatePicker SelectedDate="{Binding Path=CDate, StringFormat='dd/MM/yyyy', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

			</DataGrid.Columns>
			<!--#endregion bankfields-->


		</DataGrid>

		<Grid
			Grid.Row="2"
			Grid.Column="1"
			Margin="4,0,0,3"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			DataContext="BankGrid"
			RenderTransformOrigin="0.632,0.51">
			<Grid.RowDefinitions>
				<RowDefinition Height="50" />
				<RowDefinition Height="60*" />
			</Grid.RowDefinitions>

			<Canvas
				x:Name="DataFields"
				Grid.Row="0"
				Grid.RowSpan="2"
				Margin="0,2"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch">

				<!--#region Text Fields-->

				<TextBlock
					x:Name="textBlock"
					Grid.Row="1"
					Grid.Column="3"
					Canvas.Left="2"
					Canvas.Top="31"
					Width="70"
					Height="25"
					Padding="5,5,5,5"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					FontWeight="Bold"
					Foreground="Black"
					Text="Customer #" />

				<TextBox
					x:Name="Custno"
					Canvas.Left="86"
					Canvas.Top="29"
					Width="90"
					Height="24"
					Padding="5,3,0,0"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					HorizontalContentAlignment="Center"
					FontSize="12"
					Foreground="Black"
					TabIndex="0"
					Text="{Binding CustNo, UpdateSourceTrigger=LostFocus, FallbackValue=Cust  #}" />

				<TextBlock
					x:Name="textBlock_Copy"
					Canvas.Left="-2"
					Canvas.Top="56"
					Width="70"
					Height="25"
					Padding="5,5,5,5"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					FontWeight="Bold"
					Foreground="Black"
					Text="Bank A/c #" />

				<TextBox
					x:Name="Bankno"
					Canvas.Left="86"
					Canvas.Top="56"
					Width="90"
					Height="24"
					Padding="5,3,0,0"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					HorizontalContentAlignment="Center"
					FontSize="12"
					Foreground="Red"
					RenderTransformOrigin="0.422,2.208"
					TabIndex="1"
					Text="{Binding BankNo, UpdateSourceTrigger=LostFocus, FallbackValue=Bank A/c #}" />

				<TextBlock
					x:Name="textBlock_Copy5"
					Canvas.Left="2"
					Canvas.Top="84"
					Width="70"
					Height="25"
					Padding="5,5,5,5"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					FontWeight="Bold"
					Foreground="Black"
					Text="A/c Type" />

				<TextBox
					x:Name="acType"
					Canvas.Left="86"
					Canvas.Top="84"
					Width="90"
					Height="24"
					Padding="5,3,0,0"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					HorizontalContentAlignment="Center"
					FontSize="12"
					Foreground="Black"
					SelectionChanged="SelectionChanged"
					TabIndex="2"
					Text="{Binding AcType, FallbackValue=AcType, UpdateSourceTrigger=LostFocus}"
					TextAlignment="Center"
					TextChanged="TextChanged" />

				<TextBlock
					x:Name="textBlock_Copy1"
					Canvas.Left="194"
					Canvas.Top="25"
					Width="84"
					Height="25"
					Padding="5,5,5,5"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					FontWeight="Bold"
					Foreground="Black"
					RenderTransformOrigin="0.457,-0.36"
					Text="A/c Balance" />

				<TextBox
					x:Name="balance"
					Canvas.Left="184"
					Canvas.Top="55"
					Width="104"
					Height="32"
					Padding="5,3,0,0"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					HorizontalContentAlignment="Center"
					FontSize="16"
					FontWeight="DemiBold"
					Foreground="Red"
					SelectionChanged="SelectionChanged"
					TabIndex="3"
					Text="{Binding Path=Balance, FallbackValue=Balance, UpdateSourceTrigger=LostFocus}"
					TextAlignment="Center"
					TextChanged="TextChanged" />


				<TextBlock
					x:Name="textBlock_Copy3"
					Canvas.Left="306"
					Canvas.Top="57"
					Width="88"
					Height="24"
					Padding="5,5,5,5"
					FontWeight="DemiBold"
					Foreground="Black"
					Text="Date Opened"
					TextAlignment="Center" />

				<TextBox
					x:Name="odate"
					Canvas.Left="399"
					Canvas.Top="60"
					Width="90"
					Height="24"
					Padding="5,3,0,0"
					HorizontalContentAlignment="Center"
					FontSize="12"
					SelectionChanged="SelectionChanged"
					TabIndex="4"
					Text="{Binding ODate, FallbackValue=ODate, UpdateSourceTrigger=LostFocus, StringFormat='dd/MM/yyyy'}"
					TextAlignment="Center"
					TextChanged="TextChanged" />

				<TextBlock
					x:Name="textBlock_Copy4"
					Canvas.Left="309"
					Canvas.Top="83"
					Width="70"
					Height="25"
					Padding="5,5,5,5"
					FontWeight="Bold"
					Foreground="Black"
					Text="Close Date" />

				<TextBox
					x:Name="cdate"
					Canvas.Left="399"
					Canvas.Top="86"
					Width="90"
					Height="24"
					Padding="5,3,0,0"
					HorizontalContentAlignment="Center"
					FontSize="12"
					Foreground="Black"
					SelectionChanged="SelectionChanged"
					TabIndex="5"
					Text="{Binding CDate, FallbackValue=CDate, UpdateSourceTrigger=LostFocus, StringFormat='dd/MM/yyyy'}"
					TextAlignment="Center"
					TextChanged="TextChanged" />
				<TextBlock
					x:Name="Count"
					Canvas.Left="401"
					Canvas.Top="17"
					Width="88"
					Height="24"
					Padding="5,3,5,5"
					Background="DarkGray"
					FontSize="14"
					FontWeight="DemiBold"
					Foreground="Red"
					Text=" Counter"
					TextAlignment="Center"
					TextTrimming="WordEllipsis" />
				<!--#endregion Text Fields-->
			</Canvas>

		</Grid>

		<Button
			x:Name="SaveBttn"
			Grid.Row="2"
			Grid.Column="3"
			Width="100"
			Height="30"
			Margin="10,61,0,0"
			HorizontalAlignment="Center"
			VerticalAlignment="Top"
			Background="{StaticResource HeaderBrushGreen}"
			Click="SaveBtn"
			Content="Save Changes"
			Foreground="White"
			IsEnabled="False"
			TabIndex="6"
			Template="{StaticResource HorizontalGradientTemplateGreen}" />
		<Button
			Grid.Row="2"
			Grid.Column="3"
			Width="100"
			Height="30"
			Margin="10,99,0,0"
			HorizontalAlignment="Center"
			VerticalAlignment="Top"
			Background="{StaticResource HeaderBrushGreen}"
			Click="Close_Click"
			Content="Close"
			Foreground="White"
			KeyDown="ShowBank_KeyDown"
			TabIndex="7"
			Template="{StaticResource HorizontalGradientTemplateGreen}" />
		<CheckBox
			x:Name="OntopChkbox"
			Grid.Row="2"
			Grid.Column="3"
			Grid.ColumnSpan="2"
			Width="100"
			Height="25"
			Margin="15,15,0,0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Click="OntopChkbox_Click"
			Content="Keep on Top"
			FontWeight="Medium"
			Foreground="Black"
			IsChecked="true" />
		<CheckBox
			x:Name="LinkRecords"
			Grid.Row="2"
			Grid.Column="2"
			Grid.ColumnSpan="2"
			Margin="6,14,100,96"
			Click="LinkRecords_Click"
			Content="Link ALL Viewers"
			Foreground="Red" />
		<CheckBox
			x:Name="LinkToParent"
			Grid.Row="2"
			Grid.Column="2"
			Margin="6,39,2,59"
			Click="LinkToParent_Click"
			Content="Link =&gt;Parent"
			Foreground="Red"
			RenderTransformOrigin="0.49,1.56" />
		<Button
			x:Name="MultiAccounts"
			Grid.Row="2"
			Grid.Column="2"
			Width="100"
			Height="30"
			Margin="5,99,5,0"
			HorizontalAlignment="Center"
			VerticalAlignment="Top"
			Background="{StaticResource HeaderBrushGreen}"
			Click="MultiAccts_Click"
			Content="Multi Accounts"
			Foreground="White"
			IsEnabled="true"
			TabIndex="6"
			Template="{StaticResource HorizontalGradientTemplateGreen}" />
	</Grid>

</Window>
