<Window x:Class="WPFPages.Views.UserListBoxViewer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFPages.Views"
	  xmlns:conv="clr-namespace:WPFPages.Converts"
        mc:Ignorable="d"
	  Loaded="Window_Loaded"	  
	  Closed="Window_Closed"
        Title="UserListBoxViewer" Height="450" Width="800"
	  MinHeight="250"
	  MinWidth="600"
	  SizeToContent="Width"
	  >

	<Window.Resources>

		<!--<Style x:Key="LbStyle" TargetType="ListBox">-->
		<!--<Style TargetType="ListBox">-->
		<!--<Setter Property="Background" Value="{StaticResource White0}"/>
			<Setter Property="BorderThickness" Value="0.5"/>
			<Style.Triggers>
				<Trigger Property="IsSelected" Value="True">
					<Setter  Property="Background" Value="{StaticResource Green0}"/>
				</Trigger>
				<Trigger Property="IsMouseOver" Value="True">
					-->
		<!--<Setter  Property="Background" Value="{StaticResource Blue0}"/>-->
		<!--
					<Setter  Property="Background" Value="{StaticResource Red4}"/>
				</Trigger>
			</Style.Triggers>-->
		<!--</Style>-->
		<Style x:Key="LbiStyle" TargetType="ListBoxItem">
			<!--<Setter Property="Background" Value="{StaticResource Green0}"/>-->
			<!--<Setter Property="BorderThickness" Value="0.5"/>
			<Style.Triggers>
				<Trigger Property="IsSelected" Value="True">
					<Setter  Property="Background" Value="{StaticResource Green0}"/>
				</Trigger>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter  Property="Background" Value="{StaticResource Blue0}"/>
					<Setter  Property="Background" Value="{StaticResource White0}"/>
				</Trigger>
			</Style.Triggers>-->
		</Style>

		<!--#region Border Stlyes-->

		<!--#region buttons stlyes only-->
		<!--/ Used on Buttons-->
		<!--// THIS IS THE MASTER BORDER STYLE-->
		<Style x:Key="BaseBorder1Style" TargetType="Border" >
			<Setter Property="Background" Value="{StaticResource Red0}"/>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter  Property="Background" Value="White"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!--/ Used on Buttons-->
		<!--// Handles the ENTIRE border around each record-->
		<!--// This gives a nice 1 pixel white border as you mouse over them-->
		<Style x:Key="Border1Style" TargetType="Border" >
			<!--<Style x:Key="Border1Style" TargetType="Border" BasedOn="{StaticResource BaseBorder1Style}">-->
			<Setter Property="Background" Value="{StaticResource Blue3}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<!--<Setter  Property="Foreground" Value="{StaticResource Black0}"/>-->
					<Setter  Property="Background" Value="{StaticResource Green3}"/>
					<Setter  Property="BorderBrush" Value="{StaticResource White0}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!--#endregion buttons stlyes only-->

		<Style x:Key="Brdr2" TargetType="Border" >
			<Setter Property="Background" Value="Green"/>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{StaticResource Blue0}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!--#endregion Border Stlyes-->

		<!--#region TEXTBLOCK STYLES-->

		<!--// used by post TextBlocks-->
		<Style x:Key="tbItemstyle1" TargetType="TextBlock" >
			<Setter Property="Foreground" Value="DarkBlue"/>
			<Setter Property="FontWeight" Value="DemiBold"/>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsMouseOver" Value="True"/>
						<Condition Property="IsVisible" Value="True"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="{Binding Source={StaticResource Brdr2}}"/>

						<Setter Property="Foreground" Value="{StaticResource Black0}"/>
					</MultiTrigger.Setters>
				</MultiTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="tbItemBankno" TargetType="TextBlock" >
			<!--<Setter Property="Background" Value="{StaticResource Blue4}"/>-->
			<!--<Setter Property="Background" Value="{Binding Source={StaticResource Brdr2}}"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontWeight" Value="DemiBold"/>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsMouseOver" Value="True"/>
						<Condition Property="IsVisible" Value="True"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="Bisque"/>
						<Setter Property="Foreground" Value="{StaticResource Black0}"/>
					</MultiTrigger.Setters>
				</MultiTrigger>
			</Style.Triggers>-->
		</Style>


		<!--// Used for Balance only-->
		<Style x:Key="tbItemstyle2" TargetType="TextBlock" >
			<!--<Setter Property="FontWeight" Value="DemiBold"/>
			<Setter Property="Foreground" Value="Red"/>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsMouseOver" Value="True"/>
						<Condition Property="IsVisible" Value="True"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="{StaticResource Yellow0}"/>
						<Setter Property="Foreground" Value="DarkBlue"/>
					</MultiTrigger.Setters>
				</MultiTrigger>
			</Style.Triggers>-->
		</Style>

		<!--#endregion STYLE - TextBlock-->

		<!--#region STYLE - TextBOX-->

		<!--// TextBox style for fields that can be edited-->
		<Style x:Key="tboxItemstyle1" TargetType="TextBox" >
			<!--<Setter Property="Background" Value="Bisque"/>
			<Setter Property="Foreground" Value="{StaticResource Black0}"/>
			<Setter Property="FontWeight" Value="DemiBold"/>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsMouseOver" Value="True"/>
						<Condition Property="IsVisible" Value="True"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="{StaticResource Red2}"/>
						<Setter Property="Foreground" Value="{StaticResource White0}"/>
					</MultiTrigger.Setters>
				</MultiTrigger>
			</Style.Triggers>-->
		</Style>
		<!--#endregion STYLE - TextBOX-->

		<!--#region STACKPANEL Styles-->
		<Style x:Key="StackPanelstyle1" TargetType="StackPanel" >
			<!--<Setter Property="Background" Value="{StaticResource Blue4}"/>-->
			<!--<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsMouseOver" Value="True"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="{StaticResource Cyan3}"/>
					</MultiTrigger.Setters>
				</MultiTrigger>
			</Style.Triggers>-->
		</Style>

		<!--#endregion STACKPANEL Styles-->

		<!--#region EXPANDER styles-->
		<!--// Lets us handle the Expnader conditionally, only changing color if it is Open-->
		<!--// The border still highlight thanks to the "BaseBorder1Style" border style-->
		<Style x:Key="Expander1" TargetType="Expander" >
			<Setter Property="Background" Value="{StaticResource Blue4}"/>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsMouseOver" Value="True"/>
						<Condition Property="IsExpanded" Value="True"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="Cyan"/>
						<Setter Property="Foreground" Value="{StaticResource White0}"/>
					</MultiTrigger.Setters>
				</MultiTrigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsMouseOver" Value="True"/>
						<Condition Property="IsExpanded" Value="False"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="{StaticResource Green2}"/>
						<!--<Setter Property="Foreground" Value="{StaticResource Red1}"/>-->
					</MultiTrigger.Setters>
				</MultiTrigger>
				<!--<Trigger Property="IsMouseOver" Value="True">
					<Setter  Property="Background" Value="Yellow"/>
				</Trigger>-->
			</Style.Triggers>
		</Style>

		<!--#endregion EXPANDER styles-->


		<ControlTemplate x:Key="DataGridRowTemplate" TargetType="DataGridRow"
				  >
			<Border x:Name="Selectedborder"
				BorderBrush="Black"
				BorderThickness="1"
				Padding="2">
				<Border x:Name="_Border"
						BorderBrush="Red"
						BorderThickness="5"								
						Padding="2" >

					<!--Outermost stackpanel-->
					<StackPanel x:Name="LbItem"
							Orientation="Horizontal"
							Style="{StaticResource StackPanelstyle1}">

						<StackPanel Orientation="Horizontal">
							<TextBlock Text=" "
								     Style="{StaticResource tbItemstyle1}" />
							<TextBlock Text="{Binding CustNo}" 
									Height="20"
									Padding="0"
									Width="60"
									Style="{StaticResource tbItemstyle1}"/>
							<TextBlock Text=":" 												
									Padding="14"
     									Style="{StaticResource tbItemstyle1}"/>
							<TextBlock  Text="{Binding Path=BankNo}" 
									Padding="14"
									Style="{StaticResource tbItemstyle1}"/>
						</StackPanel>

						<StackPanel Orientation="Horizontal">
							<TextBlock Text="  " 
								     Style="{StaticResource tbItemstyle1}"/>
							<TextBox Text="{Binding AcType, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
									VerticalContentAlignment="Center"
									HorizontalContentAlignment="Center"
									Height="30"
									Width="30"
									 PreviewKeyDown="TextBox_PreviewKeyDown"  
									Style="{StaticResource tboxItemstyle1}"/>
							<TextBlock Text="   "
								     Style="{StaticResource tbItemstyle1}"/>
							<TextBlock  Text="{Binding Path=Balance}" 
									Style="{StaticResource tbItemstyle2}"
									HorizontalAlignment="Center"
									Padding="14"
									Width="90" 
									FontSize="16"/>
							<TextBlock Text=" "/>
							<TextBox  Text="{Binding Path=IntRate, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
									Padding="0,4,0,0"
									Height="30"
									HorizontalAlignment="Center"
									HorizontalContentAlignment="Center"
									Width="50" 
									FontSize="14"
									Style="{StaticResource tboxItemstyle1}"/>
						</StackPanel>

						<StackPanel Orientation="Vertical"
								Style="{StaticResource StackPanelstyle1}">
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="   " />
								<TextBlock  
										Foreground="DarkGoldenrod" 
										Text="{Binding Path=ODate, Converter={StaticResource DateConv}}"
										Padding="5"
										Height="21"
										Width="70"/>
							</StackPanel>
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="   " />
								<TextBlock Text="{Binding Path=Date, Converter={StaticResource DateConv}}"
										Padding="5"
										Height="18"
										Foreground="DarkRed" Width="70"/>
							</StackPanel>
						</StackPanel>
					</StackPanel>
				</Border>
			</Border>
		</ControlTemplate>



		<!--// NB ESSENTIAL declaration of a Convertor, Date in this case 
		the Convertor Class name is "dateconvertor", and DateConv is the 
		StaticResource key to use to access it
		conv is declared above to confirm the namespace the convertor Class is declared in-->
		<!--<local:UserListBoxViewer x:Key="LBViewer"/>-->
		<conv:dateconvertor x:Key="DateConv"/>


	</Window.Resources>

	<Grid x:Name="Lbgrid"
	    HorizontalAlignment="Stretch"
	    VerticalAlignment="Stretch"
>
		<Grid.Background>
			<!--create an elegant left to right light-> Dark gradient as a background-->
			<LinearGradientBrush EndPoint="0.0,1" StartPoint="1.3,0">
				<GradientStop Color="#333333" Offset="0.7" />
				<GradientStop Color="LightGray" Offset="0.17" />
			</LinearGradientBrush>
		</Grid.Background>

		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>

		<Border x:Name="Brdr"
			Grid.Row="1"
			Grid.Column="1"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			>

			<Grid x:Name="SelectionGrid"
				Background="Transparent"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				>
				<Grid.RowDefinitions >
					<RowDefinition Height="55" />
					<RowDefinition Height="*"/>
					<RowDefinition Height="50"/>
					<RowDefinition Height="5"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="10"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="10"/>
				</Grid.ColumnDefinitions>

				<!--#region Data content control fields-->
				<Expander IsExpanded="True"
					Grid.Row="0"
					Grid.Column="1"
					Header="Data Selection Options"
					Foreground="White"
					>
					<StackPanel
						Grid.Row="0"
						Grid.Column="1"
						Orientation="Horizontal"
						HorizontalAlignment="Stretch">
						<TextBlock 
					     Width="80"
					     Text="Min. A/C #"
					     FontSize="14"
					     Background="Transparent"
					     Foreground="White"
					     HorizontalAlignment="Left"						
					     Margin="5,5,0,0"/>
						<TextBox x:Name="MinValue"
						Width="60"
						Height="25"
						Text="{Binding Path=CustNo, Mode=TwoWay, Source=this, FallbackValue=1055000}"
						FontSize="14"
						Background="Beige"
						Foreground="Black"
						HorizontalAlignment="Left"
						Margin="10,1,10,0"/>
						<TextBlock 
					     Width="70"
					     Text="Max. A/C #"
					     FontSize="14"
					     Background="Transparent"
					     Foreground="White"
					     HorizontalAlignment="Left"
						Margin="5,5,0,0"/>
						<TextBox x:Name="MaxValue"
						Width="60"
						Height="25"
						Text="{Binding Path=CustNo, Mode=TwoWay, Source=this, FallbackValue=1056000}"
						FontSize="14"
						Background="Beige"
						Foreground="Black"
						HorizontalAlignment="Center"
						Margin="10,1,10,0"/>

						<TextBlock 
						Width="140"
						Height="25"
						FontSize="14"
						Text="Max. Rows to display"
						Background="Transparent"
						Foreground="White"
						HorizontalAlignment="Left"
						Margin="5,5,0,0"/>
						<TextBox x:Name="MaxRecords"
						Width="50"
						Height="25"
						Text="200"
						FontSize="14"
						Background="Beige"
						Foreground="Red"
						Margin="10,1,10,0"
						HorizontalAlignment="Center"
						   HorizontalContentAlignment="Center"/>
						<Button
						x:Name="GetSelection"
						Width="80" Height="35"
						Background="Green"
						Foreground="White"
						Content="  Load Data !      "
						Click="DbList_LoadBtnPressed"
						HorizontalContentAlignment="Center"
						/>
					</StackPanel>
				</Expander>

				<!--#endregion Data content control fields-->

				<DataGrid x:Name="datagrid"
					AlternatingRowBackground="#70BCC8"
					    
					Grid.Row="1"
					Grid.Column="1"
					Grid.ColumnSpan="1"
					AutoGenerateColumns="false"
					Grid.RowSpan="1"
				    CanUserSortColumns="True"					    
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
				    RowHeight="25"
					BorderThickness="1"
					BorderBrush="Red" 
					PreviewMouseLeftButtonDown="Datagrid_PreviewMouseLeftButtonDown"
					Padding="1"
					Margin="10,10,10,-5"
					Visibility="Visible" 
					    Foreground="Black"
					SelectionChanged="datagrid_SelectionChanged">
					<DataGrid.Resources>
						<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FF709EFE" />

						<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF1171E6"/>
						<Style TargetType="{x:Type DataGridCell}">
							<Style.Triggers>
								<Trigger Property="DataGridCell.IsSelected" Value="True">
									<Setter Property="Foreground" Value="White" />
								</Trigger>
							</Style.Triggers>
						</Style>

					</DataGrid.Resources>

					<!--// This works VERY WELL INDEED // -->
					<!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
					<DataGrid.CellStyle>
						<Style TargetType="{x:Type DataGridCell}">
							<Style.Triggers>
								<!--// Window IS FOCUSED-->
								<!--// SELECTED row Background & Border-->
								<Trigger  Property="IsSelected" Value="true">
									<Setter Property="Background" Value="#FF1171E6" />
									<Setter Property="BorderBrush" Value="#FF72DBE0" />
								</Trigger>

								<!--// Window IS NOT FOCUSED-->
								<!--// Handle Background and Foreground colors of SELECTED row-->
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
										<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
									</MultiDataTrigger.Conditions>
									<MultiDataTrigger.Setters>
										<Setter Property="Background" Value="{StaticResource Red1}" />
										<Setter Property="Foreground" Value="{StaticResource White0}" />
										<Setter Property="FontWeight" Value="DemiBold" />
									</MultiDataTrigger.Setters>
								</MultiDataTrigger>

								<!--// Window IS NOT FOCUSED-->
								<!--// Handle Background and Foreground colors of NON SELECTED row-->
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
										<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
									</MultiDataTrigger.Conditions>
									<MultiDataTrigger.Setters>
										<!--<Setter Property="Background" Value="{StaticResource Red1}" />-->
										<Setter Property="Foreground" Value="{StaticResource Gray1}" />
									</MultiDataTrigger.Setters>
								</MultiDataTrigger>

								<!--// Window IS NOT FOCUSED-->
								<!--// Handle Foreground colors of NON SELECTED row-->
								<!--// This sets text to Blue when mouseover of the UNFOCUSED WINDOW-->
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
										<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
										<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsMouseOver}" Value="True" />
									</MultiDataTrigger.Conditions>
									<MultiDataTrigger.Setters>
										<!--<Setter Property="Background" Value="{StaticResource Red1}" />-->
										<Setter Property="Foreground" Value="{StaticResource Blue1}" />
									</MultiDataTrigger.Setters>
								</MultiDataTrigger>

								<!--// Window IS NOT FOCUSED-->
								<!--// Handle Foreground colors of NON SELECTED row-->
								<!--// This sets text to Blue when mouseover of the UNFOCUSED WINDOW-->
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
										<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
										<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsMouseOver}" Value="True" />
									</MultiDataTrigger.Conditions>
									<MultiDataTrigger.Setters>
										<Setter Property="Background" Value="{StaticResource Yellow1}" />
										<Setter Property="Foreground" Value="{StaticResource Black0}" />
									</MultiDataTrigger.Setters>
								</MultiDataTrigger>
							</Style.Triggers>
						</Style>
					</DataGrid.CellStyle>


					<DataGrid.Columns
						>
						<DataGridTemplateColumn>
							<DataGridTemplateColumn.Header>
								<TextBlock Text="Id" 
								     TextAlignment="Center"
								     Foreground="Red" 
								     Background="White"/>
							</DataGridTemplateColumn.Header>
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<TextBlock  x:Name="idfield" 
										Text="{Binding Id}"
										    PreviewMouseMove="Datagrid_PreviewMouseMove"
										/>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
						
						<DataGridTemplateColumn>
							<DataGridTemplateColumn.Header>
								<TextBlock Text="Customer #" 
								     TextAlignment="Center"
								     Foreground="Red" 
								     Background="White"/>
							</DataGridTemplateColumn.Header>
							<DataGridTemplateColumn.CellTemplate >
								<DataTemplate x:Name="GridTemplate"
>
									<TextBlock x:Name="custno2"  Text="{Binding CustNo}"
										    PreviewMouseMove="Datagrid_PreviewMouseMove"
										     >
										<TextBlock.Style>
											<Style TargetType="TextBlock">
												<!--<Setter Property="Foreground" Value="Black"/>-->
												<Setter Property="TextAlignment" Value="Center"/>
												<Style.Triggers>
													<!--<Trigger Property="Background" Value="#70BCC8">
														--><!--<Setter Property="Background" Value="Green"/>--><!--
														<Setter Property="Foreground" Value="Blue"/>
														<Setter Property="FontWeight" Value="Bold"/>
													</Trigger>

													<MultiTrigger>
														<MultiTrigger.Conditions>
															<Condition Property="IsMouseOver" Value="False"/>
															<Condition Property="Background" Value="#ffFFFFFF"/>
														</MultiTrigger.Conditions>
														<MultiTrigger.Setters>
															--><!--<Setter Property="Background" Value="#6470A3AC"/>--><!--
															<Setter Property="Foreground" Value="green"/>
															<Setter Property="FontWeight" Value="Normal"/>
														</MultiTrigger.Setters>
													</MultiTrigger>-->
													<MultiTrigger>
														<MultiTrigger.Conditions>
															<Condition Property="IsMouseOver" Value="True"/>
															<!--<Condition Property="Background" Value="#70BCC8"/>-->
														</MultiTrigger.Conditions>
														<MultiTrigger.Setters>
															<!--<Setter Property="Background" Value="#6470A3AC"/>-->
															<Setter Property="Foreground" Value="White"/>
															<Setter Property="Background" Value="LightCoral"/>
															<Setter Property="FontWeight" Value="Bold"/>
															<Setter Property="FontSize" Value="14"/>
														</MultiTrigger.Setters>
													</MultiTrigger>
													<!--<MultiTrigger>
														<MultiTrigger.Conditions>
															<Condition Property="IsMouseOver" Value="True"/>
															--><!--<Condition Property="IsFocused" Value="True"/>--><!--
														</MultiTrigger.Conditions>
														<MultiTrigger.Setters>
															<Setter Property="Background" Value="{StaticResource Blue3}"/>
															<Setter Property="Foreground" Value="White"/>
															<Setter Property="FontWeight" Value="Bold"/>
														</MultiTrigger.Setters>
													</MultiTrigger>-->
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
						
						<DataGridTemplateColumn>
							<DataGridTemplateColumn.Header>
							<TextBlock Text="Bank A/c #" 
								     TextAlignment="Center"
								     Foreground="Red" 
								     Background="White"/>
							</DataGridTemplateColumn.Header>
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<TextBlock x:Name="bankno" 
										Text="{Binding BankNo}"
										    PreviewMouseMove="Datagrid_PreviewMouseMove"
								     TextAlignment="Center"
										     />
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>

						<DataGridTemplateColumn>
							<DataGridTemplateColumn.Header>
								<TextBlock Text="Type" 
								     Foreground="Red" 
								     Background="White"/>
							</DataGridTemplateColumn.Header>
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<TextBlock x:Name="typefield" 
										Text="{Binding AcType}"
										    PreviewMouseMove="Datagrid_PreviewMouseMove"
								     TextAlignment="Center"
										     />
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
						
						<DataGridTemplateColumn>
						<DataGridTemplateColumn.Header>
							<TextBlock Text="Balance" 
								     TextAlignment="Center"
								     Foreground="Red" 
								     Background="White"/>
						</DataGridTemplateColumn.Header>
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<TextBlock x:Name="balancefield" 
										     Text="{Binding Balance}"
										     MouseEnter="Balancefield_PreviewMouseEnter"
										     MouseLeave="Balancefield_PreviewMouseLeave"
										     MouseMove="Balancefield_MouseMove"
										    PreviewMouseMove="Datagrid_PreviewMouseMove"
											TextAlignment="Center"
											     Width="80">
										<TextBlock.Style>
											<Style TargetType="TextBlock">
												<!--<Setter Property="Foreground" Value="Black"/>
												<Setter Property="TextAlignment" Value="Center"/>
												<Style.Triggers>
													--><!--<Trigger Property="IsMouseOver" Value="True">
														--><!--<Setter Property="Background" Value="{StaticResource Red0}"/>--><!--
														<Setter Property="Foreground" Value="White"/>
														<Setter Property="FontWeight" Value="Bold"/>
													</Trigger>--><!--
													<MultiTrigger>														
														<MultiTrigger.Conditions>
															<Condition Property="IsMouseOver" Value="True"/>
															--><!--<Condition Property="Background" Value="{x:Static SystemColors.HighlightBrushKey}"/>--><!--
														</MultiTrigger.Conditions>
														<MultiTrigger.Setters>
															--><!--<Setter Property="Background" Value="#6470A3AC"/>--><!--
															<Setter Property="Foreground" Value="White"/>
															<Setter Property="Background" Value="LightCoral"/>
															<Setter Property="FontWeight" Value="Bold"/>
															<Setter Property="FontSize" Value="14"/>
														</MultiTrigger.Setters>
													</MultiTrigger>
													<MultiTrigger>
														<MultiTrigger.Conditions>
															<Condition Property="IsMouseOver" Value="False"/>
															--><!--<Condition Property="DataGridItem.IsSelected" Value="True"/>--><!--
														</MultiTrigger.Conditions>
														<MultiTrigger.Setters>
															--><!--<Setter Property="Background" Value="#6470A3AC"/>--><!--
															<Setter Property="Foreground" Value="Black"/>
															--><!--<Setter Property="Background" Value="LightCoral"/>--><!--
															<Setter Property="FontWeight" Value="Bold"/>
															<Setter Property="FontSize" Value="14"/>
														</MultiTrigger.Setters>
													</MultiTrigger>
												</Style.Triggers>-->

											</Style>
										</TextBlock.Style>
									</TextBlock>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>

						<DataGridTemplateColumn>
							<DataGridTemplateColumn.Header>
							<TextBlock Text="Int %" 
								     TextAlignment="Center"
								Foreground="Red" 
							     Background="White"/>
							</DataGridTemplateColumn.Header>
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate >
									<TextBlock x:Name="Interestfield" Text="{Binding IntRate}"
									    PreviewMouseMove="Datagrid_PreviewMouseMove"
								     TextAlignment="Center"
										     />
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>

						<DataGridTemplateColumn>
							<DataGridTemplateColumn.Header>
								<TextBlock Text="Opened" 
								     TextAlignment="Center"
								     Foreground="Red" 
								     Background="White"/>
							</DataGridTemplateColumn.Header>
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<TextBlock x:Name="odatefield" 
										Text="{Binding ODate, Converter={StaticResource DateConv}}"
										    PreviewMouseMove="Datagrid_PreviewMouseMove"
								     TextAlignment="Center"
										     />
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>

						<DataGridTemplateColumn>
							<DataGridTemplateColumn.Header>
								<TextBlock Text="Closed" 
								     TextAlignment="Center"
								     HorizontalAlignment="Center"									    
								     Foreground="Red" 
								     Background="White"/>
							</DataGridTemplateColumn.Header>
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<TextBlock x:Name="cdatefield" 
										Text="{Binding CDate, Converter={StaticResource DateConv}}"
										    PreviewMouseMove="Datagrid_PreviewMouseMove"
								     TextAlignment="Center"
										     />
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
					</DataGrid.Columns>
				</DataGrid>

				<!--#region LISTBOX ITSELF-->

				<!--#endregion LISTBOX ITSELF-->

				<!--// A Pseudo button with rounded corners -->
				<Border x:Name="ClearBtn"
					Grid.Row="2"
					Grid.Column="1"
					Grid.ColumnSpan="1"
					CornerRadius="8"
					Margin="0,10,0,0"
					Width="100"
					  Height="40"
					HorizontalAlignment="Right"
					PreviewMouseLeftButtonDown="ClearBtn_PreviewMouseLeftButtonDown"
					Style="{StaticResource Border1Style}" >
					<ContentPresenter Name ="ThisContent" >
						<ContentPresenter.Content>
							<TextBlock Text="Reload"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"								
							     FontSize="18"
							     FontWeight="DemiBold"
							Margin="0,0,0,0"/>
						</ContentPresenter.Content>
					</ContentPresenter>
				</Border>

				<!--// A Pseudo button with rounded corners -->
				<Border x:Name="OpenAllBtn"
					Grid.Row="2"
					Grid.Column="1"
					Grid.ColumnSpan="1"
					CornerRadius="8"
					Margin="0,10,105,0"
					Width="100"
					  Height="40"
					HorizontalAlignment="Right"
					  PreviewMouseLeftButtonDown="OpenAllBtn_PreviewMouseLeftButtonDown"
					Style="{StaticResource Border1Style}" >
					<ContentPresenter Name ="ThisExpander" >
						<ContentPresenter.Content>
							<TextBlock Text="Expand All"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"								
							     FontSize="18"
							     FontWeight="DemiBold"
							Margin="0,0,0,0"/>
						</ContentPresenter.Content>
					</ContentPresenter>
				</Border>

				<!--// A Pseudo button with rounded corners -->
				<Border x:Name="ToggleViews"
					Grid.Row="2"
					Grid.Column="1"
					Grid.ColumnSpan="1"
					CornerRadius="8"
					Margin="0,10,210,0"
					Width="120"
					  Height="40"
					HorizontalAlignment="Right"
					  PreviewMouseLeftButtonDown="ToggleBtn_PreviewMouseLeftButtonDown"
					Style="{StaticResource Border1Style}" >
					<ContentPresenter Name ="GridExpander" >
						<ContentPresenter.Content>
							<TextBlock Text="Toggle View"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"								
							     FontSize="18"
							     FontWeight="DemiBold"
							Margin="0,0,0,0"/>
						</ContentPresenter.Content>
					</ContentPresenter>
				</Border>
				<Border x:Name="LbBrdr"
					Grid.Row="1"
					Grid.Column="1"
					Grid.ColumnSpan="1"
					Grid.RowSpan="1"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					CornerRadius="16"
					BorderThickness="0"
					BorderBrush="Red" 
					Padding="12"
					Margin="0,0,0,0">

					<ListBox x:Name="UCListbox"
						ScrollViewer.VerticalScrollBarVisibility="Visible"
						ScrollViewer.CanContentScroll="True"
						HorizontalContentAlignment="Stretch"
						VerticalContentAlignment="Stretch"
						BorderThickness="1"
						BorderBrush="Red" 
						SelectionChanged="UCListbox_SelectionChanged"   
						MouseDoubleClick="UCListbox_MouseDoubleClick"
						PreviewMouseDown="DbListbox_PreviewMouseLeftButtonDown"						   
						Margin="0,0,0,-15"
						   Visibility="Hidden"
						Padding="1">
						<!--Style="{StaticResource LbStyle}"-->
						<!--<ListBoxItem x:Name="ListboxItem"
							Style="{StaticResource LbItemStyle}"
								 Selected="UCListbox_Selected"/>-->

						<!--<ScrollBar
							Orientation="Vertical">
						</ScrollBar>-->
						<!--DataContext="{Binding BindsDirectlyToSource=True}"-->
						<ListBox.ItemTemplate>

							<DataTemplate
								x:Name="dTemplate"
								
								>
								<!--</Expander>-->
								<!--<Expander Name="expander"
									IsExpanded="{Binding ItemExpanded}"
									    Expanded="Expander_Expanded"
									    Collapsed="Expander_Collapsed"
									Grid.Row="0"
									Grid.Column="1"
									Header="Account Detaiis"
									Foreground="White"
									>-->

								<Border x:Name="_Border"
										BorderBrush="{StaticResource Green4}"
										BorderThickness="2"								
										Padding="2" >
									<!--Outermost stackpanel-->
									<StackPanel x:Name="LbItem"
											Orientation="Horizontal"
											PreviewMouseLeftButtonDown="LbItem_PreviewMouseLeftButtonDown"
										Style="{StaticResource StackPanelstyle1}">

										<StackPanel Orientation="Horizontal">
											<TextBlock Text=" "
											Style="{StaticResource tbItemstyle1}" />
											<TextBlock Text="{Binding CustNo, FallbackValue=1055001}" 
											Height="20"
											Padding="0"
											Width="60"
											Style="{StaticResource tbItemstyle1}"/>
											<TextBlock Text=":" 												
											Padding="14"
     											Style="{StaticResource tbItemstyle1}"/>
											<TextBlock  Text="{Binding BankNo, FallbackValue=4032521}" 
											Padding="14"
											Style="{StaticResource tbItemstyle1}"/>
										</StackPanel>

										<StackPanel Orientation="Horizontal">
											<TextBlock Text="  " 
											Style="{StaticResource tbItemstyle1}"/>
											<TextBox Text="{Binding AcType, FallbackValue=1, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
											VerticalContentAlignment="Center"
											HorizontalContentAlignment="Center"
											Height="30"
											Width="30"
												PreviewKeyDown="TextBox_PreviewKeyDown"  
											Style="{StaticResource tboxItemstyle1}"/>
											<TextBlock Text="   "
											Style="{StaticResource tbItemstyle1}"/>
											<TextBlock  Text="{Binding Balance, FallbackValue=23456.71}" 
											Style="{StaticResource tbItemstyle2}"
											HorizontalAlignment="Center"
											Padding="14"
											Width="90" 
											FontSize="16"/>
											<TextBlock Text=" "/>
											<TextBox  Text="{Binding IntRate, FallbackValue=3.21, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
												Padding="0,4,0,0"
												Height="30"
												HorizontalAlignment="Center"
												HorizontalContentAlignment="Center"
												Width="50" 
												FontSize="14"
												Style="{StaticResource tboxItemstyle1}"/>
										</StackPanel>

										<StackPanel Orientation="Vertical"
										Style="{StaticResource StackPanelstyle1}">
											<StackPanel Orientation="Horizontal">
												<TextBlock Text="   " />
												<TextBlock  Text="{Binding ODate, Converter={StaticResource DateConv}}"
											Foreground="DarkGoldenrod" 
											Padding="5"
											Height="21"
											Width="70"/>
											</StackPanel>
											<StackPanel Orientation="Horizontal">
												<TextBlock Text="   " />
												<TextBlock  Text="{Binding CDate, Converter={StaticResource DateConv}}"
													Padding="5"
													Height="18"
													Foreground="DarkRed" Width="70"/>
											</StackPanel>
										</StackPanel>
									</StackPanel>
								</Border>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
					<!--</Viewbox>-->
				</Border>
			</Grid>
		</Border>
	</Grid>
</Window>