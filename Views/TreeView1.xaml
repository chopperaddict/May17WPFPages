<Window x:Class="WPFPages.Views.TreeView1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFPages.Views"
	  Loaded="Window_Loaded"
	  mc:Ignorable="d"

		Title="TreeView 1" Height="350" Width="525">

	<Window.Resources>
		<Style x:Key="TreeViewItemFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Width" Value="19"/>
			<Setter Property="Height" Value="13"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Width="19" Height="13" Background="Transparent">
							<Border Width="9" Height="9" SnapsToDevicePixels="true" BorderBrush="#FF7898B5" BorderThickness="1" CornerRadius="1">
								<Border.Background>
									<LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
										<GradientStop Color="White" Offset=".2"/>
										<GradientStop Color="#FFC0B7A6" Offset="1"/>
									</LinearGradientBrush>
								</Border.Background>
								<Path x:Name="ExpandPath" Fill="Black" Margin="1,1,1,1" Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
							</Border>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Data" TargetName="ExpandPath" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type TreeViewItem}">
			<Setter Property="Background" Value="Red"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="1,0,0,0"/>
			<Setter Property="Foreground" Value="Yellow"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeViewItem}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition MinWidth="19" Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
							<Border x:Name="Bd" SnapsToDevicePixels="true" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
								<ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
							</Border>
							<ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="false">
								<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="HasItems" Value="false">
								<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
							</Trigger>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="Green"/>
								<Setter Property="Foreground" Value="Black"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="Blue"/>
								<Setter Property="Foreground" Value="White"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
					<Setter Property="ItemsPanel">
						<Setter.Value>
							<ItemsPanelTemplate>
								<VirtualizingStackPanel/>
							</ItemsPanelTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>


	<Grid >
		<TreeView x:Name="foldersItem"
			    SelectedItemChanged="foldersItem_SelectedItemChanged"			    
			    Width="Auto" 	
			    DataContext="{Binding}"
			    Background="{StaticResource Blue9}"
			    BorderBrush="{StaticResource Blue7}"
			    Foreground="{StaticResource White0}">
			<!--<TreeViewItem x:Name="tvItem">-->
				<!--<HierarchicalDataTemplate DataType="{x:Type local:bank}" ItemsSource="{Binding bankscollection}">-->
					<!--<StackPanel x:Name="DetailItem" Orientation="Horizontal">
						<Image Source="cloud.png"/>
						<TextBlock x:Name="DetCustno" Text="{Binding bank.SecBankno}" Background="Blue" />
						<TextBlock Text="{Binding bank.SecActype}" Background="Red"/>
						<TextBlock Text="{Binding bank.SecBalance}" />
						<TextBlock Text="{Binding bank.SecOdate}" />
					</StackPanel>-->
				<!--</HierarchicalDataTemplate>-->
			<!--</TreeViewItem>-->
			<!--<TreeViewItem.Header>-->
					<!--<StackPanel Orientation="Horizontal">
						<Image  Source="cloud.png" Width="20" Height="20"/>
						<TextBlock x:Name="tv1textblock" 
							     Text="Multi Accounts"
							     Padding="10,1,10,0"
							     />
					</StackPanel>-->
				<!--</TreeViewItem.Header>
				<DataTemplate>
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="{Binding custno}"/>
						<TextBlock Text="{Binding bankno}"/>
						<TextBlock Text="{Binding actype}"/>
						<TextBlock Text="{Binding balance}"/>
					</StackPanel>
				</DataTemplate>
			</TreeViewItem.Header>-->
		</TreeView>
	</Grid>

	<!--<TreeViewItem.Resources>
					<Style TargetType="TreeViewItem">
						<Setter Property="Foreground" Value="{StaticResource Red2}"/>
						<Setter Property="FontWeight" Value="DemiBold"/>
						<Setter Property="FontSize" Value="14"/>
						<Setter Property="HeaderTemplate">
							<Setter.Value>
								<DataTemplate>
									<Border
									Padding="10,0,10,0">
										<TextBlock Text="{Binding}"
										     Name="tbstyle1"
											     
									Foreground="{StaticResource Black1}"
										Style="{StaticResource tbstyle}"/>


										<Border.Style>
											<Style TargetType="Border">
												<Setter Property="BorderThickness" Value="0.2"/>
												<Setter Property="BorderBrush" Value="Transparent"/>
												<Style.Triggers>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition 
															Binding="{Binding RelativeSource={RelativeSource Self},
							                                                  Path=IsMouseOver}" Value="True"/>
															<Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
														        Path=IsSelected}" Value="False"/>
														</MultiDataTrigger.Conditions>
														--><!--<Setter Property="Background" Value="{StaticResource Red9}"/>--><!--
														<Setter Property="BorderBrush" Value="{StaticResource White0}"/>
													</MultiDataTrigger>
													--><!--<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition 
															Binding="{Binding RelativeSource={RelativeSource Self},
							                                                  Path=IsMouseOver}" Value="True"/>
														<Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
														        Path=IsSelected}" Value="True"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="Background" Value="{StaticResource Green3}"/>
													<Setter Property="BorderBrush" Value="{StaticResource White0}"/>
												</MultiDataTrigger>--><!--
												</Style.Triggers>
											</Style>

										</Border.Style>
									</Border>
								</DataTemplate>
							</Setter.Value>
						</Setter>

					</Style>					
				</TreeViewItem.Resources>-->
			<!--</TreeViewItem>-->
			<!--<TreeView.Resources>-->
				<!--<Style TargetType="TreeViewItem">
					<Setter Property="Foreground" Value="{StaticResource Black0}"/>
					<Setter Property="FontWeight" Value="DemiBold"/>
					<Setter Property="FontSize" Value="14"/>
					<Setter Property="HeaderTemplate">
						<Setter.Value>
							<DataTemplate>
								<Border
									Padding="10,0,10,0">
									<TextBlock Text="{Binding}"
										     Name="tbstyle1"
									Foreground="{StaticResource Black1}"
										Style="{StaticResource tbstyle}"/>


									<Border.Style>
										<Style TargetType="Border">
											<Setter Property="BorderThickness" Value="0.2"/>
											<Setter Property="BorderBrush" Value="Transparent"/>
											<Style.Triggers>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition 
															Binding="{Binding RelativeSource={RelativeSource Self},
							                                                  Path=IsMouseOver}" Value="True"/>
														<Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
														        Path=IsSelected}" Value="False"/>
													</MultiDataTrigger.Conditions>
													--><!--<Setter Property="Background" Value="{StaticResource Red9}"/>--><!--
													<Setter Property="BorderBrush" Value="{StaticResource White0}"/>
												</MultiDataTrigger>
												--><!--<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition 
															Binding="{Binding RelativeSource={RelativeSource Self},
							                                                  Path=IsMouseOver}" Value="True"/>
														<Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
														        Path=IsSelected}" Value="True"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="Background" Value="{StaticResource Green3}"/>
													<Setter Property="BorderBrush" Value="{StaticResource White0}"/>
												</MultiDataTrigger>--><!--
											</Style.Triggers>
										</Style>

									</Border.Style>
								</Border>
							</DataTemplate>
						</Setter.Value>
					</Setter>
				</Style>-->
			<!--<TreeView.Resources>
				<Style TargetType="{x:Type TreeViewItem}">
					<Setter Property="HeaderTemplate">
						<Setter.Value>
							<DataTemplate>
								<StackPanel Orientation="Horizontal"
									     PreviewMouseMove="StackPanel_PreviewMouseMove"
										>
									<Image Name="img"  Width="20" Height="20" Stretch="Fill"
										    Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
										    AncestorType={x:Type TreeViewItem}},
										    Path=Header,
										    Converter={x:Static local:HeaderToImageConverter.Instance},	ConverterParameter=type}"
										/>				
									<TextBlock Text="{Binding}" 
										     Background="{Binding}"
										     PreviewMouseLeftButtonDown="TextBlock_PreviewMouseLeftButtonDown"
										     PreviewMouseLeftButtonUp="TextBlock_PreviewMouseLeftButtonUp"
										     Foreground="{StaticResource White0}"
										    Margin="5,0" />
								</StackPanel>
							</DataTemplate>
						</Setter.Value>
					</Setter>	
				</Style>
				
				
			</TreeView.Resources>-->


</Window>
