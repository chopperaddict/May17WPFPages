<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFPages.Dicts">

	<Style x:Key="MyEllipses" TargetType="Ellipse">
		<!--<Setter Property="OverridesDefaultStyle" Value="true" />-->
		<!--These do nothing at all, but the do demonstrate how to use
			the {Binding xxx} to pass user defined values thru-->
		<!--<Setter Property="FontSize" Value="{Binding FontSize}" />
			<Setter Property="Height" Value="{Binding Height}" />
			<Setter Property="Width" Value="{Binding Width}" />-->
		<Setter Property="Margin" Value="5" />
		<Setter Property="Fill">
			<Setter.Value>
				<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
					<GradientStop Color="Red" Offset="0.25" />
					<GradientStop Color="#FFFFD190" Offset="0.75" />
					<GradientStop Color="Black" Offset="1" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<!--<Setter Property="{Binding Ellipse2.IsVisible}" Value="Collapsed" />-->
				<Setter Property="Fill">
					<Setter.Value>
						<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
							<GradientStop Color="#FFe57218" Offset=".25" />
							<GradientStop Color="#FFd6e868" Offset="0.75" />
							<GradientStop Color="#FF291711" Offset="1" />
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--Creates a white Vignette around the controls image-->
	<Style x:Key="ImageVignette" TargetType="Image">

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Opacity" Value="1" />
				<Setter Property="OpacityMask">
					<Setter.Value>
						<RadialGradientBrush>
							<GradientStop Color="Transparent" Offset="1.8" />
							<GradientStop Color="White" Offset=".5" />
							<GradientStop Color="Transparent" Offset="1.4" />
						</RadialGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="false">
				<Setter Property="Opacity" Value="1" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--This style is not SEEN by any TextBlock that
	use the IsHittestVisible=false option-->
	<Style x:Key="EllipseTextBlock" TargetType="TextBlock">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="IsHitTestVisible" Value="false" />
		<Setter Property="Background" Value="Transparent" />

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Opacity" Value="0" />
				<Setter Property="Foreground" Value="Black" />
				<Setter Property="Background" Value="Black" />
				<!--<Setter Property="Ellipse.Style" Value="{StaticResource MyEllipses}" />-->
				<!--<Setter Property="IsHitTestVisible" Value="false" />-->
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="checkBoxStyle1" TargetType="CheckBox">
		<Setter Property="OverridesDefaultStyle" Value="False" />

		<Setter Property="Foreground" Value="Black"	/>
		<Setter Property="Background" Value="Blue"	/>
		<Style.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Background" Value="DarkGreen" />
			</Trigger>
			<Trigger Property="IsChecked" Value="False">
				<Setter Property="Background" Value="Blue" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="CheckBoxTextHandler" TargetType="TextBlock">
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="Black" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--<Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
				 -->
	<!--This HIDES the focus rectangle (StrokeThickness=0)-->
	<!--
                    <Rectangle Margin="2" SnapsToDevicePixels="true"
						 Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
						 StrokeThickness="0"
						 StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	-->
	<!--Set up the default colors for all generic buttons-->
	<!--
	<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Red" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="White" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="Green" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="Yellow" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />

    -->
	<!--Define the button itself-->
	<!--
	<Style x:Key="DefButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
					   Background="{TemplateBinding Background}"
					   SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
								  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
								  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
						-->
	<!--I added this to have gradient change on mouseover-->
	<!--
						<Setter Property="Background">
							<Setter.Value>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Color="#FFFFD190" Offset="0.35" />
									<GradientStop Color="Green" Offset="0.95" />
									<GradientStop Color="#FFFFD190" Offset="1" />
								</LinearGradientBrush>
							</Setter.Value>
						</Setter>
					</Trigger>
					<Trigger Property="IsPressed" Value="True">
						<Setter Property="Background">
							<Setter.Value>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Color="#FFFFD190" Offset="0.35" />
									<GradientStop Color="Orange" Offset="0.95" />
									<GradientStop Color="#FFFFD190" Offset="1" />
								</LinearGradientBrush>
							</Setter.Value>
						</Setter>
						-->
	<!--<Setter TargetName="Content" Property="RenderTransform">
							<Setter.Value>
								<TranslateTransform Y="1.0" />
							</Setter.Value>
						</Setter>-->
	<!--
					</Trigger>
					<Trigger Property="IsDefaulted" Value="True">
						<Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
					</Trigger>
					<Trigger Property="IsFocused" Value="True">
						<Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
					</Trigger>
					<Trigger Property="IsEnabled" Value="False">
						<Setter TargetName="border" Property="Opacity" Value="0.7" />
						<Setter Property="Foreground" Value="Gray" />
					</Trigger>
				</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
</ResourceDictionary>
