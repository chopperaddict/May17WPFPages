<Page
	x:Class="WPFPages.BlankPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:WPFPages"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	Title="BlankPage"
	d:DesignHeight="450"
	d:DesignWidth="800"
	Background="Beige"
	mc:Ignorable="d">

	<Grid x:Name="MasterGrid">
		<!--  Background for entire page  -->
		<Grid.Background>
			<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
				<GradientStop Offset="0" Color="Black" />
				<GradientStop Offset="0.972" Color="Gainsboro" />
			</LinearGradientBrush>
		</Grid.Background>

		<Grid.RowDefinitions>
			<RowDefinition Height="5" />
			<RowDefinition Height="*" />
			<RowDefinition Height="10" />
		</Grid.RowDefinitions>

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="10" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="10" />
		</Grid.ColumnDefinitions>

		<Border
			Grid.Row="1"
			Grid.Column="1"
			BorderBrush="Black"
			BorderThickness="0">
			<StackPanel
				Width="500"
				Height="300"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				Orientation="Vertical">

				<!--
					This actually lets me force changes on a DIFFERENT CONTROL
					Here the "other" button and a TextBlock change color on mouseover of a specific button
				-->

				<!--
					CAVEAT - Ther logic is a bit weird, but basically n the code below I have 2 buttons and 2 TextBlocks
					TxtBlock1, Btn1, Btn2, TxtBlock2,
					If I mouse over Btn1, Btn2 turns red, and TxtBlock2 changes to White on Green
					If I mouse over Btn2, Btn1 turns green, and TxtBlock2 chnages to White on Blue
					NB The Textblock Foreground color changes do NOT work for some reason.
					
					So basically, the code logic is as follows :
					The TxtBlock1 Trigger watches for Mouseover of a specified control and when triggered by that control
					(of whatever type) it implements all the Setters defined therein.
				-->
				<!--  System.Windows.Data Error: 4 : Cannot find source for binding with reference 'RelativeSource FindAncestor, AncestorType='System.Windows.Controls.DataGrid', AncestorLevel='1''. BindingExpression:Path=HeadersVisibility; DataItem=null; target element is 'DataGridRowHeader' (Name=''); target property is 'Visibility' (type 'Visibility')  -->

				<!--  TEMP COMMENTED OUT  -->

				<TextBlock
					Name="TxtBlock1"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Text="TxtBlock1 - This shows how to react with other 'Bound' controls from within xaml code !">
					<TextBlock.Style>
						<Style TargetType="TextBlock">
							<Setter Property="OverridesDefaultStyle" Value="True" />
							<Setter Property="Foreground" Value="White" />
							<Style.Triggers>
								<!--
									So, we are listening for the Btn1(Below) Mouseover, & then these (TextBlock) Setters
									are implemented but the Button's Color changes relies on the Buttons
									code listener, so in this case Btn2
								-->
								<DataTrigger Binding="{Binding ElementName=Btn1, Path=IsMouseOver}" Value="True">
									<Setter Property="Background" Value="Blue" />
									<Setter Property="Foreground" Value="Black" />
									<Setter Property="FontWeight" Value="Bold" />
								</DataTrigger>
								<DataTrigger Binding="{Binding ElementName=TxtBlock2, Path=IsMouseOver}" Value="True">
									<Setter Property="Background" Value="Magenta" />
									<Setter Property="Foreground" Value="Green" />
									<Setter Property="FontWeight" Value="Bold" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>

				<!--  This TextBlock does NOT listen out for anything...  -->
				<TextBlock
					Name="TxtBlk"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Text="Read the comments in the code of BlankPage.xaml for full details of how this works.">
					<TextBlock.Style>
						<Style TargetType="TextBlock">
							<Setter Property="OverridesDefaultStyle" Value="True" />
							<Setter Property="Foreground" Value="Gold" />
						</Style>
					</TextBlock.Style>

				</TextBlock>
				<TextBlock
					Name="TxtBlk3"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Text="Mouseing over the Text above, or the bottom TextBlock2 line also trigger changes.">
					<TextBlock.Style>
						<Style TargetType="TextBlock">
							<Setter Property="Foreground" Value="Red" />
						</Style>
					</TextBlock.Style>
				</TextBlock>

				<TextBlock
					Name="TxtBlk2"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					FontWeight="ExtraBlack"
					Text="This and the Red line above do NOT change at all.">
					<TextBlock.Style>
						<Style TargetType="TextBlock">
							<Setter Property="Foreground" Value="Green" />
						</Style>
					</TextBlock.Style>
				</TextBlock>
				<Button
					Name="Btn1"
					Width="150"
					Height="37.268"
					Margin="20"
					HorizontalAlignment="Center"
					VerticalAlignment="Top"
					Content="Btn1 - Mouse over me">
					<Button.Style>
						<Style TargetType="Button">
							<Style.Triggers>
								<!--
									This Button only changes color to the specified GREEN when Btn2 Mouseover occurs
									as this is what we are listening out for below :-
									
									When this occurs, these (Button) Setters are implemented on THIS control and this
									Button's BackGround is changed to Green (in this case)
								-->
								<DataTrigger Binding="{Binding ElementName=Btn2, Path=IsMouseOver}" Value="True">
									<Setter Property="Background" Value="Green" />
								</DataTrigger>
								<DataTrigger Binding="{Binding ElementName=TxtBlock1, Path=IsMouseOver}" Value="True">
									<!--  These BOTH WORK  -->
									<Setter Property="Background" Value="Magenta" />
									<Setter Property="Foreground" Value="Red" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>


				<Button
					Name="Btn2"
					Width="150"
					Height="37.268"
					Margin="20"
					HorizontalAlignment="Center"
					VerticalAlignment="Bottom"
					Content="Btn2- Try me Too">
					<Button.Style>
						<Style TargetType="Button">
							<Style.Triggers>
								<!--
									This Button only changes color to the specified GREEN when Btn1 Mouseover (above)
									occurs as this is what we are listening out for below :-
									
									When this occurs, these (Button) Setters are implemented on THIS control and this
									Button's BackGround is changed to Red with BOLD White Text (in this case)
									The command format is
									Binding=Control we are listening for Value to match
									Setter is what happens to THIS CONTROL
								-->
								<DataTrigger Binding="{Binding ElementName=Btn1, Path=IsMouseOver}" Value="True">
									<Setter Property="Background" Value="Red" />
									<Setter Property="Foreground" Value="White" />
									<Setter Property="FontWeight" Value="Bold" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>

				<TextBlock
					Name="TxtBlock2"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Foreground="White"
					Text="TxtBlock2 - This shows how to refer to other controls from within xaml code !">
					<TextBlock.Style>
						<Style TargetType="TextBlock">
							<Style.Triggers>
								<!--  So, when Btn2 Mouseover occurs, these Setters are implemented  -->
								<DataTrigger Binding="{Binding ElementName=Btn2, Path=IsMouseOver}" Value="True">
									<Setter Property="Background" Value="green" />
								</DataTrigger>
								<DataTrigger Binding="{Binding ElementName=TxtBlock1, Path=IsMouseOver}" Value="True">
									<Setter Property="Background" Value="Black" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>
				<TextBox Width="120" />
			</StackPanel>
		</Border>
	</Grid>
</Page>
